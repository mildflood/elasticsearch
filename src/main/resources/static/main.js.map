{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_dialogmodal/dialogmodal.component.html","webpack:///./src/app/_dialogmodal/dialogmodal.component.less","webpack:///./src/app/_dialogmodal/dialogmodal.component.ts","webpack:///./src/app/_dialogmodal/dialogmodal.module.ts","webpack:///./src/app/_dialogmodal/dialogmodal.service.ts","webpack:///./src/app/_dialogmodal/index.ts","webpack:///./src/app/accutacytest/accuracyTest.css","webpack:///./src/app/accutacytest/accuracyTest.html","webpack:///./src/app/accutacytest/accuracyTestComponent.ts","webpack:///./src/app/accutacytest/accuracyTestService.ts","webpack:///./src/app/accutacytest/accuracytestitem.ts","webpack:///./src/app/admin/admin.html","webpack:///./src/app/admin/adminComponent.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/domain/editExpression.ts","webpack:///./src/app/domain/groupTermMapInformation.ts","webpack:///./src/app/domain/home.ts","webpack:///./src/app/domain/mappedEntity.ts","webpack:///./src/app/domain/status.ts","webpack:///./src/app/domain/termMap.ts","webpack:///./src/app/domain/termMapInformation.ts","webpack:///./src/app/domain/termRule.ts","webpack:///./src/app/export/export.html","webpack:///./src/app/export/exportComponent.ts","webpack:///./src/app/export/exportService.ts","webpack:///./src/app/featurehome/featurehome.component.css","webpack:///./src/app/featurehome/featurehome.component.html","webpack:///./src/app/featurehome/featurehome.component.ts","webpack:///./src/app/featurehome/highlight.pipe.ts","webpack:///./src/app/featurehome/resizable.directive.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.html","webpack:///./src/app/home/homeComponent.ts","webpack:///./src/app/home/homeService.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manageTerm/manageTerm.html","webpack:///./src/app/manageTerm/manageTermComponent.ts","webpack:///./src/app/manageTerm/manageTermService.ts","webpack:///./src/app/processingTerms/processingTerms.html","webpack:///./src/app/processingTerms/processingTermsComponent.ts","webpack:///./src/app/processingTerms/processingTermsService.ts","webpack:///./src/app/profile/create-profile/create-profile.component.css","webpack:///./src/app/profile/create-profile/create-profile.component.html","webpack:///./src/app/profile/create-profile/create-profile.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.ts","webpack:///./src/app/profile/share-preferences/share-preferences.component.css","webpack:///./src/app/profile/share-preferences/share-preferences.component.html","webpack:///./src/app/profile/share-preferences/share-preferences.component.ts","webpack:///./src/app/resolvers/completecompanylist-resolver.service.ts","webpack:///./src/app/resolvers/termlist-resolver.service.ts","webpack:///./src/app/resolvers/termrulecategorylist-resolver.service.ts","webpack:///./src/app/services/common.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/app/status/status.css","webpack:///./src/app/status/status.html","webpack:///./src/app/status/statusComponent.ts","webpack:///./src/app/status/statusService.ts","webpack:///./src/app/submitFeedback/submitFeedback.html","webpack:///./src/app/submitFeedback/submitFeedbackComponent.ts","webpack:///./src/app/submitFeedback/submitFeedbackService.ts","webpack:///./src/app/term-results/term-results.component.css","webpack:///./src/app/term-results/term-results.component.html","webpack:///./src/app/term-results/term-results.component.ts","webpack:///./src/app/utils/utilService.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"jw-modal\\\">\\r\\n    <div class=\\\"jw-modal-body\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"jw-modal-background\\\"></div>\"","module.exports = \"/* MODAL STYLES\\n-------------------------------*/\\njw-modal {\\n  /* modals are hidden by default */\\n  display: none;\\n}\\njw-modal .jw-modal {\\n  /* modal container fixed across whole screen */\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  /* z-index must be higher than .jw-modal-background */\\n  z-index: 800;\\n  /* enables scrolling for tall modals */\\n  overflow: auto;\\n}\\njw-modal .jw-modal .jw-modal-body {\\n  padding: 20px;\\n  background: #fff;\\n  min-width: 600px;\\n  max-width: 80%;\\n  /* margin exposes part of the modal background */\\n  margin: 200px;\\n}\\njw-modal .jw-modal-background {\\n  /* modal background fixed across whole screen */\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  /* semi-transparent black  */\\n  background-color: #000;\\n  opacity: 0.65;\\n  /* z-index must be below .jw-modal and above everything else  */\\n  z-index: 700;\\n}\\nbody.jw-modal-open {\\n  /* body overflow is hidden to hide main scrollbar when modal window is open */\\n  overflow: hidden;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2RpYWxvZ21vZGFsL2RpYWxvZ21vZGFsLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9fZGlhbG9nbW9kYWwvQzovRGV2L2dpdC9lbGFzdGljc2VhcmNoL21heGRzLXdlYi9zcmMvYXBwL19kaWFsb2dtb2RhbC9kaWFsb2dtb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtnQ0FDZ0M7QUNDaEM7RURDRSxpQ0FBaUM7RUNDL0IsYUFBQTtBRENKO0FDSEE7RURLRSw4Q0FBOEM7RUNDeEMsZUFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RURDTixxREFBcUQ7RUNFL0MsWUFBQTtFREFOLHNDQUFzQztFQ0doQyxjQUFBO0FERFI7QUNmQTtFQW1CWSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUREVixnREFBZ0Q7RUNJdEMsYUFBQTtBREZaO0FDdkJBO0VEeUJFLCtDQUErQztFQ016QyxlQUFBO0VBQ0EsTUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFREpOLDRCQUE0QjtFQ090QixzQkFBQTtFQUNBLGFBQUE7RURMTiwrREFBK0Q7RUNRekQsWUFBQTtBRE5SO0FDVUE7RURSRSw2RUFBNkU7RUNVM0UsZ0JBQUE7QURSSiIsImZpbGUiOiJzcmMvYXBwL19kaWFsb2dtb2RhbC9kaWFsb2dtb2RhbC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIE1PREFMIFNUWUxFU1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5qdy1tb2RhbCB7XG4gIC8qIG1vZGFscyBhcmUgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgZGlzcGxheTogbm9uZTtcbn1cbmp3LW1vZGFsIC5qdy1tb2RhbCB7XG4gIC8qIG1vZGFsIGNvbnRhaW5lciBmaXhlZCBhY3Jvc3Mgd2hvbGUgc2NyZWVuICovXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICAvKiB6LWluZGV4IG11c3QgYmUgaGlnaGVyIHRoYW4gLmp3LW1vZGFsLWJhY2tncm91bmQgKi9cbiAgei1pbmRleDogODAwO1xuICAvKiBlbmFibGVzIHNjcm9sbGluZyBmb3IgdGFsbCBtb2RhbHMgKi9cbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5qdy1tb2RhbCAuanctbW9kYWwgLmp3LW1vZGFsLWJvZHkge1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtaW4td2lkdGg6IDYwMHB4O1xuICBtYXgtd2lkdGg6IDgwJTtcbiAgLyogbWFyZ2luIGV4cG9zZXMgcGFydCBvZiB0aGUgbW9kYWwgYmFja2dyb3VuZCAqL1xuICBtYXJnaW46IDIwMHB4O1xufVxuanctbW9kYWwgLmp3LW1vZGFsLWJhY2tncm91bmQge1xuICAvKiBtb2RhbCBiYWNrZ3JvdW5kIGZpeGVkIGFjcm9zcyB3aG9sZSBzY3JlZW4gKi9cbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIC8qIHNlbWktdHJhbnNwYXJlbnQgYmxhY2sgICovXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIG9wYWNpdHk6IDAuNjU7XG4gIC8qIHotaW5kZXggbXVzdCBiZSBiZWxvdyAuanctbW9kYWwgYW5kIGFib3ZlIGV2ZXJ5dGhpbmcgZWxzZSAgKi9cbiAgei1pbmRleDogNzAwO1xufVxuYm9keS5qdy1tb2RhbC1vcGVuIHtcbiAgLyogYm9keSBvdmVyZmxvdyBpcyBoaWRkZW4gdG8gaGlkZSBtYWluIHNjcm9sbGJhciB3aGVuIG1vZGFsIHdpbmRvdyBpcyBvcGVuICovXG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iLCIvKiBNT0RBTCBTVFlMRVNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuanctbW9kYWwge1xuICAgIC8qIG1vZGFscyBhcmUgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgLmp3LW1vZGFsIHtcbiAgICAgICAgLyogbW9kYWwgY29udGFpbmVyIGZpeGVkIGFjcm9zcyB3aG9sZSBzY3JlZW4gKi9cbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgLyogei1pbmRleCBtdXN0IGJlIGhpZ2hlciB0aGFuIC5qdy1tb2RhbC1iYWNrZ3JvdW5kICovXG4gICAgICAgIHotaW5kZXg6IDgwMDtcblxuICAgICAgICAvKiBlbmFibGVzIHNjcm9sbGluZyBmb3IgdGFsbCBtb2RhbHMgKi9cbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAgICAgLmp3LW1vZGFsLWJvZHkge1xuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDYwMHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7XG5cbiAgICAgICAgICAgIC8qIG1hcmdpbiBleHBvc2VzIHBhcnQgb2YgdGhlIG1vZGFsIGJhY2tncm91bmQgKi9cbiAgICAgICAgICAgIG1hcmdpbjogMjAwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuanctbW9kYWwtYmFja2dyb3VuZCB7XG4gICAgICAgIC8qIG1vZGFsIGJhY2tncm91bmQgZml4ZWQgYWNyb3NzIHdob2xlIHNjcmVlbiAqL1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcblxuICAgICAgICAvKiBzZW1pLXRyYW5zcGFyZW50IGJsYWNrICAqL1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgICAgICBvcGFjaXR5OiAwLjY1O1xuXG4gICAgICAgIC8qIHotaW5kZXggbXVzdCBiZSBiZWxvdyAuanctbW9kYWwgYW5kIGFib3ZlIGV2ZXJ5dGhpbmcgZWxzZSAgKi9cbiAgICAgICAgei1pbmRleDogNzAwO1xuICAgIH1cbn1cblxuYm9keS5qdy1tb2RhbC1vcGVuIHtcbiAgICAvKiBib2R5IG92ZXJmbG93IGlzIGhpZGRlbiB0byBoaWRlIG1haW4gc2Nyb2xsYmFyIHdoZW4gbW9kYWwgd2luZG93IGlzIG9wZW4gKi9cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */\"","﻿import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { DialogModalService } from './dialogmodal.service';\r\n\r\n@Component({\r\n    selector: 'jw-modal',\r\n    templateUrl: 'dialogmodal.component.html',\r\n    styleUrls: ['dialogmodal.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DialogModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private dialogModalService: DialogModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'jw-modal') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.dialogModalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.dialogModalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DialogModalComponent } from './dialogmodal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [DialogModalComponent],\r\n    exports: [DialogModalComponent]\r\n})\r\nexport class DialogModalModule { }\r\n","﻿import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DialogModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}\r\n","﻿export * from './dialogmodal.module';\r\nexport * from './dialogmodal.service';\r\n","module.exports = \"input.customcheckbox{\\r\\n    width: 20px !important;\\r\\n    height: 20px !important;\\r\\n    margin: -9px 0px 31px 5px;\\r\\n  }\\r\\n\\r\\n  .text-align-right {\\r\\n    text-align: right !important;\\r\\n  }\\r\\n\\r\\n  .display-none {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjdXRhY3l0ZXN0L2FjY3VyYWN5VGVzdC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLDRCQUE0QjtFQUM5Qjs7RUFFQTtJQUNFLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2FjY3V0YWN5dGVzdC9hY2N1cmFjeVRlc3QuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQuY3VzdG9tY2hlY2tib3h7XHJcbiAgICB3aWR0aDogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IC05cHggMHB4IDMxcHggNXB4O1xyXG4gIH1cclxuXHJcbiAgLnRleHQtYWxpZ24tcmlnaHQge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC5kaXNwbGF5LW5vbmUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcblxyXG5cclxuICAiXX0= */\"","module.exports = \"<div>\\r\\n    <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n        fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n        <form (ngSubmit)=\\\"onSubmit(dt)\\\" style=\\\"text-align: left;\\\">\\r\\n\\r\\n            <p-autoComplete joyrideStep=\\\"searchCompany\\\" title=\\\"Company Name\\\"\\r\\n                text=\\\"This is where a user can enter a desired Company name or CIK. \\\" [style]=\\\"{'width':'420px' }\\\"\\r\\n                [inputStyle]=\\\"{'width':'420px'} \\\" placeholder=\\\"Search Company\\\" [dropdown]=\\\"false\\\"\\r\\n                [suggestions]=\\\"filteredCompany\\\" name=\\\"companyName\\\" [forceSelection]=\\\"true\\\"\\r\\n                (onSelect)=\\\"onCompanyNameChange($event)\\\"\\r\\n                (completeMethod)=\\\"searchCompany($event)\\\" [(ngModel)]=\\\"accuracyTest.companyName\\\">\\r\\n            </p-autoComplete>\\r\\n            <span style=\\\"width: 5px; padding-left: 10px;\\\"></span>\\r\\n            <p-autoComplete placeholder=\\\"Select Year\\\" [dropdown]=\\\"true\\\" [suggestions]=\\\"filteredYears\\\" name=\\\"year\\\"\\r\\n                joyrideStep=\\\"year\\\" title=\\\"Year\\\" [stepContent]=\\\"yearContent\\\" (completeMethod)=\\\"searchYears($event)\\\"\\r\\n                (onSelect)=\\\"onYearChange($event)\\\"\\r\\n                [(ngModel)]=\\\"accuracyTest.year\\\">\\r\\n            </p-autoComplete>\\r\\n            <span style=\\\"width: 5px; padding-left: 10px;\\\"></span>\\r\\n            <button joyrideStep=\\\"runTest\\\" title=\\\"Run Test\\\" text=\\\"This button executes the accuracy test.\\\"\\r\\n                class=\\\"btn btn-primary\\\" label=\\\"Save\\\" style=\\\"margin:3px\\\" (click)=\\\"dt.reset()\\\"> Run Test</button>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-5\\\" *ngIf=\\\"showTitle\\\">\\r\\n\\r\\n        <button class=\\\"btn btn-primary pull-left\\\" label=\\\"Export\\\" (click)=\\\"openlink()\\\">\\r\\n            Filing Url</button>\\r\\n\\r\\n        <button class=\\\"btn btn-primary pull-right\\\" label=\\\"Export\\\" style=\\\"margin-left:8px\\\"\\r\\n            (click)=\\\"exportTableToCSV(dt)\\\">\\r\\n            Export</button>\\r\\n        <button class=\\\"btn btn-primary pull-right\\\" label=\\\"Save\\\" style=\\\"margin-left:8px\\\"\\r\\n            (click)=\\\"saveAccuracyTestData()\\\">\\r\\n            Save</button>\\r\\n        <button class=\\\"btn btn-primary pull-right\\\" label=\\\"Research\\\" style=\\\"margin-left:8px\\\"\\r\\n            (click)=\\\"openResearchLink()\\\">\\r\\n            Research</button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-lg-12\\\" [ngClass]=\\\"{'display-none': !showTitle}\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n\\r\\n        <span *ngIf=\\\"showTitle\\\">{{accuracyTest.companyName}} 10-K</span> <a (click)=\\\"openlink()\\\"\\r\\n            style=\\\"cursor: pointer;\\\"><u>{{fillingURL}}</u></a>\\r\\n        <div [innerHTML]=\\\"htmlcontent\\\" style=\\\"border: black 1px solid; overflow: auto; max-height: 800px;\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n            <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"accuracyTestList\\\" [(selection)]=\\\"selectedAccuracyTest\\\"\\r\\n                [paginator]=\\\"false\\\" [rows]=\\\"10\\\" exportFilename=\\\"accuracyTestData\\\">\\r\\n\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n\\r\\n                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColum\\r\\n                            [ngStyle]=\\\"{'width': col.width}\\\" [pSortableColumn]=\\\"col.field\\\">\\r\\n                            <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                    ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                    ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                            </div>\\r\\n                        </th>\\r\\n\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-col let-rowIndex>\\r\\n                    <tr>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"loadBackgroundColors(col,rowData)\\\"\\r\\n                            [ngClass]=\\\"(col.field === 'csTermValue' || col.field === 'value') ? 'text-align-right' : null\\\">\\r\\n                            <span *ngIf=\\\" col.header==='CS'\\\" style=\\\" width: 8em\\\">\\r\\n                                {{rowData[col.field]}}</span>\\r\\n                            <span *ngIf=\\\"col.field==='csTermValue'\\\">\\r\\n                                {{rowData[col.field] | number}}</span>\\r\\n                            <span *ngIf=\\\"col.field==='isCheckedCS'\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"form-check-input customcheckbox\\\"\\r\\n                                    (click)=\\\"csCheckboxselect($event,rowData)\\\" />\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"col.header==='MAXDS'\\\">\\r\\n                                <a href=\\\"javascript:void(0)\\\" (click)=\\\"goManageTermPage(rowData[col.field])\\\">\\r\\n                                  {{rowData[col.field]}}\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <!--<span *ngIf=\\\"col.header==='MAXDS'\\\"> {{rowData[col.field]}}</span>-->\\r\\n                            <span *ngIf=\\\"col.field==='value'\\\">\\r\\n                                {{rowData[col.field] | number}}</span>\\r\\n                            <span *ngIf=\\\"col.header==='Resolved Expression'\\\"> {{rowData[col.field]}}</span>\\r\\n                            <span *ngIf=\\\"col.field==='isCheckedMaxDS'\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"form-check-input customcheckbox\\\"\\r\\n                                    (click)=\\\"maxDsCheckboxselect($event,rowData)\\\" />\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"col.header==='Notes'\\\">\\r\\n                                <input type=\\\"text\\\" value=\\\"\\\" style=\\\"width: 5em;\\\" [(ngModel)]=\\\"rowData[col.field]\\\" />\\r\\n                            </span>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n            </p-table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #yearContent>\\r\\n    <div>This is where the user can select a desired year. </div>\\r\\n    <div>Default is current year.\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { AccuracyTestService } from './accuracyTestService';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AccuracyTestItem } from './accuracytestitem';\r\nimport { TableModule, Table } from 'primeng/table';\r\nimport { Message } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-accuracy-test',\r\n  templateUrl: './accuracyTest.html',\r\n  styleUrls: ['./accuracyTest.css']\r\n})\r\nexport class AccuracyTestComponent implements OnInit, OnDestroy {\r\n\r\n  progressSpinner: boolean = false;\r\n  msgs: Message[] = [];\r\n\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  accuracytestdata: any = { items: [] };\r\n  years: any[] = [];\r\n  companyList: any[];\r\n  filteredYears: any[];\r\n  filteredCompany: any[];\r\n  researchurl: string = \"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=\";\r\n  accuracyTestList: any[];\r\n  fillingURL: string;\r\n  htmlcontent: any;\r\n  accuracyTest = { year: (new Date()).getFullYear(), companyName: \"\" };\r\n  showTitle: boolean = false;\r\n  cols: any[];\r\n  exportColumns: any[];\r\n  selectedAccuracyTest: any[] = [];\r\n  accuracydata: AccuracyTestItem;\r\n  accuracyDataItem: any = { notes: \"\", isCheckedCS: false, isCheckedMaxDS: false };\r\n  errorMsg: string;\r\n  showError: boolean;\r\n\r\n  @ViewChild(Table) dt: Table;\r\n\r\n  constructor(private profileService: ProfileService, private accuracyTestService: AccuracyTestService, private router: Router, private domsanitizer: DomSanitizer) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBackgroundColors(column, data) {\r\n    if (data.csTermId === null && data.termId !== null) {\r\n      return { 'background-color': 'white' };\r\n    }\r\n    if (column.field === 'value') {\r\n      if (data.csTermValue === data.value) {\r\n        return { 'background-color': '#00B800' };\r\n      } else {\r\n        if ((this.calculatePercentage(data.csTermValue, data.value) < 1.05) && (this.calculatePercentage(data.csTermValue, data.value) > 0)) {\r\n          return { 'background-color': 'orange' };\r\n        } else {\r\n          return { 'background-color': 'red' };\r\n        }\r\n      }\r\n    } else {\r\n      return { 'background-color': 'white' };\r\n    }\r\n  }\r\n\r\n  calculatePercentage(csValue, mxdsValue) {\r\n\r\n    let difPerAvg = (mxdsValue / csValue);\r\n    if (mxdsValue > csValue) {\r\n      difPerAvg = (mxdsValue / csValue);\r\n    }\r\n    else {\r\n      difPerAvg = (csValue / mxdsValue);\r\n    }\r\n    //(maxds/csvalue)*100\r\n    //console.log(difPerAvg);\r\n    return difPerAvg;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    for (let i = 0; i < 5; i++) {\r\n      this.years.push((new Date().getFullYear() - i) + '');\r\n    }\r\n\r\n    console.log('accuracyTestComponent : calling ngOnInit...');\r\n    this.cols = [\r\n      { field: 'csTermId', header: 'CS', hidden: false, exportable: true, width: '8%' },\r\n      { field: 'csTermValue', header: this.accuracyTest.year, exportable: true, width: '17%' },\r\n      { field: 'isCheckedCS', header: '', hidden: false, exportable: true, width: '5%' },\r\n      { field: 'termId', header: 'MAXDS', hidden: false, exportable: true, width: '8%' },\r\n      { field: 'value', header: this.accuracyTest.year, hidden: false, exportable: true, width: '17%' },\r\n      { field: 'isCheckedMaxDS', header: '', hidden: false, exportable: true, width: '5%' },\r\n      { field: 'resolvedExpression', header: 'Resolved Expression', exportable: true, width: '29%' },\r\n      { field: 'notes', header: 'Notes', hidden: false, exportable: true, width: '10%' }\r\n    ];\r\n    this.exportColumns = this.cols.map(col => ({ title: col.header, dataKey: col.field }));\r\n    this.getCompanyNames();\r\n\r\n    if (sessionStorage.getItem('accuracyTest.companyName') !== null) {\r\n      this.accuracyTest.companyName = sessionStorage.getItem('accuracyTest.companyName');\r\n    }\r\n    if (sessionStorage.getItem('accuracyTest.year') !== null) {\r\n      this.accuracyTest.year = JSON.parse(sessionStorage.getItem('accuracyTest.year'));\r\n    }\r\n  }\r\n\r\n  onCompanyNameChange($event) {\r\n    console.log(this.accuracyTest.companyName);\r\n    sessionStorage.setItem('accuracyTest.companyName', $event);\r\n  }\r\n  onYearChange($event) {\r\n    console.log(this.accuracyTest.year);\r\n    sessionStorage.setItem('accuracyTest.year', JSON.stringify($event));\r\n  }\r\n\r\n  exportTableToCSV(table) {\r\n    table.exportCSV();\r\n  }\r\n\r\n  csCheckboxselect(event, rowdata) {\r\n\r\n    rowdata.isCheckedCS = event.target.checked;\r\n    if (this.selectedAccuracyTest.length == 0) {\r\n      this.selectedAccuracyTest.push(rowdata);\r\n    } else {\r\n      this.selectedAccuracyTest.forEach(item => {\r\n        if (item.termId.indexOf(rowdata.termId) == -1 && !item.isCheckedMaxDS) {\r\n          this.selectedAccuracyTest.push(rowdata);\r\n        } else {\r\n          if (!event.target.checked && !item.isCheckedMaxDS) {\r\n            this.selectedAccuracyTest.splice(rowdata);\r\n          }\r\n        }\r\n      })\r\n    }\r\n    console.log(this.selectedAccuracyTest);\r\n\r\n  }\r\n\r\n  maxDsCheckboxselect(event, rowdata) {\r\n\r\n    rowdata.isCheckedMaxDS = event.target.checked;\r\n    if (this.selectedAccuracyTest.length == 0) {\r\n      this.selectedAccuracyTest.push(rowdata);\r\n    } else {\r\n      this.selectedAccuracyTest.forEach(item => {\r\n        if (item.termId.indexOf(rowdata.termId) == -1 && !item.isCheckedCS) {\r\n          this.selectedAccuracyTest.push(rowdata);\r\n        } else {\r\n          if (!event.target.checked && !item.isCheckedCS) {\r\n            this.selectedAccuracyTest.splice(rowdata);\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    console.log(this.selectedAccuracyTest);\r\n  }\r\n\r\n  saveAccuracyTestData() {\r\n    this.showError = false;\r\n    console.log(this.selectedAccuracyTest);\r\n    let items: any[] = [];\r\n    this.selectedAccuracyTest.forEach(selectedItem => {\r\n      this.accuracydata = new AccuracyTestItem();\r\n      this.accuracydata.csTermId = selectedItem.csTermId;\r\n      this.accuracydata.csTermValue = selectedItem.csTermValue;\r\n      this.accuracydata.isCheckedCS = selectedItem.isCheckedCS;\r\n      this.accuracydata.isCheckedMaxDS = selectedItem.isCheckedMaxDS;\r\n      this.accuracydata.resolvedExpression = selectedItem.resolvedExpression;\r\n      this.accuracydata.termId = selectedItem.termId;\r\n      this.accuracydata.notes = selectedItem.notes;\r\n      items.push(this.accuracydata);\r\n    })\r\n    this.accuracytestdata.items = items;\r\n    this.accuracyTestService.saveAccuracyTestData(this.accuracytestdata).subscribe((response) => {\r\n      this.onSubmit(null);\r\n    }, (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  searchYears() {\r\n    this.filteredYears = [];\r\n    for (let i = 0; i < this.years.length; i++) {\r\n      let year: string = this.years[i];\r\n      this.filteredYears.push(year);\r\n    }\r\n  }\r\n\r\n  onSubmit(dt) {\r\n    this.showError = false;\r\n    if (this.accuracyTest.companyName  === undefined || this.accuracyTest.companyName  === null || this.accuracyTest.companyName === \"\" ) {\r\n      this.showError = true;\r\n      this.errorMsg = 'Please Select Company to Run Test';\r\n      return;\r\n    }\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: '\"Processing in progress!\"', detail: '' }];\r\n\r\n    this.dt.columns[1].header = this.accuracyTest.year;\r\n    this.dt.columns[4].header = this.accuracyTest.year;\r\n    this.dt.reset();\r\n    this.accuracyTestService.runAccuracyTest(this.getTermIdOrEntityName(this.accuracyTest.companyName), this.accuracyTest.year).subscribe((response) => {\r\n      this.accuracyTestList = [];\r\n      this.getFilingUrl();\r\n      const HTMLfillingURL = response.filingUrl;\r\n      this.progressSpinner = false;\r\n      this.msgs = [{ severity: 'info', summary: '\"Processing completed!\"', detail: '' }];\r\n      // this.accuracyTestList = response.items;\r\n\r\n      setInterval(() => {\r\n        this.msgs = [];\r\n      }, 50000)\r\n      response.items.forEach(item => {\r\n        let resolvedValue: string;\r\n        if (item.resolvedExpression != null) {\r\n          resolvedValue = this.differenceBtnAccu(item.resolvedExpression);\r\n          //item.resolvedValue = resolvedValue;\r\n        } else {\r\n          resolvedValue = \"0\";\r\n          //item.resolvedValue = resolvedValue;\r\n        }\r\n\r\n        this.accuracyTestList.push({\r\n          termId: item.termId, csTermValue: item.csTermValue, resolvedExpression: item.resolvedExpression,\r\n          value: item.value, csTermId: item.csTermId, notes: item.notes, isCheckedCS: item.isCheckedCS, isCheckedMaxDS: item.isCheckedMaxDS\r\n        })\r\n      });\r\n      console.log(\"#######################################################33\");\r\n      console.log(this.accuracyTestList);\r\n      console.log(\"#######################################################33\");\r\n      this.accuracyTestService.fillingHTMLView(HTMLfillingURL).subscribe((response) => {\r\n        this.htmlcontent = this.domsanitizer.bypassSecurityTrustHtml(response.resultObject);\r\n        //this.htmlcontent = this.domsanitizer.bypassSecurityTrustResourceUrl(response.resultObject);\r\n        //this.htmlcontent = this.domsanitizer.bypassSecurityTrustStyle(response.resultObject);\r\n        //this.htmlcontent = this.domsanitizer.bypassSecurityTrustScript(response.resultObject);\r\n\r\n        this.showTitle = true;\r\n      }, (error) => console.log(error)\r\n      )\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  };\r\n\r\n  exportAccuracyResults() {\r\n    this.accuracyTestService.exportAccuracyResults(this.getTermIdOrEntityName(this.accuracyTest.companyName), this.accuracyTest.companyName, this.accuracyTest.year.toString()).subscribe((response) => {\r\n      console.log(response)\r\n      const blob = new Blob([response], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      window.open(url);\r\n      this.showTitle = true;\r\n    }\r\n    )\r\n  }\r\n\r\n  differenceBtnAccu(value: string): string {\r\n    return value.substr(value.indexOf(\"=\") + 1);\r\n  }\r\n\r\n  populateColor(record) {\r\n    return \"red\"\r\n  }\r\n\r\n  getTermIdOrEntityName(inputValue: string): string {\r\n    let outputValue: string = inputValue.substring((inputValue.indexOf(\"(\") + 1), inputValue.indexOf(\")\"));\r\n    return outputValue;\r\n  }\r\n\r\n  openTermLink(data) {\r\n    let url: string = 'https://www.sec.gov/Archives/edgar/data/' + data.cik + '/' + data.accession + '-index.htm';\r\n    console.log(url);\r\n    window.open(url, \"_blank\");\r\n\r\n  }\r\n\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname = this.companyList[i].name;\r\n      if ((cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.toLowerCase().includes(event.query.toLowerCase()))) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  getCompanyNames() {\r\n    this.profileService.getCoompanyNames().subscribe((response) => {\r\n      this.companyList = [];\r\n      console.log(response);\r\n      response.forEach(preferences => {\r\n        this.companyList.push({ name: preferences });\r\n      })\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  openResearchLink() {\r\n    let cik = this.getTermIdOrEntityName(this.accuracyTest.companyName);\r\n    window.open(this.researchurl + cik, \"_blank\");\r\n\r\n  }\r\n  openlink() {\r\n    window.open(this.fillingURL, \"_blank\");\r\n  }\r\n\r\n  getFilingUrl(termId?) {\r\n    const reqData = {\r\n      companyId: this.accuracyTest.companyName.slice(this.accuracyTest.companyName.indexOf('(') + 1, this.accuracyTest.companyName.indexOf(')')),\r\n      year: this.accuracyTest.year,\r\n      termId: termId ? termId : null\r\n    }\r\n\r\n    this.accuracyTestService.getFilingUrl(reqData).subscribe(res => {\r\n      if (res && res._body) {\r\n        if (termId) {\r\n          window.open(res._body, \"_blank\");\r\n        } else {\r\n          this.fillingURL = res._body;\r\n        }\r\n      }\r\n    }, (error) => console.log(error));\r\n  }\r\n\r\n  goManageTermPage(termId?) {\r\n    sessionStorage.setItem('accuracyTest.presetTermId', termId);\r\n    //window.open('#/manageTerm', '_self');\r\n    window.open('#/manageTerm', '_blank').focus();\r\n    //sessionStorage is not shared among browser tabs\r\n    sessionStorage.removeItem('accuracyTest.presetTermId');\r\n  }\r\n}\r\n","\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpParams, HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccuracyTestService {\r\n    private FILINGURL: string = 'api/getFilingUrl';\r\n    private FILINGURLS: string = 'api/getFilingUrls';\r\n    private LOADACCUDATAURL: string = \"/api/AccuracyTest\";\r\n    private FILLINGHTMLDATAURL: string = \"/api/AccuracyTestGetHtml\";\r\n    private DOWNLOADDATAURL: string = \"/api/download/accuracyTestResults\"\r\n    private SAVEACCURACYDATA: string = \"api/AccuracyTest/save\";\r\n\r\n    constructor(private http: Http/*, private request: HttpRequest<any>, private response: HttpResponse<any>*/) {\r\n\r\n    }\r\n\r\n    runAccuracyTest(cik: string, fiscalYear: Number): Observable<any> {\r\n        let headers = new Headers();\r\n\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n        return this.http.get(`${this.LOADACCUDATAURL + \"/\" + cik + \"/\" + fiscalYear}`, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                console.log(data);\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n\r\n    fillingHTMLView(fillingUrl: string): Observable<any> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n        return this.http.post(`${this.FILLINGHTMLDATAURL}`, fillingUrl, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                console.log(data);\r\n                return data;\r\n            }\r\n        ));\r\n\r\n    }\r\n\r\n\r\n    saveAccuracyTestData(accuracyTestData: any): Observable<any> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n        return this.http.post(`${this.SAVEACCURACYDATA}`, accuracyTestData, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                console.log(data);\r\n                return data;\r\n            }\r\n        ));\r\n\r\n    }\r\n\r\n    exportAccuracyResults(cik: string, companyName: string, fiscalYear: string): Observable<any> {\r\n        let headers = new Headers();\r\n        /* headers.append('Content-Type', 'application/json');\r\n         headers.append(\"Access-Control-Allow-Origin\", \"*\");*/\r\n        return this.http.post(`${this.DOWNLOADDATAURL + \"/\" + companyName + \"/\" + cik + \"/\" + fiscalYear}`, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response;\r\n                console.log(data);\r\n\r\n                return data;\r\n            }\r\n        ));\r\n\r\n    }\r\n\r\n    getFilingUrl(reqData): Observable<any> {\r\n        let headers = new Headers();\r\n        let url;\r\n        if (reqData) {\r\n            if (reqData.termId) {\r\n                url = `${this.FILINGURLS + \"/\" + reqData.companyId + \"/\" + reqData.year + \"/\" + reqData.termId}`\r\n            } else {\r\n                url = `${this.FILINGURL + \"/\" + reqData.companyId + \"/\" + reqData.year}`\r\n            }\r\n        }\r\n\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n        return this.http.get(url, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response;\r\n                console.log(data);\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n}","export class AccuracyTestItem {\r\n    public termId: string;\r\n    public value: number;\r\n    public resolvedExpression: string;\r\n    public csTermId: string;\r\n    public csTermValue: number;\r\n    public isCheckedCS: boolean;\r\n    public isCheckedMaxDS: boolean;\r\n    public notes: string;\r\n    public financialStatement: string;\r\n}","module.exports = \"<div>\\r\\n\\r\\n    <h2 style=\\\"background-color:lightblue; width: 100%; text-align: center;\\\"> Admin Upload</h2>\\r\\n\\r\\n</div>\\r\\n<div>\\r\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n<div style=\\\" margin: 0px 10px; \\\">\\r\\n    <div class=\\\"row\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <label>\\r\\n                Select a lookup reference CSV file to upload:\\r\\n            </label>\\r\\n            <p-fileUpload name=\\\"file\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"onUpload($event)\\\">\\r\\n                <ng-template pTemplate=\\\"content\\\">\\r\\n                    <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                        <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                    </ul>\\r\\n                </ng-template>\\r\\n            </p-fileUpload>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-2\\\">\\r\\n                    <div class=\\\"admin-card\\\">\\r\\n                        <div class=\\\"admin-card-header\\\">\\r\\n                            <h1><b>Term Count</b></h1>\\r\\n                        </div>\\r\\n                        <div class=\\\"admin-card-container\\\">\\r\\n                            <h3><b>{{termList.length}}</b></h3>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-2\\\">\\r\\n                    <div class=\\\"admin-card\\\">\\r\\n                        <div class=\\\"admin-card-header\\\">\\r\\n                            <h1><b>Entity Count</b></h1>\\r\\n                        </div>\\r\\n                        <div class=\\\"admin-card-container\\\">\\r\\n                            <h3><b>{{entityList.length}}</b></h3>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\" *ngIf=\\\"reportData.length > 0\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <p-table #reportDataTable [columns]=\\\"reportDataCols\\\" [value]=\\\"reportData\\\" [responsive]=\\\" true\\\"\\r\\n                [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\" p-dataTable\\r\\n                (onFilter)=\\\"updatePagenationCount($event)\\\">\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                            [pSortableColumn]=\\\"col.field\\\">\\r\\n                            <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                    ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                    ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                            </div>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                            <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                                <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                                    [value]=\\\"reportDataTable.filters[col.field] ? reportDataTable.filters[col.field].value : ''\\\"\\r\\n                                    (input)=\\\"reportDataTable.filter($event.target.value, col.field, col.filterMatchMode); \\r\\n                            onFilter($event.target.value, col.field, col.filterMatchMode);updatePagenationCount($event)\\\"\\r\\n                                    style=\\\"width: 150px\\\">\\r\\n                            </div>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\">\\r\\n                            <span *ngIf=\\\"col.header ==='Collection Name'\\\">\\r\\n                                <a [href]=\\\"rowData['collectionURL']\\\" target=\\\"_blank\\\">{{rowData[col.field]}}</a>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"col.header !=='Collection Name'\\\">\\r\\n                                {{rowData[col.field]}}</span>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n\\r\\n            </p-table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { UtilService } from '../utils/utilService';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { Messages, Message } from 'primeng/primeng';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ProfileService } from 'app/services/profile.service';\r\n@Component({\r\n  selector: 'admin-page',\r\n  templateUrl: './admin.html',\r\n  styleUrls: [`../app.component.css`],\r\n})\r\nexport class AdminComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  uploadedFiles: any[] = [];\r\n  msgs: Message[] = [];\r\n  errorMsg: string = '';\r\n  showError: boolean;\r\n  termList = [];\r\n  entityList = [];\r\n  reportData = [];\r\n  reportDataCols = [\r\n    { field: 'rowNumber', header: 'Row Number', width: '10%' },\r\n    { field: 'profileID', header: 'Profile Id', width: '30%' },\r\n    { field: 'collectionType', header: 'Collection Type', width: '30%' },\r\n    { field: 'collectionName', header: 'Collection Name', width: '30%' }\r\n  ];\r\n  constructor(private utils: UtilService, private router: Router, private utilService: UtilService, private profileService: ProfileService) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    var isAdmin = localStorage.getItem(\"isAdmin\")\r\n    if (isAdmin == \"null\") {\r\n      this.router.navigate(['/home']);\r\n    }\r\n    console.log('adminComponent : calling ngOnInit...');\r\n    forkJoin(\r\n      this.utilService.getTermRuleList(),\r\n      this.utilService.getCompleteCompanyList(),\r\n      this.profileService.getReportData()\r\n    ).subscribe(([termList, entityList, reportData]) => {\r\n      this.termList = termList ? termList : [];\r\n      this.entityList = entityList ? entityList : [];\r\n      if (reportData && reportData.length > 0) {\r\n        reportData.forEach((value, index) => {\r\n          value['rowNumber'] = index;\r\n          this.reportData.push(value);\r\n        })\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onUpload(event) {\r\n    this.errorMsg = \"\";\r\n    this.showError = false;\r\n    this.msgs = [];\r\n    var file = event.files[0];\r\n    // for(let file of event.files) {\r\n    //   file = file;\r\n    //     this.uploadedFiles.push(file);\r\n    // }\r\n\r\n    //var f = document.getElementById('myFileField').files[0];\r\n\r\n    //Take the first selected file\r\n    let fd = new FormData();\r\n    fd.append('file', event.files[0]);\r\n    this.utils.uploadLookupReferenceFile(fd).subscribe((response) => {\r\n      if (response) {\r\n        this.msgs = [{ severity: 'info', summary: 'Admin Operation', detail: 'Successfully uploaded file ' + file.name + ' to server.' }];\r\n      }\r\n      else {\r\n        this.errorMsg = 'Error, Failed to upload file to server.';\r\n        this.showError = true;\r\n      }\r\n    }, function errorCallback(response) {\r\n      this.errorMsg = 'Error, Failed to upload file to server.';\r\n      this.showError = true;\r\n    });\r\n\r\n\r\n    // this.messageService.add({severity: 'info', summary: 'File Uploaded', detail: ''});\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}","module.exports = \"\\r\\n\\r\\n\\r\\n.column1 {\\r\\n    float: left;\\r\\n    width: 30%;\\r\\n    text-align: right;\\r\\n    padding: 10px\\r\\n}\\r\\n.column2 {\\r\\n  float: right;\\r\\n  width: 70%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n/* Clear floats after the columns */\\r\\n.row:after {\\r\\n    content: \\\"\\\";\\r\\n    display: table;\\r\\n    clear: both;\\r\\n}\\r\\ninput.customcheckbox{\\r\\n  width: 20px !important;\\r\\n  height: 20px !important;\\r\\n}\\r\\n.rotate{\\r\\n  /* writing-mode: vertical-rl; */\\r\\n  font-size: small;\\r\\n  overflow: auto!important;\\r\\n  word-wrap: break-word;\\r\\n  text-overflow: ellipsis !important;\\r\\n  white-space: normal !important;\\r\\n  text-align: center !important;\\r\\n  vertical-align: middle !important;\\r\\n  transform: rotate(300deg);\\r\\n}\\r\\nth.row-header {\\r\\n  padding: 0 10px;\\r\\n  border-bottom: 1px solid #ccc;\\r\\n}\\r\\n.column1 {\\r\\n  float: left;\\r\\n  width: 30%;\\r\\n  text-align: right;\\r\\n  padding: 10px\\r\\n}\\r\\n.column2 {\\r\\nfloat: right;\\r\\nwidth: 70%;\\r\\ntext-align: left;\\r\\npadding: 10px\\r\\n}\\r\\n/* Clear floats after the columns */\\r\\n.row:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n  clear: both;\\r\\n}\\r\\n.expcolumn {\\r\\n  float: left;\\r\\n  width: 33.33%;\\r\\n  padding: 10px;\\r\\n  height: 300px; \\r\\n}\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n/* Create three equal columns that floats next to each other */\\r\\n.exprcolumn {\\r\\n  float: left;\\r\\n  width: 33.33%;\\r\\n  padding: 10px;\\r\\n  height: 50%; \\r\\n}\\r\\n::ng-deep .ui-tree-container {\\r\\n  color: blue;\\r\\n}\\r\\n::ng-deep .pi-arrow-right::before {\\r\\n   content: \\\"\\\\F067\\\";\\r\\n}\\r\\n::ng-deep .pi-arrow-down::before {\\r\\n   content: \\\"\\\\F068\\\";\\r\\n}\\r\\n.conceptcolumn {\\r\\n  float: left;\\r\\n  width: 45%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n.conceptcolumn1 {\\r\\n  float: left;\\r\\n  width: 10%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n.conceptcolumn2 {\\r\\n  float: left;\\r\\n  width: 5%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n.conceptcolumn3 {\\r\\n  float: left;\\r\\n \\r\\n  text-align: left;\\r\\n  padding: 5px\\r\\n}\\r\\n::ng-deep p-dialog .ui-dialog {\\r\\n  overflow: scroll;\\r\\n  max-height: 100%;\\r\\n}\\r\\n.well.selectionCount {\\r\\n  background: #843534;\\r\\n  color:white;\\r\\n}\\r\\n.admin-card {\\r\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\\r\\n  transition: 0.3s;\\r\\n  width: 100%;\\r\\n  border-radius: 5px;\\r\\n  text-align: center;\\r\\n  \\r\\n}\\r\\n.admin-card-header {\\r\\n\\tbackground-color: #d3d2d899;\\r\\n    border-radius: 5px 5px 0px 0px;\\r\\n    padding: 5px 0px;\\r\\n}\\r\\n.admin-card:hover {\\r\\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\\r\\n}\\r\\n.admin-card-container {\\r\\n  padding: 2px 16px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0E7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtFQUNWLGdCQUFnQjtFQUNoQjtBQUNGO0FBQ0EsbUNBQW1DO0FBQ25DO0lBQ0ksV0FBVztJQUNYLGNBQWM7SUFDZCxXQUFXO0FBQ2Y7QUFDQTtFQUNFLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekI7QUFFQTtFQUNFLCtCQUErQjtFQUMvQixnQkFBZ0I7RUFDaEIsd0JBQXdCO0VBQ3hCLHFCQUFxQjtFQUNyQixrQ0FBa0M7RUFDbEMsOEJBQThCO0VBQzlCLDZCQUE2QjtFQUM3QixpQ0FBaUM7RUFHakMseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsNkJBQTZCO0FBQy9CO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQjtBQUNGO0FBQ0E7QUFDQSxZQUFZO0FBQ1osVUFBVTtBQUNWLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0VBQ0UsV0FBVztFQUNYLGNBQWM7RUFDZCxXQUFXO0FBQ2I7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLGFBQWE7QUFDZjtBQUNBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBR0EsOERBQThEO0FBQzlEO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixhQUFhO0VBQ2IsV0FBVztBQUNiO0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFFQTtHQUNHLGdCQUFnQjtBQUNuQjtBQUVBO0dBQ0csZ0JBQWdCO0FBQ25CO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQjtBQUNGO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQjtBQUNGO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsU0FBUztFQUNULGdCQUFnQjtFQUNoQjtBQUNGO0FBQ0E7RUFDRSxXQUFXOztFQUVYLGdCQUFnQjtFQUNoQjtBQUNGO0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztBQUNiO0FBRUE7RUFDRSx1Q0FBdUM7RUFDdkMsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCOztBQUVwQjtBQUVBO0NBQ0MsMkJBQTJCO0lBQ3hCLDhCQUE4QjtJQUM5QixnQkFBZ0I7QUFDcEI7QUFFQTtFQUNFLHdDQUF3QztBQUMxQztBQUdBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcblxyXG4uY29sdW1uMSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIHBhZGRpbmc6IDEwcHhcclxufVxyXG4uY29sdW1uMiB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIHdpZHRoOiA3MCU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiAxMHB4XHJcbn1cclxuLyogQ2xlYXIgZmxvYXRzIGFmdGVyIHRoZSBjb2x1bW5zICovXHJcbi5yb3c6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxuaW5wdXQuY3VzdG9tY2hlY2tib3h7XHJcbiAgd2lkdGg6IDIwcHggIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLnJvdGF0ZXtcclxuICAvKiB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsOyAqL1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgb3ZlcmZsb3c6IGF1dG8haW1wb3J0YW50O1xyXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcyAhaW1wb3J0YW50O1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWwgIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDMwMGRlZyk7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzMDBkZWcpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDMwMGRlZyk7XHJcbn1cclxudGgucm93LWhlYWRlciB7XHJcbiAgcGFkZGluZzogMCAxMHB4O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xyXG59XHJcbi5jb2x1bW4xIHtcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogMzAlO1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHBhZGRpbmc6IDEwcHhcclxufVxyXG4uY29sdW1uMiB7XHJcbmZsb2F0OiByaWdodDtcclxud2lkdGg6IDcwJTtcclxudGV4dC1hbGlnbjogbGVmdDtcclxucGFkZGluZzogMTBweFxyXG59XHJcbi8qIENsZWFyIGZsb2F0cyBhZnRlciB0aGUgY29sdW1ucyAqL1xyXG4ucm93OmFmdGVyIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGRpc3BsYXk6IHRhYmxlO1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcbi5leHBjb2x1bW4ge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiAzMy4zMyU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBoZWlnaHQ6IDMwMHB4OyBcclxufVxyXG4qIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5cclxuLyogQ3JlYXRlIHRocmVlIGVxdWFsIGNvbHVtbnMgdGhhdCBmbG9hdHMgbmV4dCB0byBlYWNoIG90aGVyICovXHJcbi5leHByY29sdW1uIHtcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogMzMuMzMlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgaGVpZ2h0OiA1MCU7IFxyXG59XHJcblxyXG46Om5nLWRlZXAgLnVpLXRyZWUtY29udGFpbmVyIHtcclxuICBjb2xvcjogYmx1ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5waS1hcnJvdy1yaWdodDo6YmVmb3JlIHtcclxuICAgY29udGVudDogXCJcXEYwNjdcIjtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5waS1hcnJvdy1kb3duOjpiZWZvcmUge1xyXG4gICBjb250ZW50OiBcIlxcRjA2OFwiO1xyXG59XHJcbi5jb25jZXB0Y29sdW1uIHtcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogNDUlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgcGFkZGluZzogMTBweFxyXG59XHJcbi5jb25jZXB0Y29sdW1uMSB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgd2lkdGg6IDEwJTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDEwcHhcclxufVxyXG4uY29uY2VwdGNvbHVtbjIge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiA1JTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDEwcHhcclxufVxyXG4uY29uY2VwdGNvbHVtbjMge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gXHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiA1cHhcclxufVxyXG5cclxuOjpuZy1kZWVwIHAtZGlhbG9nIC51aS1kaWFsb2cge1xyXG4gIG92ZXJmbG93OiBzY3JvbGw7XHJcbiAgbWF4LWhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLndlbGwuc2VsZWN0aW9uQ291bnQge1xyXG4gIGJhY2tncm91bmQ6ICM4NDM1MzQ7XHJcbiAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5hZG1pbi1jYXJkIHtcclxuICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMik7XHJcbiAgdHJhbnNpdGlvbjogMC4zcztcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIFxyXG59XHJcblxyXG4uYWRtaW4tY2FyZC1oZWFkZXIge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNkM2QyZDg5OTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMHB4IDBweDtcclxuICAgIHBhZGRpbmc6IDVweCAwcHg7XHJcbn1cclxuXHJcbi5hZG1pbi1jYXJkOmhvdmVyIHtcclxuICBib3gtc2hhZG93OiAwIDhweCAxNnB4IDAgcmdiYSgwLDAsMCwwLjIpO1xyXG59XHJcblxyXG5cclxuLmFkbWluLWNhcmQtY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiAycHggMTZweDtcclxufSJdfQ== */\"","module.exports = \"<!--The whole content below can be removed with the new code.-->\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n  <div *ngIf=\\\"showmenu\\\">\\r\\n    <app-header></app-header>\\r\\n  </div>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n</div>\"","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\nimport { HttpClientXsrfModule } from '@angular/common/http';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoginService } from 'app/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\r\nimport { Keepalive } from '@ng-idle/keepalive';\r\nimport { JoyrideService } from 'ngx-joyride';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { CommonService } from 'app/services/common.service';\r\nimport { UtilService } from 'app/utils/utilService';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Maxds application';\r\n  showmenu = true;\r\n  loggedUsername: string;\r\n  userFullName: string;\r\n  public username: String = '';\r\n\r\n  timedOut = false;\r\n  lastPing?: Date = null;\r\n\r\n  @Output('onUserNameChange') onUserNameChange = new EventEmitter<string>();\r\n  constructor(private login: LoginService, private router: Router, private idle: Idle, private keepalive: Keepalive,\r\n    private readonly joyrideService: JoyrideService, private utilService: UtilService, private profileService: ProfileService) {\r\n    this.login.userId = localStorage.getItem(\"userid\");\r\n    // localStorage.clear();\r\n  }\r\n}\r\n\r\n\r\n","import { BrowserModule, DomSanitizer } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, FormControl, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { routing } from './app.routing';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\nimport { MomentModule } from 'angular2-moment';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\nimport { MorrisJsModule } from 'angular-morris-js';\r\nimport { AngularDraggableModule } from 'angular2-draggable';\r\nimport { JoyrideModule } from 'ngx-joyride';\r\n\r\n\r\nimport {\r\n  DialogModule, MultiSelectModule, RadioButtonModule,\r\n  AccordionModule, CheckboxModule, DropdownModule, ButtonModule, PanelModule, TabViewModule, SidebarModule,\r\n  PaginatorModule, ProgressSpinnerModule, InputTextareaModule, TriStateCheckboxModule, ConfirmDialogModule, TreeModule,\r\n  MessageModule, MessagesModule, CalendarModule, ListboxModule, AutoCompleteModule, SelectButtonModule, SliderModule, FileUploadModule,\r\n  InputSwitchModule, CardModule\r\n} from 'primeng/primeng';\r\n\r\nimport { HomeComponent } from './home/homeComponent';\r\nimport { HomeService } from './home/homeService';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileService } from './services/profile.service';\r\nimport { ExportComponent } from './export/exportComponent';\r\nimport { ExportService } from './export/exportService';\r\nimport { AccuracyTestComponent } from './accutacytest/accuracyTestComponent';\r\nimport { AccuracyTestService } from './accutacytest/accuracyTestService';\r\nimport { ManageTermComponent } from './manageTerm/manageTermComponent';\r\nimport { ManageTermService } from './manageTerm/manageTermService';\r\nimport { ProcessingTermsComponent } from './processingTerms/processingTermsComponent';\r\nimport { ProcessingTermsService } from './processingTerms/processingTermsService';\r\nimport { AdminComponent } from './admin/adminComponent';\r\nimport { SubmitFeedbackComponent } from './submitFeedback/submitFeedbackComponent';\r\nimport { SubmitFeedbackService } from './submitFeedback/submitFeedbackService';\r\nimport { StatusComponent } from './status/statusComponent';\r\nimport { StatusService } from './status/statusService';\r\n\r\nimport { Status } from './domain/status';\r\nimport { TermMap } from './domain/termMap';\r\nimport { Home } from './domain/home';\r\nimport { UtilService } from './utils/utilService';\r\nimport { MappedEntity } from './domain/mappedEntity';\r\nimport { TermRule } from './domain/termRule';\r\nimport { EditExpression } from './domain/editExpression';\r\nimport { TermMapInformation } from './domain/termMapInformation';\r\nimport { GroupTermMapInformation } from './domain/groupTermMapInformation';\r\n\r\nimport { TermResultsComponent } from './term-results/term-results.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FeaturehomeComponent } from './featurehome/featurehome.component';\r\nimport { ResizableDirective } from './featurehome/resizable.directive';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport { HighlightPipe } from './featurehome/highlight.pipe';\r\n\r\nimport { AngularD3TreeLibModule } from 'angular-d3-tree';\r\nimport { CreateProfileComponent } from './profile/create-profile/create-profile.component';\r\nimport { SharePreferencesComponent } from './profile/share-preferences/share-preferences.component';\r\n\r\nimport { DialogModalModule } from './_dialogmodal';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    CreateProfileComponent,\r\n    ExportComponent,\r\n    AccuracyTestComponent,\r\n    ManageTermComponent,\r\n    ProcessingTermsComponent,\r\n    AdminComponent,\r\n    SubmitFeedbackComponent,\r\n    StatusComponent,\r\n    AppComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    FeaturehomeComponent,\r\n    TermResultsComponent,\r\n    ResizableDirective,\r\n    HighlightPipe,\r\n    SharePreferencesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, FormsModule, HttpModule, AccordionModule, BrowserAnimationsModule, RadioButtonModule, CardModule,\r\n    routing, DialogModule, MultiSelectModule, CheckboxModule, DropdownModule, ButtonModule, PanelModule, TabViewModule, ReactiveFormsModule,\r\n    SidebarModule, PaginatorModule, ProgressSpinnerModule, InputTextareaModule, TriStateCheckboxModule, TableModule, TooltipModule, TreeModule, ChartModule,\r\n    ConfirmDialogModule, MessageModule, MessagesModule, CalendarModule, ListboxModule, AutoCompleteModule, SelectButtonModule, SliderModule, InputSwitchModule,\r\n    FileUploadModule, HttpClientModule, NgIdleKeepaliveModule.forRoot(), MomentModule, TreeTableModule, JoyrideModule.forRoot(),\r\n    AngularSplitModule.forRoot(), AngularD3TreeLibModule, MorrisJsModule, AngularDraggableModule, DialogModalModule\r\n\r\n  ],\r\n  providers: [HomeService, ProfileService, ExportService, AccuracyTestService, ManageTermService, ProcessingTermsService, SubmitFeedbackService, StatusService, UtilService,\r\n    ConfirmationService, MessageModule, Status, TermMap, Home, MappedEntity, StatusService, TermRule, EditExpression, TermMapInformation, GroupTermMapInformation,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }, HeaderComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/homeComponent';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ExportComponent } from './export/exportComponent';\r\nimport { AccuracyTestComponent } from './accutacytest/accuracyTestComponent';\r\nimport { ManageTermComponent } from './manageTerm/manageTermComponent';\r\nimport { ProcessingTermsComponent } from './processingTerms/processingTermsComponent';\r\nimport { AdminComponent } from './admin/adminComponent';\r\nimport { SubmitFeedbackComponent } from './submitFeedback/submitFeedbackComponent';\r\nimport { StatusComponent } from './status/statusComponent';\r\nimport { TermResultsComponent } from './term-results/term-results.component'\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthGuard } from './guards/auth.guards';\r\nimport { FeaturehomeComponent } from './featurehome/featurehome.component';\r\nimport { CompleteCompanylistResolverService } from './resolvers/completecompanylist-resolver.service';\r\nimport { TermlistResolverService } from './resolvers/termlist-resolver.service';\r\nimport { TermRuleCategoryListResolverService } from './resolvers/termrulecategorylist-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full', runGuardsAndResolvers: 'always' },\r\n  { path: 'home', component: FeaturehomeComponent, runGuardsAndResolvers: 'always' ,\r\n                    resolve: { completeCompanyList: CompleteCompanylistResolverService,\r\n\t\t\t\t\t\t\t   termRuleList: TermlistResolverService,\r\n\t\t\t\t\t\t\t   termRuleCategoryList: TermRuleCategoryListResolverService }},\r\n  // { path: 'home', component: HomeComponent, runGuardsAndResolvers: 'always'},\r\n  { path: 'header', component: HeaderComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'maxds', component: HomeComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'termresults', component: TermResultsComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'profile', component: ProfileComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'export', component: ExportComponent, runGuardsAndResolvers: 'always',\r\n                    resolve: { completeCompanyList: CompleteCompanylistResolverService,\r\n                               termRuleList: TermlistResolverService}},\r\n  { path: 'accuracyTest', component: AccuracyTestComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'manageTerm', component: ManageTermComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'processTerm', component: ProcessingTermsComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'admin', component: AdminComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'status', component: StatusComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'submit', component: SubmitFeedbackComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'logout', component: LoginComponent, runGuardsAndResolvers: 'always' },\r\n  { path: 'login', component: LoginComponent, runGuardsAndResolvers: 'always' }];\r\n\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' });\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class EditExpression {\r\n    expression: any = '';\r\n    axisExpression: string = '';\r\n    memberExpression: string = '';\r\n    type: string = '';\r\n    conceptName: string = null;\r\n    NamedAxisList: any[] = [];\r\n    NamedMemberList: any[] = [];\r\n    conceptMatchMultipleList: any[] = [];\r\n    virtualFactMemberExclusionList: any[] = [];\r\n    useVirtualParentNew: boolean;\r\n    virtualFactAxis: string = null;\r\n    virtualFactMemberExclusions: any[] = [];\r\n    useMaxAxisCount: boolean;\r\n    maxAxisCount: number;\r\n    axisType: string;\r\n    dimensionExpressionSets: any[] = [];\r\n    balType: string  = null;\r\n    perType: string  = null;\r\n    isShareItemType: boolean;\r\n    containsWords : any[]= [];\r\n    doesNotContainsWords:  any[] = [];\r\n    usePositiveValuesOnly: boolean = false;\r\n    useNegativeValuesOnly: boolean = false;\r\n    reverseNegativeValues: boolean = false;\r\n    formulaList:  any[] = [];\r\n    rank: number;\r\n}","import { Injectable } from '@angular/core';\r\nimport {TermMapInformation} from './termMapInformation';\r\n@Injectable()\r\nexport class GroupTermMapInformation {\r\n    constructor(private termMap: TermMapInformation) {\r\n\r\n    }\r\n    public  termId: String;\r\n    public  name: String;\r\n    public  description: String;\r\n      \r\n    public  isEditing: Boolean = false;\r\n    public  isTermRule: Boolean = true;\r\n    \r\n    public mappedInfoSets : TermMapInformation[];\r\n}","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class Home {\r\n\r\n    homeCol: any[];\r\n    homeEntityCol: any[];\r\n    label: string;\r\n    children: any = [];\r\n    leaf: boolean;\r\n\r\n    homeCols() {\r\n        this.homeCol = [\r\n            { field: 'rank', header: 'Rank', width: '12%' },\r\n            { field: 'type', header: 'Type', width: '25%' },\r\n            { field: 'expression', header: 'Expression', width: '58%' },\r\n            { field: 'options', header: 'Options', width: '15%' },\r\n        ];\r\n        return this.homeCol;\r\n    }\r\n\r\n    modalExpressioncols() {\r\n        return [\r\n            { field: 'rank', header: 'Rank', width: '12%' },\r\n            { field: 'type', header: 'Type', width: '25%' },\r\n            { field: 'expression', header: 'Expression', width: '58%' }\r\n        ];\r\n    }\r\n\r\n    homeEntityCols() {\r\n        this.homeEntityCol = [\r\n            { field: 'cik', header: 'Cik', width: '10%' },\r\n            { field: 'companyName', header: 'Company Name', width: '20%' },\r\n            { field: 'viewResultLink', header: 'View Result Link', width: '15%' },\r\n            { field: 'validationStatus', header: 'Validation Status', width: '15%' },\r\n            { field: 'researchLink', header: 'Research Link', width: '15%' },\r\n            { field: 'fsqvLink', header: 'FSQV Link', width: '15%' },\r\n            { field: 'processTermLink', header: 'Process Term Link', width: '10%' },\r\n        ];\r\n        return this.homeEntityCol;\r\n    }\r\n\r\n\r\n}\r\n","\r\nexport class MappedEntity {\r\n\r\n    public  termRuleId: string;\r\n    public  division: string;\r\n    public  sector: string;\r\n    public  sic: string;\r\n    public  filerCategory: string;\r\n    public  entityId: string;\r\n    public  maxYear: number;\r\n    public  minYear: number;\r\n    public  includeQuarterly: boolean;\r\n    public  rankId : number;\r\n\r\n}","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class Status {\r\n    statusCol: any[];\r\n    statusCols() {\r\n        this.statusCol = [\r\n            { field: 'termId', header: 'Term ID', width: '10%' },\r\n            { field: 'userName', header: 'User Name', width: '8%' },\r\n            { field: 'logStatus', header: 'Status', width: '8%' },\r\n            { field: 'noOfEntitiesBeingProcessed', header: 'Entity Count', width: '8%' },\r\n            { field: 'lastModified', header: 'Last Modified', width: '10%' },\r\n            { field: 'processingTimeInSec', header: 'Duration in Sec', width: '4%' },\r\n            { field: 'description', header: 'Description', width: '40%' },\r\n\r\n        ];\r\n        return this.statusCol;\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class TermMap {\r\n    termMapCol: any[];\r\n  \r\n    \r\n\r\n    termMapCols() {\r\n        this.termMapCol = [\r\n            { field: 'termId', header: 'Term ID' ,  group:'Maxds', isDisplayed: true},\r\n             { field: 'name', header: 'Term Name' , group:'Maxds', isDisplayed: true },\r\n            { field: 'description', header: 'Description' , group:'Maxds' , isDisplayed: true },\r\n           ];\r\n        return this.termMapCol;\r\n    }\r\n\r\n    \r\n    \r\n}","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class TermMapInformation {\r\n    public id: string;  \r\n    public termId: string;\r\n    public mapName: string;\r\n    public mapTermId: string;\r\n    public mapTermName: string;\r\n    public mapTermDescription: string;\r\n    public mapTermMappingInfo: string;\r\n}","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class TermRule {\r\n id: string = '';\r\n termId: string = '';\r\n name: string = '';\r\n description: string = '';\r\n type: string = '';\r\n periodType: string = '';\r\n  includeInAccuracyTests: boolean = false;\r\n lastModified = new Date();\r\n order: number= 0;\r\n processingStatus: string = 'NotProcessed';\r\n priorityGroup: string = '';\r\n\r\n financialStatement: string = \"Uncategorized\";\r\n\r\n  expressions : any[]= [];\r\n validationExpressions:  any[] = [];\r\n derivedZeroExpressions:  any[] = [];\r\n\r\n overrides: any[] =[];\r\n}","module.exports = \"<div>\\r\\n    <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n        fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n    <h2 style=\\\"background-color:lightblue; width: 100%; text-align: center;\\\"> Export</h2>\\r\\n\\r\\n</div>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n\\r\\n<p-tabView [(activeIndex)]=\\\"activeIndex\\\">\\r\\n    <p-tabPanel header=\\\"Select Companies\\\" leftIcon=\\\"pi pi-calendar\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"column\\\" style=\\\"width: 60%\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n\\r\\n                        <label>Company: </label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-autoComplete [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\" [size]=\\\"50\\\"\\r\\n                            [suggestions]=\\\"filteredCompany\\\" (completeMethod)=\\\"searchCompany($event)\\\"\\r\\n                            placeholder=\\\"Search Company\\\" [size]=\\\"50\\\" [dropdown]=\\\"true\\\" joyrideStep=\\\"companyName\\\"\\r\\n                            (onSelect)=\\\"onCompanyNameChange($event)\\\"\\r\\n                            title=\\\"Company Name\\\"\\r\\n                            text=\\\"This is where the user preforms a search for their desired company.\\\">\\r\\n                        </p-autoComplete>\\r\\n\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Go To Peer Goup\\\" class=\\\"ui-button-rounded\\\"\\r\\n                            joyrideStep=\\\"goToPeer\\\" title=\\\"Go To Peer\\\"\\r\\n                            text=\\\"By clicking this button, the Division, Sector Industry, and Filer Category will be automatically populated for a selected company.\\\"\\r\\n                            (click)=\\\"goToPeer($event)\\\"></button>&nbsp;&nbsp;\\r\\n                        <button type=\\\"button\\\" pButton (click)=\\\"resetCompanies()\\\" icon=\\\"pi pi-times\\\"\\r\\n                            Class=\\\"ui-button-danger\\\" pTooltip=\\\"Reset Selected Companies\\\"></button>&nbsp;\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n\\r\\n                        <label>\\r\\n                            Division:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filtereddivision\\\" placeholder=\\\"Select Division\\\" [(ngModel)]=\\\"division\\\"\\r\\n                            [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                            (onChange)=\\\"divisionChange($event, false)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                            filter=\\\"true\\\" joyrideStep=\\\"division\\\" title=\\\"Division\\\" [stepContent]=\\\"divisionSection\\\">\\r\\n                        </p-dropdown>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n\\r\\n                        <label>\\r\\n                            Sector:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredsector\\\" placeholder=\\\"Select Sector\\\" [(ngModel)]=\\\"sector\\\"\\r\\n                            [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                            (onChange)=\\\"sectorChange($event, false)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                            joyrideStep=\\\"sector\\\" title=\\\"Sector\\\" [stepContent]=\\\"sectorDropdown\\\" filter=\\\"true\\\">\\r\\n                        </p-dropdown>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <label>Industry: </label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                            [showClear]=\\\"true\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                            (onChange)=\\\"industryChange($event, false)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                            joyrideStep=\\\"industry\\\" title=\\\"Industry\\\" [stepContent]=\\\"industryDropdown\\\" filter=\\\"true\\\"\\r\\n                            [style]=\\\"{'width':'400px'}\\\"></p-dropdown>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <label>Filer Category:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                            placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\"\\r\\n                            (onChange)=\\\"filerChange($event, false)\\\" [virtualScroll]=\\\"true\\\" joyrideStep=\\\"filerCategory\\\"\\r\\n                            title=\\\"Filer Category\\\" [stepContent]=\\\"filerDropdown\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\"\\r\\n                            [style]=\\\"{'width':'400px'}\\\"></p-dropdown>&nbsp; {{categoryCount}}\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column2\\\" *ngFor=\\\"let industry of entitiesList; let i = index\\\">\\r\\n                        <!-- <button class=\\\"fa fa-minus-square\\\"></button>\\r\\n                                                <p-checkbox name=\\\"group2\\\" value=\\\"industry.industry\\\" (ngClick)=\\\"selectEntitiesWithSicCode(industry, selectedEntities)\\\" inputId=\\\"technology\\\"></p-checkbox>\\r\\n\\r\\n                                                    <label for=\\\"sicSector\\\">{{industry.industry}}</label> -->\\r\\n\\r\\n                        <div class=\\\"checkbox\\\">\\r\\n                            <button alt=\\\"Expand or Collapse companies list\\\"\\r\\n                                (click)=\\\"entitiesList[i].collapse=!entitiesList[i].collapse; show(industry)\\\">\\r\\n                                <span *ngIf=\\\"entitiesList[i].collapse\\\">\\r\\n                                    <i class=\\\"fa fa-minus-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </span><span [hidden]=\\\"entitiesList[i].collapse\\\">\\r\\n                                    <i class=\\\"fa fa-plus-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n                                </span></button> &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                            <!-- <input id=\\\"sicSector\\\" type=\\\"checkbox\\\" ng-model=\\\"industry.selected\\\" (click)=\\\"selectEntitiesWithSicCode(industry, selectedEntities)\\\"> -->\\r\\n                            <p-checkbox value=\\\"industry\\\" [(ngModel)]=\\\"industry.check\\\" binary=\\\"true\\\" inputId=\\\"industry\\\"\\r\\n                                (onChange)=\\\"selectEntitiesWithSicCode(industry.industry, entitiesList[i].entities, industry.check)\\\">\\r\\n                            </p-checkbox>\\r\\n                            <label for=\\\"sicSector\\\">{{industry.industry}}</label>\\r\\n                            <div class=\\\"col-lg-offset-1\\\" *ngIf=\\\"entitiesList[i].collapse\\\">\\r\\n                                <div *ngFor=\\\"let entity of entitiesList\\\">\\r\\n                                    <div class=\\\"checkbox\\\" *ngIf=\\\"entity.industry ===industry.industry \\\">\\r\\n                                        <!-- <input id=\\\"companyList\\\" type=\\\"checkbox\\\" (click)=\\\"toggle(entity, selectedEntities)\\\"\\r\\n                                                                                          ><label for=\\\"companyList\\\">{{entity.companyName}}</label> -->\\r\\n                                        <div *ngFor=\\\"let e of entity.entities; let ind = index\\\">\\r\\n                                            <p-checkbox [(ngModel)]=\\\"e.check\\\" binary=\\\"true\\\" value=\\\"entity\\\"\\r\\n                                                inputId=\\\"entity\\\" (click)=\\\"isSelected(e)\\\"></p-checkbox>\\r\\n                                            <label for=\\\"companyList\\\">{{e.companyName}}</label>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"column2\\\" style=\\\"width: 40%; background-color: lightgrey; overflow: scroll; height: 500px; \\\">\\r\\n                <!-- This is for Sidebox -->\\r\\n                <div\\r\\n                    style=\\\"color: white;background-color: darkslategray;text-align: center;padding-bottom: 5px;padding-top: 5px\\\">\\r\\n                    Selected Companies</div>\\r\\n\\r\\n                <div style=\\\"background-color: white\\\">\\r\\n                    <div *ngFor=\\\"let entity of selectedEntities \\\">\\r\\n                        {{entity.companyName}}\\r\\n                        <button alt=\\\"Remove company from selected list.\\\" type=\\\"button\\\" (click)=\\\"isSelected(entity)\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button alt=\\\"Remove all companies from selected list.\\\" *ngIf=\\\"selectedEntities.length > 0\\\"\\r\\n                        (click)=\\\"removeSelectedEntities()\\\">Remove Companies</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </p-tabPanel>\\r\\n    <p-tabPanel header=\\\"Select Terms\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"column1\\\">\\r\\n                <label>Term: </label>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"column2\\\">\\r\\n                <p-autoComplete [(ngModel)]=\\\"termInput\\\" [suggestions]=\\\"filteredTerms\\\" field=\\\"name\\\"\\r\\n                    (completeMethod)=\\\"filterTerm($event)\\\" joyrideStep=\\\"termInput\\\" title=\\\"Term\\\"\\r\\n                    (onSelect)=\\\"onTermChange($event)\\\"\\r\\n                    text=\\\"The term search is where a user can search for desired terms.\\\" (onClear)=\\\"filterTerm($event)\\\"\\r\\n                    [size]=\\\"39\\\" placeholder=\\\"Search Term\\\" [minLength]=\\\"1\\\">\\r\\n\\r\\n                </p-autoComplete>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"column1\\\">\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Select All Terms\\\" class=\\\"ui-button-rounded\\\"\\r\\n                    joyrideStep=\\\"selectAllTerms\\\" title=\\\"Select All Terms\\\"\\r\\n                    text=\\\"If the user chooses this option, all terms will be selected\\\"\\r\\n                    (click)=\\\"selectAllTerms()\\\"></button>\\r\\n            </div>\\r\\n            <div class=\\\"column2\\\">\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Deselect All Terms\\\" class=\\\"ui-button-rounded\\\"\\r\\n                    joyrideStep=\\\"deselectAllTerms\\\" title=\\\"Deselect All Terms\\\"\\r\\n                    text=\\\"The user can select this button to deselect all terms. \\\"\\r\\n                    (click)=\\\"deselectAllTerms()\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-lg-7\\\" style=\\\"height: 700px; overflow-y: auto;\\\">\\r\\n\\r\\n                <table class=\\\"table\\\">\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let term of terms\\\" style=\\\"text-align: left\\\">\\r\\n                            <p-checkbox [(ngModel)]=\\\"term.check\\\" binary=\\\"true\\\" value=\\\"term\\\" inputId=\\\"term\\\"\\r\\n                                (click)=\\\"isTermSelected(term)\\\"></p-checkbox>\\r\\n                            <label for=\\\"term\\\">{{term.termId}} - {{term.name}}</label>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-lg-5\\\" style=\\\"background-color: lightgrey; height: 700px; \\\">\\r\\n                <div\\r\\n                    style=\\\"color: white;background-color: darkslategray;text-align: center;padding-bottom: 5px;padding-top: 5px\\\">\\r\\n                    Selected KPIs</div>\\r\\n\\r\\n                <div style=\\\"background-color: white\\\">\\r\\n                    <div *ngFor=\\\"let term of selectedTerms \\\">\\r\\n                        {{term.termId}} - {{term.name}}\\r\\n                        <button alt=\\\"Remove term from selected list.\\\" type=\\\"button\\\" (click)=\\\"isTermSelected(term)\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button pButton type=\\\"button\\\" label=\\\"Remove Terms\\\" class=\\\"ui-button-rounded\\\"\\r\\n                        *ngIf=\\\"selectedTerms.length > 0\\\" (click)=\\\"removeSelectedTerms()\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- <div>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Select All Terms\\\" class=\\\"ui-button-rounded\\\" (click)=\\\"selectAllTerms()\\\"></button>\\r\\n\\r\\n        </div> -->\\r\\n    </p-tabPanel>\\r\\n    <p-tabPanel header=\\\"Export Data\\\">\\r\\n        <div style=\\\"height: 92.5vh;\\\">\\r\\n            <as-split direction=\\\"vertical\\\">\\r\\n                <as-split-area>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"expcolumn\\\" style=\\\"width: 25%\\\">\\r\\n                            <div class=\\\"ui-g-6\\\">\\r\\n                                <!-- <div class=\\\"well well-sm selectionCount\\\">\\r\\n                                                    <div class=\\\"checkbox\\\">\\r\\n                                                            <p-checkbox binary=\\\"true\\\"  label=\\\"Quarterly\\\" [(ngModel)]=\\\"quarterly\\\" inputId=\\\"quarterly\\\"></p-checkbox>\\r\\n                                                    </div>\\r\\n                                                </div> -->\\r\\n                                <div class=\\\"well well-sm selectionCount\\\">\\r\\n                                    <div class=\\\"checkbox\\\">\\r\\n                                        <p-checkbox binary=\\\"true\\\" label=\\\"Annual\\\" [(ngModel)]=\\\"annual\\\"\\r\\n                                            joyrideStep=\\\"annual\\\" title=\\\"Annual\\\"\\r\\n                                            (onChange)=\\\"onAnnualChange($event)\\\"\\r\\n                                            text=\\\"This box is checked by default and annual results for a company will be displayed if left selected. \\\"\\r\\n                                            inputId=\\\"annual\\\">\\r\\n                                        </p-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"expcolumn\\\">\\r\\n                            <div>\\r\\n                                <label>\\r\\n                                    Reporting Periods:\\r\\n                                </label>&nbsp;&nbsp;\\r\\n                                <h3>{{rangeValues[0] + ' - ' + rangeValues[1]}}</h3>\\r\\n                                <p-slider [(ngModel)]=\\\"rangeValues\\\" [min]=\\\"minYear\\\" [max]=\\\"maxYear\\\" [step]=\\\"1\\\"\\r\\n                                    [style]=\\\"{'width':'14em'}\\\" [range]=\\\"true\\\" (onChange)=\\\"yearSlideChange($event)\\\">\\r\\n                                </p-slider>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div style=\\\"padding: 5px;\\\">\\r\\n                                <p-dropdown [options]=\\\"years\\\" [(ngModel)]=\\\"year\\\" placeholder=\\\"Select Year\\\"\\r\\n                                    [showClear]=\\\"true\\\" (onChange)=\\\"yearChange($event)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                                    joyrideStep=\\\"selectYear\\\" title=\\\"Select year\\\"\\r\\n                                    text=\\\"Here the user can select a specific year by using the dropdown or multiple years by using the slider. \\\"\\r\\n                                    [style]=\\\"{'width':'200px'}\\\"></p-dropdown>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"expcolumn\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <div class=\\\"well selectionCount\\\" aria-describedby=\\\"Selected companies count\\\">\\r\\n                                    Companies Selected :\\r\\n                                    {{selectedOver === true ? 'ALL' :  selectedEntities.length=== 0 ? 'None': selectedEntities.length}}\\r\\n                                </div>\\r\\n                                <div class=\\\"well selectionCount\\\" aria-describedby=\\\"Selected KPIs count\\\">\\r\\n                                    KPIs Selected : {{selectedTerms.length}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <div class=\\\"well well-sm selectionCount\\\">\\r\\n                                    <div class=\\\"checkbox\\\">\\r\\n                                        <p-checkbox label=\\\"Override selected companies, include all companies\\\"\\r\\n                                            [(ngModel)]=\\\"selectedOver\\\" binary=\\\"true\\\" joyrideStep=\\\"overrideSelected \\\"\\r\\n                                            (onChange)=\\\"onAllCompanyChange($event)\\\"\\r\\n                                            title=\\\"Override selected companies, include all companies\\\"\\r\\n                                            text=\\\"Override selected companies, include all companies\\\" inputId=\\\"over\\\">\\r\\n                                        </p-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"well well-sm selectionCount\\\">\\r\\n                                    <div class=\\\"checkbox\\\">\\r\\n                                        <p-checkbox label=\\\"Include Validation Info\\\" [(ngModel)]=\\\"selectedVal\\\"\\r\\n                                            joyrideStep=\\\"includeValidationInfo\\\" title=\\\"Include Validation Info\\\"\\r\\n                                            (onChange)=\\\"onValidationChange($event)\\\"\\r\\n                                            text=\\\"The user can select this option if they want to return validation information for the selected results. \\\"\\r\\n                                            inputId=\\\"selectedVal\\\" binary=\\\"true\\\">\\r\\n                                        </p-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n\\r\\n                        <label>\\r\\n                            Export Data Type:\\r\\n                        </label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                        <p-inputSwitch [(ngModel)]=\\\"termRes\\\" joyrideStep=\\\"termResults\\\" title=\\\"Term Results\\\"\\r\\n                            text=\\\"Term Results\\\" (onChange)=\\\"termChange($event)\\\"> </p-inputSwitch>\\r\\n                        &nbsp;&nbsp;<label> Term Results</label>&nbsp;&nbsp;\\r\\n                        <p-inputSwitch [(ngModel)]=\\\"covStat\\\" joyrideStep=\\\"coverageStats\\\" title=\\\"Coverage Status\\\"\\r\\n                            text=\\\"The user can select the Coverage status for selected terms by choosing this slider.\\\"\\r\\n                            (onChange)=\\\"covChange($event)\\\"></p-inputSwitch>\\r\\n                        &nbsp;&nbsp;<label>Coverage Stats </label>&nbsp;&nbsp;\\r\\n                        <p-inputSwitch *ngIf=\\\"termRes\\\" [(ngModel)]=\\\"quatCheck\\\" joyrideStep=\\\"quarterly\\\" title=\\\"Quarterly\\\"\\r\\n                            text=\\\"The user can select this option if they want to return quarterly results in addition to the annual data.\\\"\\r\\n                            (onChange)=\\\"quaterlyChange($event)\\\">\\r\\n                        </p-inputSwitch>&nbsp;&nbsp;<label *ngIf=\\\"termRes\\\">Quarterly </label>\\r\\n\\r\\n                    </div>\\r\\n                </as-split-area>\\r\\n                <as-split-area>\\r\\n                    <as-split direction=\\\"vertical\\\">\\r\\n                        <as-split-area>\\r\\n                            <div style=\\\"background-color:#ccc;\\\">\\r\\n                                <label style=\\\"float: left\\\">\\r\\n                                    Data Preview :\\r\\n                                </label> <button pButton type=\\\"button\\\" label=\\\"Refresh Data\\\" class=\\\"ui-button-warning\\\"\\r\\n                                    style=\\\"text-align: center\\\" (click)=\\\"refreshData();\\\"></button>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"termRes\\\">\\r\\n\\r\\n                                <p-table #exportTable [columns]=\\\"exportDataCols\\\" [value]=\\\"exportData\\\"\\r\\n                                    [responsive]=\\\" true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                                    columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\"\\r\\n                                    [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\" p-dataTable exportFilename=\\\"{{expFileName}}\\\"\\r\\n                                    paginatorPosition=\\\"top\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                    paginatorTemplate=\\\"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {Exporters}\\\"\\r\\n                                    [showCurrentPageReport]=\\\"true\\\" (onPage)=\\\"pagenation($event)\\\"\\r\\n                                    currentPageReportTemplate=\\\"Showing {{num}} to {{first}} of {{total}}\\\">\\r\\n                                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                                        <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left\\\" *ngIf=\\\"exportData\\\">\\r\\n                                            <button pButton type=\\\"button\\\" label=\\\"Export\\\" class=\\\"ui-button-warning\\\"\\r\\n                                                style=\\\"float: right;  padding-right: 10px;\\\"\\r\\n                                                (click)=\\\"downloadTermResData(expFileName)\\\"></button>\\r\\n                                            <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"expFileName\\\"\\r\\n                                                style=\\\"float: right;  padding-right: 10px;\\\" size=\\\"30\\\" />\\r\\n                                            <label style=\\\"float: right; padding-right: 10px;\\\"> Set Name :</label>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n                                    </ng-template>\\r\\n\\r\\n\\r\\n                                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                        <tr>\\r\\n                                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                                                [pSortableColumn]=\\\"col.field\\\">\\r\\n                                                <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                                    {{col.header}}\\r\\n                                                    <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                                        ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                                        ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                                                </div>\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                                                <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                                                    <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\"\\r\\n                                                        placeholder=\\\"Search\\\"\\r\\n                                                        [value]=\\\"exportTable.filters[col.field] ? exportTable.filters[col.field].value : ''\\\"\\r\\n                                                        (input)=\\\"exportTable.filter($event.target.value, col.field, col.filterMatchMode);\\\"\\r\\n                                                        style=\\\"width: 150px\\\">\\r\\n                                                </div>\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\"\\r\\n                                        let-index=\\\"rowIndex\\\">\\r\\n                                        <tr style=\\\"word-break:break-all\\\">\\r\\n                                            <td>\\r\\n                                                {{rowData.company}}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{rowData.reportingPeriod}}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{rowData.periodEndDate}}\\r\\n                                            </td>\\r\\n                                            <td tabindex=\\\"0\\\" *ngFor=\\\"let val of rowData.termResultValues\\\">\\r\\n                                                {{val}}\\r\\n                                            </td>\\r\\n\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n\\r\\n                                </p-table>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"covStat\\\">\\r\\n                                <p-table #covTable [columns]=\\\"coverageDataCols\\\" [value]=\\\"coverageStats\\\"\\r\\n                                    [responsive]=\\\" true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                                    columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\"\\r\\n                                    [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\" p-dataTable exportFilename=\\\"{{covFileName}}\\\"\\r\\n                                    paginatorPosition=\\\"top\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                    paginatorTemplate=\\\"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {Exporters}\\\"\\r\\n                                    [showCurrentPageReport]=\\\"true\\\" (onPage)=\\\"covPagenation($event)\\\"\\r\\n                                    currentPageReportTemplate=\\\"Showing {{covNum}} to {{covFirst}} of {{covTotal}}\\\">\\r\\n\\r\\n                                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                                        <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left\\\" *ngIf=\\\"coverageStats\\\">\\r\\n                                            <button pButton type=\\\"button\\\" label=\\\"Export\\\" class=\\\"ui-button-warning\\\"\\r\\n                                                style=\\\"float: right;  padding-right: 10px;\\\"\\r\\n                                                (click)=\\\"downloadCovData(covFileName)\\\"></button>\\r\\n                                            <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"covFileName\\\"\\r\\n                                                style=\\\"float: right;  padding-right: 10px;\\\" size=\\\"30\\\" />\\r\\n                                            <label style=\\\"float: right; padding-right: 10px;\\\"> Set Name :</label>\\r\\n\\r\\n                                        </div>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                        <tr>\\r\\n                                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                                                [pSortableColumn]=\\\"col.field\\\">\\r\\n                                                <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                                    {{col.header}}\\r\\n                                                    <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                                        ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                                        ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                                                </div>\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                                                <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                                                    <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\"\\r\\n                                                        placeholder=\\\"Search\\\"\\r\\n                                                        [value]=\\\"covTable.filters[col.field] ? covTable.filters[col.field].value : ''\\\"\\r\\n                                                        (input)=\\\"covTable.filter($event.target.value, col.field, col.filterMatchMode);\\\"\\r\\n                                                        style=\\\"width: 150px\\\">\\r\\n                                                </div>\\r\\n                                            </th>\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n                                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\"\\r\\n                                        let-index=\\\"rowIndex\\\">\\r\\n                                        <tr style=\\\"word-break:break-all\\\">\\r\\n                                            <td>\\r\\n                                                {{rowData.termName}}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                {{rowData.termId}}\\r\\n                                            </td>\\r\\n\\r\\n                                            <td tabindex=\\\"0\\\" *ngFor=\\\"let vals of rowData.coverageValues\\\">\\r\\n                                                {{vals}}\\r\\n                                            </td>\\r\\n\\r\\n                                        </tr>\\r\\n                                    </ng-template>\\r\\n\\r\\n                                </p-table>\\r\\n                            </div>\\r\\n                        </as-split-area>\\r\\n                    </as-split>\\r\\n                </as-split-area>\\r\\n            </as-split>\\r\\n        </div>\\r\\n    </p-tabPanel>\\r\\n</p-tabView>\\r\\n\\r\\n<ng-template #divisionSection>\\r\\n    <div>The user can select a division from the dropdown.</div>\\r\\n    <div>After a company is selected, this field is automatically populated after the user clicks “Go To Peer Group”\\r\\n        button.\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #sectorDropdown>\\r\\n    <div>The user can select a sector from the dropdown.\\r\\n    </div>\\r\\n    <div>After a company is selected, this field is automatically populated after the user clicks “Go To Peer Group”\\r\\n        button.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #industryDropdown>\\r\\n    <div>The user can select an industry from the dropdown.\\r\\n    </div>\\r\\n    <div>After a company is selected, this field is automatically populated after the user clicks “Go To Peer Group”\\r\\n        button.\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #filerDropdown>\\r\\n    <div>The user can select a filer from the dropdown.\\r\\n    </div>\\r\\n    <div>After a company is selected, this field is automatically populated after the user clicks “Go To Peer Group”\\r\\n        button.\\r\\n        on.\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ExportService } from './exportService';\r\nimport { UtilService } from '../utils/utilService';\r\nimport { AppComponent } from 'app/app.component';\r\nimport { CommonService } from 'app/services/common.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'export-page',\r\n  templateUrl: './export.html',\r\n  styleUrls: [`../app.component.css`],\r\n})\r\nexport class ExportComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  activeIndex: string = '0';\r\n\r\n  companyList: any[];\r\n\r\n  completeCompanyList: any[];\r\n  completeEntities: any[] = [];\r\n  filteredCompany: any[];\r\n  divisionList: any[];\r\n  filtereddivision: any[];\r\n  division: string;\r\n  sector: string;\r\n  sectorList: any[];\r\n  filteredsector: any[];\r\n  industryList: any[];\r\n  filteredindustry: any[];\r\n  industry: string;\r\n  filerCategoryList: any[];\r\n  filteredfilerCategory: any[];\r\n  filerCategory: string = null;\r\n  sics: any[] = [];\r\n  entitiesList: any = [];\r\n  selectedEntities: any = [];\r\n  company: string;\r\n  companyName: string;\r\n  industryCheck: boolean;\r\n\r\n  termInput: any;\r\n  actualTerms: any[] = [];\r\n  terms: any[] = [];\r\n  selectedTerms: any[] = [];\r\n  filteredTerms: any = [];\r\n  quarterly: boolean = true;\r\n  quatCheck: boolean = false;\r\n  annual: boolean = true;\r\n  selectedOver: boolean = false;\r\n  selectedVal: boolean = false;\r\n  termRes: boolean = true\r\n  covStat: boolean = false;\r\n  termResultFilterOptions = { isForAllEntities: false, exportType: \"termResults\", includeFiscalYears: true, includeFiscalQuarters: true, includeValidationInfos: false, startYear: (new Date()).getFullYear() - 4, endYear: (new Date()).getFullYear(), entityList: [\"000050\"], termIdList: [\"AVAILSEC\", \"ACT\", \"HTMSEC\", \"XINTRP\"] };\r\n  exportDataCols: any[] = [];\r\n  exportData: any;\r\n  actualExportData: any;\r\n  first: any = 10;\r\n  num: number = 1;\r\n  covNum: number = 1;\r\n  last: any = 10;\r\n  total: any = 0;\r\n  row: any = 10;\r\n  covFirst: any = 10;\r\n  covTotal: any = 0;\r\n  covRow: any = 10;\r\n\r\n  rangeValues: number[] = [(new Date()).getFullYear() - 4, (new Date()).getFullYear()];\r\n  minYear: number = (new Date()).getFullYear() - 4;\r\n  maxYear: number = (new Date()).getFullYear();\r\n  years: any[] = [{ label: (new Date()).getFullYear() - 4, value: (new Date()).getFullYear() - 4 }, { label: (new Date()).getFullYear() - 3, value: (new Date()).getFullYear() - 3 }, { label: (new Date()).getFullYear() - 2, value: (new Date()).getFullYear() - 2 }, { label: (new Date()).getFullYear() - 1, value: (new Date()).getFullYear() - 1 }, { label: (new Date()).getFullYear(), value: (new Date()).getFullYear() }];\r\n  year: any;\r\n\r\n  coverageStats: any[];\r\n  coverageDataCols: any[] = [];\r\n  progressSpinner: boolean;\r\n  covFileName: any = 'CoverageStats';\r\n  expFileName: any = 'TermResults';\r\n\r\n  errorMsg: string = '';\r\n  showError: boolean;\r\n\r\n  constructor(private exportService: ExportService, private commonService: CommonService, private router: Router, private utilService: UtilService, private app: AppComponent, private route: ActivatedRoute) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // CommonService.isTourGuideStart.subscribe((value) => {\r\n    //   if (value) {\r\n    //     this.activeIndex = '0';\r\n    //   }\r\n    // })\r\n    CommonService.exportTabIndex.subscribe((value) => {\r\n      this.activeIndex = value + '';\r\n    })\r\n    console.log('exportComponent : calling ngOnInit...');\r\n    this.utilService.getCompanyList().subscribe((response) => { this.companyList = response; });\r\n    this.utilService.getDivisionList().subscribe((response) => {\r\n      this.divisionList = response;\r\n      this.filtereddivision = [];\r\n      response.forEach(obj => {\r\n        if (obj != null) {\r\n          var name = { label: obj, value: obj };\r\n          this.filtereddivision.push(name)\r\n        }\r\n\r\n      });\r\n    })\r\n    this.utilService.getSectorList().subscribe((response) => {\r\n      this.sectorList = response;\r\n\r\n    })\r\n    this.utilService.getFilerCategoryList().subscribe((response) => {\r\n      this.filerCategoryList = response;\r\n      this.filteredfilerCategory = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filteredfilerCategory.push(name)\r\n      });\r\n    })\r\n    this.utilService.getIndustryList().subscribe((response) => { this.industryList = response; })\r\n\r\n    //this.utilService.getCompleteCompanyList().subscribe((response) => { this.completeCompanyList = response });\r\n    this.completeCompanyList = this.route.snapshot.data['completeCompanyList'];\r\n    this.terms = this.route.snapshot.data['termRuleList'];\r\n    this.terms = this.terms.sort((a, b) => {\r\n      if (a.termId < b.termId) { return -1; }\r\n      if (a.termId > b.termId) { return 1; }\r\n      return 0;\r\n    });\r\n    this.actualTerms = this.terms;\r\n    // this.utilService.getTermRuleList().subscribe((response) => {\r\n    //   this.terms = response;\r\n    //   this.actualTerms = response\r\n    //   this.terms = this.terms.sort((a, b) => {\r\n    //     if (a.termId < b.termId) { return -1; }\r\n    //     if (a.termId > b.termId) { return 1; }\r\n    //     return 0;\r\n    //   });\r\n    // });\r\n\r\n    this.terms.forEach(obj => {\r\n      obj.check = false;\r\n    })\r\n\r\n    this.actualTerms.forEach(obj => {\r\n      obj.check = false;\r\n    })\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.loadFromStorage();\r\n  }\r\n\r\n  loadFromStorage () {\r\n    //starting company tab\r\n    if(sessionStorage.getItem('export.companyName') !== null){\r\n      this.companyName = sessionStorage.getItem('export.companyName');\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.division') !== null){\r\n      this.division = sessionStorage.getItem('export.division');\r\n      this.divisionChange(this.division, true);\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.sector') !== null){\r\n      this.sector = sessionStorage.getItem('export.sector');\r\n      this.sectorChange(this.sector, false);\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.industry') !== null){\r\n      this.industry = sessionStorage.getItem('export.industry');\r\n      this.industryChange(this.industry, true);\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.filerCategory') !== null){\r\n      this.filerCategory = sessionStorage.getItem('export.filerCategory');\r\n      this.filerChange(this.filerCategory, true);\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.entitiesList') !== null){\r\n      this.entitiesList = JSON.parse(sessionStorage.getItem('export.entitiesList'));\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.selectedEntities') !== null){\r\n      this.selectedEntities = JSON.parse(sessionStorage.getItem('export.selectedEntities'));\r\n      //update entitiesList checkbox status\r\n      if (this.selectedEntities) {\r\n        this.selectedEntities.forEach(selected => {\r\n          this.entitiesList.forEach(eObj => {\r\n            eObj.entities.forEach(ent => {\r\n              if (ent.cik == selected.cik)\r\n                ent.check = true;\r\n            })\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n    //starting term tab\r\n    if(sessionStorage.getItem('export.termInput') !== null){\r\n      this.termInput = JSON.parse(sessionStorage.getItem('export.termInput'));\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.terms') !== null){\r\n      this.terms = JSON.parse(sessionStorage.getItem('export.terms'));\r\n    }\r\n    if(sessionStorage.getItem('export.filteredTerms') !== null){\r\n      this.filteredTerms = JSON.parse(sessionStorage.getItem('export.filteredTerms'));\r\n    }\r\n\r\n    if(sessionStorage.getItem('export.selectedTerms') !== null){\r\n      this.selectedTerms = JSON.parse(sessionStorage.getItem('export.selectedTerms'));\r\n    }\r\n\r\n    //starting export tab\r\n    if(sessionStorage.getItem('export.annual') !== null) {\r\n      this.annual = JSON.parse(sessionStorage.getItem('export.annual'));\r\n    }\r\n    if(sessionStorage.getItem('export.selectedOver') !== null) {\r\n      this.selectedOver = JSON.parse(sessionStorage.getItem('export.selectedOver'));\r\n    }\r\n    if(sessionStorage.getItem('export.selectedVal') !== null) {\r\n      this.selectedVal = JSON.parse(sessionStorage.getItem('export.selectedVal'));\r\n    }\r\n    if(sessionStorage.getItem('export.termRes') !== null) {\r\n      this.termRes = JSON.parse(sessionStorage.getItem('export.termRes'));\r\n    }\r\n    if(sessionStorage.getItem('export.covStat') !== null) {\r\n      this.covStat = JSON.parse(sessionStorage.getItem('export.covStat'));\r\n    }\r\n    if(sessionStorage.getItem('export.exportData') !== null) {\r\n      this.exportData = JSON.parse(sessionStorage.getItem('export.exportData'));\r\n    }\r\n    if(sessionStorage.getItem('export.first') !== null) {\r\n      this.first = JSON.parse(sessionStorage.getItem('export.first'));\r\n    }\r\n    if(sessionStorage.getItem('export.row') !== null) {\r\n      this.row = JSON.parse(sessionStorage.getItem('export.row'));\r\n    }\r\n    if(sessionStorage.getItem('export.total') !== null) {\r\n      this.total = JSON.parse(sessionStorage.getItem('export.total'));\r\n    }\r\n    if(sessionStorage.getItem('export.quatCheck') !== null) {\r\n      this.quatCheck = JSON.parse(sessionStorage.getItem('export.quatCheck'));\r\n    }\r\n    if(sessionStorage.getItem('export.termResultFilterOptions.startYear') !== null) {\r\n      this.termResultFilterOptions.startYear = JSON.parse(sessionStorage.getItem('export.termResultFilterOptions.startYear'));\r\n    }\r\n    if(sessionStorage.getItem('export.termResultFilterOptions.endYear') !== null) {\r\n      this.termResultFilterOptions.endYear = JSON.parse(sessionStorage.getItem('export.termResultFilterOptions.endYear'));\r\n    }\r\n    if(sessionStorage.getItem('export.rangeValues') !== null) {\r\n      this.rangeValues = JSON.parse(sessionStorage.getItem('export.rangeValues'));\r\n    }\r\n    if(sessionStorage.getItem('export.year') !== null) {\r\n      this.year = JSON.parse(sessionStorage.getItem('export.year'));\r\n    }\r\n\r\n  }\r\n  clearStorage() {\r\n    sessionStorage.removeItem('export.companyName');\r\n    sessionStorage.removeItem('export.division');\r\n    sessionStorage.removeItem('export.sector');\r\n    sessionStorage.removeItem('export.industry');\r\n    sessionStorage.removeItem('export.filerCategory');\r\n    sessionStorage.removeItem('export.selectedEntities');\r\n  }\r\n\r\n  resetCompanies() {\r\n    this.companyName = undefined;\r\n    this.division = undefined;\r\n    this.sector = undefined;\r\n    this.industry = undefined;\r\n    this.filerCategory = undefined;\r\n    this.sics = [];\r\n    this.entitiesList = [];\r\n    this.selectedEntities = [];\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n\r\n    this.clearStorage();\r\n  }\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i];\r\n      if ((cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.toLowerCase().includes(event.query.toLowerCase()))) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  onCompanyNameChange($event) {\r\n    console.log(this.companyName);\r\n    sessionStorage.setItem('export.companyName', $event);\r\n  }\r\n\r\n  searchIndustry(event) {\r\n    this.filteredindustry = [];\r\n    for (let i = 0; i < this.industryList.length; i++) {\r\n      let cname: string = this.industryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredindustry.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchDivisionSector(event) {\r\n    this.filtereddivision = [];\r\n    for (let i = 0; i < this.divisionList.length; i++) {\r\n      let cname: string = this.divisionList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filtereddivision.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchFilerCategory(event) {\r\n    this.filteredfilerCategory = [];\r\n    for (let i = 0; i < this.filerCategoryList.length; i++) {\r\n      let cname: string = this.filerCategoryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredfilerCategory.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  goToPeer(event) {\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n    this.company = null;\r\n    if (this.companyName != undefined && this.companyName.length > 15) {\r\n      this.company = this.companyName.substr(0, this.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.division = peer[0].division;\r\n      this.sector = peer[0].sector;\r\n      this.industry = peer[0].sic + '-' + peer[0].industry;\r\n      this.filerCategory = peer[0].filerCategory;\r\n      this.sics = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.divisionChange(this.division, true);\r\n      this.filteredindustry = [];\r\n      var name = { label: this.industry, value: this.industry };\r\n      this.filteredindustry.push(name);\r\n      this.sectorChange(this.sector, true);\r\n      this.industryChange(this.industry, true);\r\n      this.filerChange(this.filerCategory, true)\r\n\r\n    } else {\r\n      this.errorMsg = 'Please Select Company';\r\n      this.showError = true;\r\n\r\n    }\r\n\r\n  }\r\n  divisionChange(event, peer) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    event = event.value ? event.value : event;\r\n    var division = event;\r\n    if (!peer) {\r\n      this.sector = undefined;\r\n      this.industry = undefined;\r\n      this.filerCategory = undefined;\r\n      this.sics = [];\r\n      this.entitiesList = [];\r\n      sessionStorage.removeItem('export.sector');\r\n      sessionStorage.removeItem('export.industry');\r\n      sessionStorage.removeItem('export.filerCategory');\r\n    }\r\n    // var sector = event.substr(event.indexOf( '->')+3, event.length);\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n    this.filteredsector = [];\r\n    this.completeEntities.forEach(obj => {\r\n      var name = { label: obj.sector, value: obj.sector };\r\n      if (obj != null) {\r\n        this.filteredsector.push(name)\r\n      }\r\n    })\r\n    this.filteredsector = this.filteredsector.filter((el, i, a) =>\r\n      i === a.findIndex((obj) =>\r\n        obj.label === el.label\r\n      ))\r\n      this.filteredsector.sort((a, b) => a.label > b.label ? 1 : -1)\r\n\r\n    sessionStorage.setItem('export.division', event);\r\n  }\r\n\r\n  sectorChange(event, peer) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    this.entitiesList = [];\r\n    if (!peer)\r\n      this.sics = [];\r\n    event = event.value ? event.value : event;\r\n    var sector = event;\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n      var ind = { industry: obj.industry }\r\n      if (!peer)\r\n        this.sics.push(ind);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    if (!peer) {\r\n      this.filteredindustry = [];\r\n      this.industry = undefined;\r\n    }\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.sics = this.sics.filter((el, i, a) =>\r\n      i === a.findIndex((obj) =>\r\n        obj.industry === el.industry\r\n      ))\r\n    this.sics.forEach(sic => {\r\n      var completeList = this.completeCompanyList;\r\n      var list = completeList.filter(obj => obj.industry === sic.industry);\r\n      if (this.filerCategory)\r\n        list = list.filter(obj => obj.filerCategory === this.filerCategory);\r\n        list.sort((a, b) => a.companyName > b.companyName ? 1 : -1)\r\n      var entity = { industry: sic.industry, entities: list, check: false };\r\n      this.entitiesList.push(entity);\r\n    })\r\n    this.filteredindustry.sort((a, b) => a.label > b.label ? 1 : -1)\r\n    this.sics.sort((a, b) => a.industry > b.industry ? 1 : -1)\r\n    // this.entitiesList.sort((a, b) => a.label > b.label ? 1 : -1)\r\n\r\n    sessionStorage.setItem('export.sector', event);\r\n  }\r\n\r\n  industryChange(event, peer) {\r\n    this.entitiesList = [];\r\n    event = event.value ? event.value : event;\r\n    var industry = event.substr(event.indexOf('-') + 1, event.length);\r\n    var entities = this.completeEntities;\r\n    if (industry) {\r\n      entities.filter(obj => obj.industry === industry);\r\n      this.sics = [];\r\n      this.sics.push({ industry: industry });\r\n      this.sics.forEach(sic => {\r\n        var list = entities.filter(obj => obj.industry === sic.industry);\r\n        if (this.filerCategory)\r\n          list = list.filter(obj => obj.filerCategory === this.filerCategory);\r\n          list.sort((a, b) => a.companyName > b.companyName ? 1 : -1)\r\n        var entity = { industry: sic.industry, entities: list, check: false };\r\n        this.entitiesList.push(entity);\r\n      })\r\n    }\r\n\r\n    sessionStorage.setItem('export.industry', event);\r\n  }\r\n\r\n  filerChange(event, peer) {\r\n    event = event.value ? event.value : event;\r\n    var filer = event;\r\n    var entities = this.completeEntities;\r\n    this.entitiesList = [];\r\n    entities.filter(obj => obj.filerCategory === filer);\r\n    this.sics.forEach(sic => {\r\n      var list = entities.filter(obj => obj.industry === sic.industry);\r\n      if (this.filerCategory)\r\n        list = list.filter(obj => obj.filerCategory === this.filerCategory);\r\n        list.sort((a, b) => a.companyName > b.companyName ? 1 : -1)\r\n      var entity = { industry: sic.industry, entities: list, check: false };\r\n      this.entitiesList.push(entity);\r\n    })\r\n\r\n    sessionStorage.setItem('export.filerCategory', event);\r\n  }\r\n  selectEntitiesWithSicCode(type: any, list, checked) {\r\n    console.log(type + list);\r\n    if (checked) {\r\n      list.forEach(obj => {\r\n        if (!this.selectedEntities.some((item) => item == obj))\r\n          this.selectedEntities.push(obj);\r\n        this.entitiesList.forEach(eObj => {\r\n          eObj.entities.forEach(ent => {\r\n            if (ent == obj) {\r\n              eObj.check = true;\r\n              ent.check = true;\r\n            }\r\n          })\r\n        })\r\n      })\r\n    } else {\r\n      for (var i = 0; i < list.length; i++) {\r\n        var ind;\r\n        this.selectedEntities.forEach(element => {\r\n          if(element.cik == list[i].cik) {\r\n            ind = this.selectedEntities.indexOf(element);\r\n          }\r\n        });\r\n        if (ind !== -1)\r\n          this.selectedEntities.splice(ind, 1);\r\n        this.entitiesList.forEach(eObj => {\r\n          eObj.entities.forEach(ent => {\r\n            if (ent == list[i])\r\n              ent.check = false;\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n    sessionStorage.setItem('export.selectedEntities', JSON.stringify(this.selectedEntities));\r\n    sessionStorage.setItem('export.entitiesList', JSON.stringify(this.entitiesList));\r\n  }\r\n\r\n  show(industry) {\r\n    console.log(industry);\r\n  }\r\n\r\n  isSelected(selected, index) {\r\n    if (!this.selectedEntities.some((item) => item.cik == selected.cik)) { //check\r\n      this.selectedEntities.push(selected);\r\n    } else { //uncheck\r\n      //remove item from existing selected list\r\n      var ind;\r\n      this.selectedEntities.forEach(element => {\r\n        if(element.cik == selected.cik) {\r\n          ind = this.selectedEntities.indexOf(element);\r\n        }\r\n      });\r\n      this.selectedEntities.splice(ind, 1);\r\n      //update check status on original entity list\r\n      this.entitiesList.forEach(eObj => {\r\n        eObj.entities.forEach(ent => {\r\n          if (ent.cik == selected.cik)\r\n            ent.check = false;\r\n        })\r\n      })\r\n    }\r\n    sessionStorage.setItem('export.selectedEntities', JSON.stringify(this.selectedEntities));\r\n  };\r\n  deselectAllTerms() {\r\n    this.selectedTerms = [];\r\n    this.terms.forEach(obj => {\r\n      obj.check = false;\r\n    })\r\n    sessionStorage.removeItem('export.selectedTerms');\r\n    sessionStorage.setItem('export.terms', JSON.stringify(this.terms));\r\n  }\r\n\r\n  selectAllTerms() {\r\n    this.terms.forEach(obj => {\r\n      obj.check = true;\r\n    })\r\n    this.terms.forEach(obj => {\r\n      if (!this.selectedTerms.some((item) => item.termId == obj.termId)) {\r\n        this.selectedTerms.push(obj);\r\n      }\r\n    })\r\n    sessionStorage.setItem('export.selectedTerms', JSON.stringify(this.selectedTerms));\r\n    sessionStorage.setItem('export.terms', JSON.stringify(this.terms));\r\n  }\r\n\r\n  isTermSelected(selected, index) {\r\n    if (!this.selectedTerms.some((item) => item.name == selected.name)) {\r\n      this.selectedTerms.push(selected);\r\n    } else {\r\n      this.terms.forEach(obj => {\r\n        if (obj.name === selected.name) {\r\n          obj.check = false;\r\n        }\r\n      })\r\n      var ind;\r\n      this.selectedTerms.forEach(element => {\r\n        if(element.name === selected.name) {\r\n          ind = this.selectedTerms.indexOf(element);\r\n        }\r\n      });\r\n      this.selectedTerms.splice(ind, 1);\r\n    }\r\n    sessionStorage.setItem('export.selectedTerms', JSON.stringify(this.selectedTerms));\r\n    sessionStorage.setItem('export.terms', JSON.stringify(this.terms));\r\n  };\r\n\r\n  removeSelectedTerms() {\r\n    this.selectedTerms = [];\r\n    this.terms.forEach(obj => {\r\n      obj.check = false;\r\n    })\r\n    sessionStorage.removeItem('export.selectedTerms');\r\n  }\r\n  removeSelectedEntities() {\r\n    this.selectedEntities = [];\r\n    this.entitiesList.forEach(eObj => {\r\n      eObj.check = false;\r\n      eObj.entities.forEach(ent => {\r\n        ent.check = false;\r\n      })\r\n    })\r\n    this.sics.forEach(eObj => {\r\n      eObj.check = false;\r\n    })\r\n    sessionStorage.removeItem('export.selectedEntities');\r\n  }\r\n  removeEntity() {\r\n    this.selectedEntities\r\n  }\r\n\r\n  filterTerm(event) {\r\n    if (event.query != null && event.query != '') {\r\n      this.filteredTerms = [];\r\n      for (let i = 0; i < this.actualTerms.length; i++) {\r\n        var cname = this.actualTerms[i];\r\n        if ((cname != null && cname.termId.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.name.toLowerCase().includes(event.query.toLowerCase()))) {\r\n          this.filteredTerms.push(cname);\r\n        }\r\n      }\r\n      this.terms = this.filteredTerms;\r\n    } else {\r\n      this.terms = this.actualTerms;\r\n    }\r\n    sessionStorage.setItem('export.terms', JSON.stringify(this.terms));\r\n    sessionStorage.setItem('export.filteredTerms', JSON.stringify(this.filteredTerms));\r\n  }\r\n\r\n  onTermChange($event){\r\n    console.log(this.termInput);\r\n    sessionStorage.setItem('export.termInput', JSON.stringify($event));\r\n  }\r\n\r\n  //from export tab\r\n  onAnnualChange($event) {\r\n    sessionStorage.setItem('export.annual', JSON.stringify(this.annual));\r\n  }\r\n  onAllCompanyChange($event) {\r\n    sessionStorage.setItem('export.selectedOver', JSON.stringify(this.selectedOver));\r\n  }\r\n  onValidationChange($event) {\r\n    sessionStorage.setItem('export.selectedVal', JSON.stringify(this.selectedVal));\r\n  }\r\n\r\n  termChange(event) {\r\n    if (event.checked) {\r\n      this.termRes = true;\r\n      this.covStat = false;\r\n    } else {\r\n      this.termRes = false;\r\n      this.covStat = true;\r\n    }\r\n    sessionStorage.setItem('export.termRes', JSON.stringify(this.termRes));\r\n    sessionStorage.setItem('export.covStat', JSON.stringify(this.covStat));\r\n  }\r\n\r\n  covChange(event) {\r\n    if (event.checked) {\r\n      this.covStat = true;\r\n      this.termRes = false\r\n    } else {\r\n      this.termRes = true;\r\n      this.covStat = false;\r\n    }\r\n    sessionStorage.setItem('export.termRes', JSON.stringify(this.termRes));\r\n    sessionStorage.setItem('export.covStat', JSON.stringify(this.covStat));\r\n  }\r\n  quaterlyChange(event) {\r\n    this.exportData = [];\r\n    if (!event.checked) {\r\n      //this.exportData = this.actualExportData;\r\n      if (this.actualExportData) {\r\n        this.actualExportData.forEach(obj => {\r\n          if (obj.reportingPeriod.includes('FY')) {\r\n            this.exportData.push(obj);\r\n          }\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.exportData = this.actualExportData;\r\n    }\r\n    if (this.exportData) {\r\n      this.first = this.exportData.length > 10 ? 10 : this.exportData.length;\r\n      this.row = (this.exportData.length - this.first);\r\n      this.total = this.exportData.length;\r\n      sessionStorage.setItem('export.exportData', JSON.stringify(this.exportData));\r\n    } else {\r\n      sessionStorage.removeItem('export.exportData');\r\n    }\r\n    sessionStorage.setItem('export.first', JSON.stringify(this.first));\r\n    sessionStorage.setItem('export.row', JSON.stringify(this.row));\r\n    sessionStorage.setItem('export.total', JSON.stringify(this.total));\r\n    sessionStorage.setItem('export.quatCheck', JSON.stringify(this.quatCheck));\r\n  }\r\n\r\n  refreshData() {\r\n    this.termResultFilterOptions.isForAllEntities = this.selectedOver;\r\n    this.termResultFilterOptions.includeFiscalYears = this.annual;\r\n    this.termResultFilterOptions.includeFiscalQuarters = this.quarterly;\r\n    this.termResultFilterOptions.includeValidationInfos = this.selectedVal;\r\n    this.num = 1;\r\n    this.first = 10;\r\n    this.total = 0;\r\n    this.covNum = 1;\r\n    this.covFirst = 10;\r\n    this.covTotal = 0;\r\n    this.progressSpinner = true;\r\n    this.showError = false;\r\n    this.errorMsg = '';\r\n    //this.quatCheck = true;\r\n    this.exportData = [];\r\n    this.coverageStats = [];\r\n\r\n    if (this.termRes) {\r\n      this.refreshExportTermResultsData();\r\n\r\n    } else {\r\n      this.refreshExportCoverageData();\r\n    }\r\n  }\r\n\r\n  refreshExportTermResultsData() {\r\n    var entityIds: any[] = [];\r\n    this.exportDataCols = [];\r\n    this.exportData = [];\r\n    this.selectedEntities.forEach(obj => {\r\n      entityIds.push(obj.entityId);\r\n    })\r\n    this.termResultFilterOptions.entityList = entityIds;\r\n    if (this.termResultFilterOptions.entityList.length === 0) {\r\n      // if (this.termResultFilterOptions.isForAllEntities !== true) {\r\n      //   this.progressSpinner = false;\r\n      //     this.showError = true;\r\n      //     this.errorMsg = \"Error Atleast one Company needs to be specified for processing or all companies override needs to be checked.\";\r\n      //     return;\r\n      // }\r\n      this.termResultFilterOptions.isForAllEntities = true;\r\n      this.selectedOver = true;\r\n    }\r\n    var termIds: any = [];\r\n    this.selectedTerms.forEach(obj => {\r\n      termIds.push(obj.termId);\r\n    })\r\n    if (termIds.length === 0) {\r\n      this.showError = true;\r\n      this.progressSpinner = false;\r\n      this.errorMsg = \"Atleast one Term needs to be checked.\";\r\n      return;\r\n    }\r\n    this.termResultFilterOptions.termIdList = termIds;\r\n    var cols = [\r\n      { field: 'company', header: 'Company' },\r\n      { field: 'reportingPeriod', header: 'Reporting Period' },\r\n      { field: 'periodEndDate', header: 'Period End Date' },\r\n    ];\r\n    cols.forEach(obj => {\r\n      this.exportDataCols.push(obj)\r\n    })\r\n\r\n    this.exportService.getResultsForExportTermResults(this.termResultFilterOptions).subscribe(\r\n      (response) => {\r\n        this.exportData = response;\r\n        if (this.termResultFilterOptions.includeValidationInfos === true) {\r\n\r\n          this.exportData.termNameList.forEach(name => {\r\n            var col = [{ field: name, header: name },\r\n            { field: 'resolvedExpressions', header: name + ' Resolved Expression' },\r\n            { field: 'validationStatuses', header: name + ' Validation Status' },\r\n            { field: 'validationMessages', header: name + ' Validation Message' }];\r\n            col.forEach(obj => {\r\n              this.exportDataCols.push(obj)\r\n            })\r\n            this.progressSpinner = false;\r\n            //this.exportDataCols.push(col);\r\n          });\r\n\r\n        } else {\r\n          this.exportData.termNameList.forEach(name => {\r\n\r\n            var col = [{ field: 'termResultValues', header: name },\r\n            { field: 'resolvedExpressions', header: name + ' Resolved Expression' }]\r\n            col.forEach(obj => {\r\n              this.exportDataCols.push(obj)\r\n            })\r\n            this.progressSpinner = false;\r\n            // this.exportDataCols.push (col);\r\n          });\r\n        }\r\n        for (var i = 0; i < this.exportData.exportItemList.length; i++) {\r\n          var res = this.exportData.exportItemList[i];\r\n          var termValues = res.termResultValues;\r\n          var updatedTermValues = [];\r\n          if (this.termResultFilterOptions.includeValidationInfos === true) {\r\n\r\n            for (var x = 0; x < termValues.length; x++) {\r\n              var expo = Number.parseFloat(termValues[x]).toFixed(0)\r\n              updatedTermValues.push(expo);\r\n              updatedTermValues.push(res.resolvedExpressions[x]);\r\n              updatedTermValues.push(res.validationStatuses[x]);\r\n              updatedTermValues.push(res.validationMessages[x]);\r\n\r\n            }\r\n\r\n          } else {\r\n            for (var x = 0; x < termValues.length; x++) {\r\n              var expo = Number.parseFloat(termValues[x]).toFixed(0)\r\n              updatedTermValues.push(expo);\r\n              updatedTermValues.push(res.resolvedExpressions[x]);\r\n\r\n            }\r\n          }\r\n\r\n          res.termResultValues = updatedTermValues;\r\n        }\r\n        this.actualExportData = this.exportData.exportItemList;\r\n        this.exportData = this.exportData.exportItemList;\r\n        // this.actualExportData = this.exportData;\r\n        if (!this.quatCheck) {\r\n          this.exportData = [];\r\n          this.actualExportData.forEach(obj => {\r\n            if (obj.reportingPeriod.includes('FY')) {\r\n              this.exportData.push(obj);\r\n            }\r\n          })\r\n        }\r\n\r\n        this.first = this.exportData.length > 10 ? 10 : this.exportData.length;\r\n        this.row = (this.exportData.length - this.first);\r\n        this.total = this.exportData.length;\r\n      })\r\n\r\n\r\n  };\r\n  pagenation(value) {\r\n    console.log(value);\r\n    let initialCount = value.rows;\r\n    value.first = (value.first + initialCount);\r\n    this.num = value.first - value.rows;\r\n    this.num = this.num = 0 ? 1 : this.num;\r\n    this.first = value.first;\r\n    this.first = this.first > this.exportData.length ? this.exportData.length : this.first;\r\n    this.row = (this.exportData.length - value.first);\r\n    this.total = this.exportData.length;\r\n  }\r\n\r\n  covPagenation(value) {\r\n    console.log(value);\r\n    let initialCount = value.rows;\r\n    value.first = (value.first + initialCount);\r\n    this.covNum = value.first - value.rows;\r\n    this.covNum = this.covNum = 0 ? 1 : this.covNum;\r\n    this.covFirst = value.first;\r\n    this.covFirst = this.covFirst > this.coverageStats.length ? this.coverageStats.length : this.covFirst;\r\n    this.covRow = (this.coverageStats.length - value.first);\r\n    this.covTotal = this.exportData.length;\r\n  }\r\n\r\n\r\n  yearChange(event) {\r\n    if (event.value === null) {\r\n      this.termResultFilterOptions.startYear = (new Date()).getFullYear() - 4;\r\n      this.termResultFilterOptions.endYear = (new Date()).getFullYear();\r\n    } else {\r\n      this.rangeValues = [event.value, event.value];\r\n      // this.rangeValues = [(new Date()).getFullYear()-4, (new Date()).getFullYear()];\r\n      this.termResultFilterOptions.startYear = event.value;\r\n      this.termResultFilterOptions.endYear = event.value;\r\n      //this.selectedOver = true;\r\n    }\r\n    sessionStorage.setItem('export.termResultFilterOptions.startYear', JSON.stringify(this.termResultFilterOptions.startYear));\r\n    sessionStorage.setItem('export.termResultFilterOptions.endYear', JSON.stringify(this.termResultFilterOptions.endYear));\r\n    sessionStorage.setItem('export.selectedOver', JSON.stringify(this.selectedOver));\r\n    sessionStorage.setItem('export.rangeValues', JSON.stringify(this.rangeValues));\r\n    sessionStorage.setItem('export.year', JSON.stringify(this.year));\r\n  }\r\n\r\n  yearSlideChange(event) {\r\n    this.year = '';\r\n    this.selectedOver = false;\r\n    this.termResultFilterOptions.startYear = this.rangeValues[0];\r\n    this.termResultFilterOptions.endYear = this.rangeValues[1];\r\n\r\n    sessionStorage.setItem('export.termResultFilterOptions.startYear', JSON.stringify(this.termResultFilterOptions.startYear));\r\n    sessionStorage.setItem('export.termResultFilterOptions.endYear', JSON.stringify(this.termResultFilterOptions.endYear));\r\n    sessionStorage.setItem('export.selectedOver', JSON.stringify(this.selectedOver));\r\n    sessionStorage.setItem('export.rangeValues', JSON.stringify(this.rangeValues));\r\n    sessionStorage.setItem('export.year', JSON.stringify(this.year));\r\n  }\r\n\r\n  refreshExportCoverageData() {\r\n    this.coverageStats = [];\r\n    this.coverageDataCols = [];\r\n    var entityIds: any[] = [];\r\n    this.selectedEntities.forEach(obj => {\r\n      entityIds.push(obj.entityId);\r\n    })\r\n    this.termResultFilterOptions.entityList = entityIds;\r\n\r\n    if (this.termResultFilterOptions.entityList.length === 0) {\r\n      // if (this.termResultFilterOptions.isForAllEntities !== true)  {\r\n      //   this.showError = true;\r\n      //   this.progressSpinner = false;\r\n      //     this.errorMsg = \"Atleast one Company needs to be specified for processing or all companies override needs to be checked.\";\r\n      //     return;\r\n      // }\r\n      this.termResultFilterOptions.isForAllEntities = true;\r\n      this.selectedOver = true\r\n    }\r\n\r\n    var termIds: any = [];\r\n    this.selectedTerms.forEach(obj => {\r\n      termIds.push(obj.termId);\r\n    })\r\n    if (termIds.length === 0) {\r\n      this.showError = true;\r\n      this.progressSpinner = false;\r\n      this.errorMsg = \"Atleast one Term needs to be checked.\";\r\n      return;\r\n    }\r\n    this.termResultFilterOptions.termIdList = termIds;\r\n\r\n    this.exportService.getResultsForExportCoverage(this.termResultFilterOptions).subscribe(\r\n      (response) => {\r\n        this.coverageStats = response.exportItemList;\r\n        this.covFirst = this.coverageStats.length > 10 ? 10 : this.coverageStats.length;\r\n        this.covRow = (this.coverageStats.length - this.covFirst);\r\n        this.covTotal = this.coverageStats.length;\r\n        this.progressSpinner = false;\r\n        response.columnList.forEach(obj => {\r\n          this.coverageDataCols.push({ header: obj })\r\n        })\r\n      }, function errorfunction(err) {\r\n        this.progressSpinner = false;\r\n        console.log(\"Export error: \" + JSON.stringify(err));\r\n      });\r\n\r\n  };\r\n  downloadTermResData(fileName) {\r\n  // downloadTermResData(table) {\r\n    fileName = fileName.includes('.csv') ? fileName : fileName + '.csv'\r\n    var headers: any[] = [];\r\n    headers.push('CIK')\r\n    this.exportDataCols.forEach(obj => {\r\n      headers.push(obj.header);\r\n    })\r\n    var data: any[] = [];\r\n    this.exportData.forEach(obj => {\r\n      var dat = [];\r\n      dat.push(obj.cik);\r\n      dat.push(\"\\\"\" + obj.company + \"\\\"\")\r\n      dat.push(obj.reportingPeriod)\r\n      dat.push(obj.periodEndDate)\r\n      obj.termResultValues.forEach(val => {\r\n        val = \"\\\"\" + val + \"\\\"\"\r\n        dat.push(val);\r\n      })\r\n      data.push(dat);\r\n    })\r\n\r\n    this.downloadFile(data, fileName, headers);\r\n\r\n    // table.value.forEach(item => {\r\n    //   item.termResultValues = item.termResultValues[0];\r\n    // });\r\n    // table.exportCSV();\r\n\r\n  }\r\n\r\n  downloadCovData(fileName) {\r\n    fileName = fileName.includes('.csv') ? fileName : fileName + '.csv'\r\n    var headers: any[] = [];\r\n    this.coverageDataCols.forEach(obj => {\r\n      headers.push(obj.header);\r\n    })\r\n    var data: any[] = [];\r\n    this.coverageStats.forEach(obj => {\r\n      var dat = [];\r\n      dat.push(\"\\\"\" + obj.termName + \"\\\"\")\r\n      dat.push(obj.termId)\r\n      obj.coverageValues.forEach(val => {\r\n        val = \"\\\"\" + val + \"\\\"\"\r\n        dat.push(val);\r\n      })\r\n      data.push(dat);\r\n    })\r\n\r\n    this.downloadFile(data, fileName, headers);\r\n\r\n  }\r\n\r\n\r\n  downloadFile(data, filename, header: any[]) {\r\n    let csvData = this.ConvertToCSV(data, header);\r\n    console.log(csvData)\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\r\n      dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n    dwldLink.setAttribute(\"href\", url);\r\n    dwldLink.setAttribute(\"download\", filename);\r\n    dwldLink.style.visibility = \"hidden\";\r\n    document.body.appendChild(dwldLink);\r\n    dwldLink.click();\r\n    document.body.removeChild(dwldLink);\r\n  }\r\n\r\n  ConvertToCSV(objArray, headerList) {\r\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    let row = '';\r\n\r\n    for (let index in headerList) {\r\n      row += headerList[index] + ',';\r\n    }\r\n    row = row.slice(0, -1);\r\n    str += row + '\\r\\n';\r\n    for (let i = 0; i < array.length; i++) {\r\n      let line = '';\r\n      line = array[i];\r\n      str += line + '\\r\\n';\r\n    }\r\n    return str;\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class ExportService {\r\n\r\n    private exportTermResultsUrl = '/api/ExportTermResults';\r\n    private exportTermCoverageUrl = '/api/ExportTermCoverage'\r\n\r\n    \r\n    // private exportTermResultsUrl = 'https://localhost:18081/api/ExportTermResults';\r\n    // private exportTermCoverageUrl = 'https://localhost:18081/api/ExportTermCoverage'\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getResultsForExportTermResults(trp) {\r\n        console.log('ExportService : getResultsForExportTermResults()...');\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        const body = JSON.stringify({\r\n            includeFiscalYears: trp.includeFiscalYears, includeFiscalQuarters: trp.includeFiscalQuarters, startYear: trp.startYear, endYear: trp.endYear, entityId: trp.entityId,\r\n            termId: trp.termId, entityList: trp.entityList, termIdList: trp.termIdList, exportType: trp.exportType, isForAllEntities: trp.isForAllEntities, includeValidationInfos: trp.includeValidationInfos\r\n        });\r\n        return this.http.put(`${this.exportTermResultsUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => data.json()))\r\n    }\r\n\r\n    getResultsForExportCoverage(trp) {\r\n        console.log('ExportService : getResultsForExportCoverage()...');\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        const body = JSON.stringify({\r\n            includeFiscalYears: trp.includeFiscalYears, includeFiscalQuarters: trp.includeFiscalQuarters, startYear: trp.startYear, endYear: trp.endYear, entityId: trp.entityId,\r\n            termId: trp.termId, entityList: trp.entityList, termIdList: trp.termIdList, exportType: trp.exportType, isForAllEntities: trp.isForAllEntities, includeValidationInfos: trp.includeValidationInfos\r\n        });\r\n        return this.http.put(`${this.exportTermCoverageUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => data.json()))\r\n    }\r\n}","module.exports = \".container {\\r\\n  display:flex;\\r\\n  justify-content:flex-start;\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.div1 {\\r\\n  position: relative;\\r\\n  height:100vh;\\r\\n  flex-grow:0;\\r\\n  margin-left: -45%;\\r\\n  min-width: 18vw;\\r\\n\\r\\n }\\r\\n\\r\\n.dragHorizental {\\r\\n   padding:15px;\\r\\n   position:relative;\\r\\n }\\r\\n\\r\\n.dragHorizental .dragger{\\r\\n  content: '';\\r\\n   position: absolute;\\r\\n   bottom: 0;\\r\\n   margin-left: -15px;\\r\\n   cursor: s-resize;\\r\\n   height: 7px;\\r\\n   width: 78vw;\\r\\n   border-top: 1px solid darkgray;\\r\\n   overflow: hidden;\\r\\n   background-color: #eff0f1;\\r\\n   background-position: 210px -364px;\\r\\n   background-size: initial;\\r\\n   background-repeat: no-repeat;\\r\\n}\\r\\n\\r\\n.p-0 {\\r\\n  padding: 0px !important;\\r\\n}\\r\\n\\r\\n.p-y-5 {\\r\\n  padding: 5px 0px !important;\\r\\n}\\r\\n\\r\\n.p-x-5 {\\r\\n  padding: 0px 5px !important;\\r\\n}\\r\\n\\r\\n.m-y-5 {\\r\\n  margin: 5px 0px !important;\\r\\n}\\r\\n\\r\\n.m-x-5 {\\r\\n  margin: 0px 5px !important;\\r\\n}\\r\\n\\r\\n.input-wrapper label {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.input-wrapper input {\\r\\nwidth: 100%;\\r\\nheight: 35px;\\r\\n}\\r\\n\\r\\n.input-wrapper textarea{\\r\\nwidth: 100%;\\r\\nmin-height: 35px;\\r\\n}\\r\\n\\r\\n.input-wrapper p-dropdown div {\\r\\nwidth: 100% !important;\\r\\nmin-height: 35px !important;\\r\\n}\\r\\n\\r\\n.node circle {\\r\\n  fill: #999;\\r\\n}\\r\\n\\r\\n.node text {\\r\\n  font: 10px sans-serif;\\r\\n}\\r\\n\\r\\n.node--internal circle {\\r\\n  fill: #555;\\r\\n}\\r\\n\\r\\n.node--internal text {\\r\\n  text-shadow: 0 1px 0 #fff, 0 -1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff;\\r\\n}\\r\\n\\r\\n.link {\\r\\n  fill: none;\\r\\n  stroke: #555;\\r\\n  stroke-opacity: 0.4;\\r\\n  stroke-width: 1.5px;\\r\\n}\\r\\n\\r\\n::ng-deep #termRulesTreeTable p-treetable .ui-treetable .ui-treetable-wrapper table.ui-treetable-table tbody.ui-treetable-tbody tr td.ui-toggler-column {\\r\\n  border: none !important;\\r\\n}\\r\\n\\r\\n.selected-node {\\r\\n  font-weight: bolder !important;\\r\\n}\\r\\n\\r\\n.modal {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  z-index: 1050;\\r\\n  overflow: auto;\\r\\n  outline: 0;\\r\\n  max-height: 98vh;\\r\\n  height: -webkit-fit-content;\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;  \\r\\n  border: 1px solid #c8c8c8;\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n  background-color: #fefefe;\\r\\n  margin: auto;\\r\\n  padding: 0px 10px 10px 10px;\\r\\n  border: 1px solid #888;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.minimize-modal {\\r\\n  display: block !important;\\r\\n  height: 50px !important;\\r\\n  width: 185px !important;\\r\\n  top: 94.8vh !important;\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n\\r\\n.modal-header {\\r\\n  border-bottom: 1px solid #c8c8c8;\\r\\n  background-color: #f4f4f4;\\r\\n  color: #333333;\\r\\n  padding: 5px;\\r\\n  font-weight: 700;\\r\\n}\\r\\n\\r\\n.w-100 {\\r\\n  width: 100% !important;\\r\\n}\\r\\n\\r\\n/* The Close Button */\\r\\n\\r\\n.close {\\r\\n  font-size: 28px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.minimize {\\r\\n  color: #333333;\\r\\n  font-size: 28px;\\r\\n  opacity: 0.5;\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.minimize:hover,\\r\\n.minimize:focus, \\r\\n.maximize:hover,\\r\\n.maximize:focus {\\r\\n  color: #000;\\r\\n  text-decoration: none;\\r\\n  cursor: pointer;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.maximize { \\r\\n  color: #333333;\\r\\n    font-size: 24px;\\r\\n    position: relative;\\r\\n    top: 4px;\\r\\n    opacity: 0.3;\\r\\n    margin-right: 10px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.float-right {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.close:hover,\\r\\n.close:focus {\\r\\n  color: #000;\\r\\n  text-decoration: none;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.cancel-btn-container {\\r\\n  padding-top: 15px;  \\r\\n}\\r\\n\\r\\n::ng-deep .company-name-wrapper input {\\r\\n  width: 91.78% !important;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZWhvbWUvZmVhdHVyZWhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWiwwQkFBMEI7RUFDMUIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGVBQWU7O0NBRWhCOztBQUVEO0dBQ0csWUFBWTtHQUNaLGlCQUFpQjtDQUNuQjs7QUFFRDtFQUNFLFdBQVc7R0FDVixrQkFBa0I7R0FDbEIsU0FBUztHQUNULGtCQUFrQjtHQUNsQixnQkFBZ0I7R0FDaEIsV0FBVztHQUNYLFdBQVc7R0FDWCw4QkFBOEI7R0FDOUIsZ0JBQWdCO0dBQ2hCLHlCQUF5QjtHQUN6QixpQ0FBaUM7R0FDakMsd0JBQXdCO0dBQ3hCLDRCQUE0QjtBQUMvQjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7QUFDQSxXQUFXO0FBQ1gsWUFBWTtBQUNaOztBQUVBO0FBQ0EsV0FBVztBQUNYLGdCQUFnQjtBQUNoQjs7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QiwyQkFBMkI7QUFDM0I7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxRUFBcUU7QUFDdkU7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsYUFBYTtFQUNiLGNBQWM7RUFDZCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CO0VBQ25CLHlCQUF5QjtBQUMzQjs7QUFFQSxrQkFBa0I7O0FBQ2xCO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWiwyQkFBMkI7RUFDM0Isc0JBQXNCO0VBQ3RCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6Qix1QkFBdUI7RUFDdkIsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBLHFCQUFxQjs7QUFDckI7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBOzs7O0VBSUUsV0FBVztFQUNYLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsVUFBVTtBQUNaOztBQUVBO0VBQ0UsY0FBYztJQUNaLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBOztFQUVFLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2ZlYXR1cmVob21lL2ZlYXR1cmVob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICBkaXNwbGF5OmZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG5cclxuLmRpdjEge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6MTAwdmg7XHJcbiAgZmxleC1ncm93OjA7XHJcbiAgbWFyZ2luLWxlZnQ6IC00NSU7XHJcbiAgbWluLXdpZHRoOiAxOHZ3O1xyXG5cclxuIH1cclxuXHJcbi5kcmFnSG9yaXplbnRhbCB7XHJcbiAgIHBhZGRpbmc6MTVweDtcclxuICAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiB9XHJcblxyXG4uZHJhZ0hvcml6ZW50YWwgLmRyYWdnZXJ7XHJcbiAgY29udGVudDogJyc7XHJcbiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgYm90dG9tOiAwO1xyXG4gICBtYXJnaW4tbGVmdDogLTE1cHg7XHJcbiAgIGN1cnNvcjogcy1yZXNpemU7XHJcbiAgIGhlaWdodDogN3B4O1xyXG4gICB3aWR0aDogNzh2dztcclxuICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGRhcmtncmF5O1xyXG4gICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZmMGYxO1xyXG4gICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyMTBweCAtMzY0cHg7XHJcbiAgIGJhY2tncm91bmQtc2l6ZTogaW5pdGlhbDtcclxuICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxufVxyXG5cclxuLnAtMCB7XHJcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wLXktNSB7XHJcbiAgcGFkZGluZzogNXB4IDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucC14LTUge1xyXG4gIHBhZGRpbmc6IDBweCA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLm0teS01IHtcclxuICBtYXJnaW46IDVweCAwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLm0teC01IHtcclxuICBtYXJnaW46IDBweCA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmlucHV0LXdyYXBwZXIgbGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uaW5wdXQtd3JhcHBlciBpbnB1dCB7XHJcbndpZHRoOiAxMDAlO1xyXG5oZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5pbnB1dC13cmFwcGVyIHRleHRhcmVhe1xyXG53aWR0aDogMTAwJTtcclxubWluLWhlaWdodDogMzVweDtcclxufVxyXG5cclxuLmlucHV0LXdyYXBwZXIgcC1kcm9wZG93biBkaXYge1xyXG53aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG5taW4taGVpZ2h0OiAzNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5ub2RlIGNpcmNsZSB7XHJcbiAgZmlsbDogIzk5OTtcclxufVxyXG5cclxuLm5vZGUgdGV4dCB7XHJcbiAgZm9udDogMTBweCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4ubm9kZS0taW50ZXJuYWwgY2lyY2xlIHtcclxuICBmaWxsOiAjNTU1O1xyXG59XHJcblxyXG4ubm9kZS0taW50ZXJuYWwgdGV4dCB7XHJcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDAgI2ZmZiwgMCAtMXB4IDAgI2ZmZiwgMXB4IDAgMCAjZmZmLCAtMXB4IDAgMCAjZmZmO1xyXG59XHJcblxyXG4ubGluayB7XHJcbiAgZmlsbDogbm9uZTtcclxuICBzdHJva2U6ICM1NTU7XHJcbiAgc3Ryb2tlLW9wYWNpdHk6IDAuNDtcclxuICBzdHJva2Utd2lkdGg6IDEuNXB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgI3Rlcm1SdWxlc1RyZWVUYWJsZSBwLXRyZWV0YWJsZSAudWktdHJlZXRhYmxlIC51aS10cmVldGFibGUtd3JhcHBlciB0YWJsZS51aS10cmVldGFibGUtdGFibGUgdGJvZHkudWktdHJlZXRhYmxlLXRib2R5IHRyIHRkLnVpLXRvZ2dsZXItY29sdW1uIHtcclxuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnNlbGVjdGVkLW5vZGUge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXIgIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1vZGFsIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICB6LWluZGV4OiAxMDUwO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgbWF4LWhlaWdodDogOTh2aDtcclxuICBoZWlnaHQ6IGZpdC1jb250ZW50OyAgXHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG5cclxuLyogTW9kYWwgQ29udGVudCAqL1xyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMHB4IDEwcHggMTBweCAxMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5taW5pbWl6ZS1tb2RhbCB7XHJcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICB3aWR0aDogMTg1cHggIWltcG9ydGFudDtcclxuICB0b3A6IDk0Ljh2aCAhaW1wb3J0YW50O1xyXG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1vZGFsLWhlYWRlciB7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcclxuICBjb2xvcjogIzMzMzMzMztcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuLnctMTAwIHtcclxuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vKiBUaGUgQ2xvc2UgQnV0dG9uICovXHJcbi5jbG9zZSB7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ubWluaW1pemUge1xyXG4gIGNvbG9yOiAjMzMzMzMzO1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBvcGFjaXR5OiAwLjU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4ubWluaW1pemU6aG92ZXIsXHJcbi5taW5pbWl6ZTpmb2N1cywgXHJcbi5tYXhpbWl6ZTpob3ZlcixcclxuLm1heGltaXplOmZvY3VzIHtcclxuICBjb2xvcjogIzAwMDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5tYXhpbWl6ZSB7IFxyXG4gIGNvbG9yOiAjMzMzMzMzO1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiA0cHg7XHJcbiAgICBvcGFjaXR5OiAwLjM7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmZsb2F0LXJpZ2h0IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5jbG9zZTpob3ZlcixcclxuLmNsb3NlOmZvY3VzIHtcclxuICBjb2xvcjogIzAwMDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uY2FuY2VsLWJ0bi1jb250YWluZXIge1xyXG4gIHBhZGRpbmctdG9wOiAxNXB4OyAgXHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY29tcGFueS1uYW1lLXdyYXBwZXIgaW5wdXQge1xyXG4gIHdpZHRoOiA5MS43OCUgIWltcG9ydGFudDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div>\\r\\n  <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n    fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n  <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n  <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n<div class=\\\"row p-y-5\\\" *ngIf=\\\"processnow\\\" style=\\\"border-style: solid;\\\">\\r\\n  <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n    <label>Division -> Sector:</label>\\r\\n    <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n      [style]=\\\"{'width':'90%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"divSectorChange(divSector)\\\"\\r\\n      [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\"></p-dropdown>\\r\\n    <span>\\r\\n      {{divisionCount}}\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n    <label>Industry:</label>\\r\\n    <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\" [showClear]=\\\"true\\\"\\r\\n      (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\"\\r\\n      [style]=\\\"{'width':'90%'}\\\"></p-dropdown>\\r\\n    <span>\\r\\n      {{sectorCount}}\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n    <label>Filer Category:</label>\\r\\n    <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\" placeholder=\\\"Select Filer Category\\\"\\r\\n      [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange(filerCategory)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n      filter=\\\"true\\\" [style]=\\\"{'width':'90%'}\\\"></p-dropdown>\\r\\n    <span>\\r\\n      {{categoryCount}}\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n    <label style=\\\"height: 14px; width: 100%;\\\"></label>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"Process Now\\\" class=\\\" ui-button ui-button-success\\\" [disabled]=\\\"enableTermButton\\\"\\r\\n      (click)=\\\"processNow()\\\"></button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width: 100vw; height: 92.5vh;\\\">\\r\\n\\r\\n  <as-split direction=\\\"horizontal\\\" [useTransition]=\\\"true\\\" (gutterClick)=\\\"onGutterClick($event)\\\" (dragEnd)=\\\"onDragEnd($event)\\\"  >\\r\\n  <!-- <as-split-area size=\\\"20\\\"> -->\\r\\n      <as-split-area [size]=\\\"areas[0].size\\\" order=\\\"areas[0].order\\\" >\\r\\n\\r\\n      <p-tree [value]=\\\"termTree\\\" [filter]=\\\"true\\\" [style]=\\\"{width: '100%','text-align':'left','overflow':'auto'}\\\"\\r\\n        filterMode=\\\"strict\\\" (onNodeSelect)=\\\"termTreeSelection($event)\\\" selectionMode=\\\"single\\\"\\r\\n        [(selection)]=\\\"selectedTerm\\\" (onNodeUnselect)=\\\"termTreeunselect($event)\\\" joyrideStep=\\\"termRuleSelection\\\"\\r\\n        [stepContent]=\\\"termRuleSelectionSection\\\" title=\\\"Term Rule Selection\\\">\\r\\n      </p-tree>\\r\\n    </as-split-area>\\r\\n   <!--  <as-split-area size=\\\"80\\\"> -->\\r\\n      <as-split-area [size]=\\\"areas[1].size\\\" order=\\\"areas[1].order\\\" >\\r\\n\\r\\n      <as-split direction=\\\"vertical\\\">\\r\\n        <as-split-area size=\\\"65\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-5 col-xs-12\\\" style=\\\"padding: 50px 30px;\\\">\\r\\n\\r\\n              <div class=\\\"row\\\" p-y-5>\\r\\n                <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                  <label>Term Name</label>\\r\\n                  <input id=\\\"termNameinput\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"termName\\\"\\r\\n                  (ngModelChange)=\\\"onTermNameChange($event)\\\"\\r\\n                    joyrideStep=\\\"termName\\\" title=\\\"Term Name\\\"\\r\\n                    text=\\\"The Term Name displays the name of the selected term.\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                  <label>Term Code</label>\\r\\n                  <input id=\\\"termCodeinput\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"termCode\\\"\\r\\n                    (ngModelChange)=\\\"termCodeChange($event)\\\" [disabled]=\\\"enableTermCode\\\" joyrideStep=\\\"termCode\\\"\\r\\n                    title=\\\"Term Code\\\" text=\\\"The Term Code displays the code for the selected term. \\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 \\\">\\r\\n                <div class=\\\"col-12 input-wrapper\\\">\\r\\n                  <label>Definition</label>\\r\\n                  <textarea rows=\\\"5\\\" cols=\\\"30\\\" [(ngModel)]=\\\"definition\\\" pInputTextarea joyrideStep=\\\"definition\\\"\\r\\n                  (ngModelChange)=\\\"onTermDefinitionChange($event)\\\"\\r\\n                    title=\\\"Definition\\\" text=\\\"Definition\\\"></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 \\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <div class=\\\"\\\">\\r\\n                    <p-checkbox class=\\\"float-left\\\" [(ngModel)]=\\\"incAccuTest\\\" binary=\\\"true\\\"\\r\\n                      joyrideStep=\\\"IncludeInAccuracyTest\\\" title=\\\"Included in Accuracy Test\\\"\\r\\n                      (onChange)=\\\"onIncAccuTest($event)\\\"\\r\\n                      text=\\\"This check box identifies whether or the not the selected term is displayed in the Accuracy Test. \\\">\\r\\n                    </p-checkbox>\\r\\n                    <label class=\\\"float-left p-x-5\\\">Included in Accuracy Test</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 \\\">\\r\\n                <div class=\\\"col-xs-12 col-lg-6  input-wrapper\\\">\\r\\n                  <label>Period Type</label>\\r\\n                  <p-dropdown [options]=\\\"periodTypeList\\\" [style]=\\\"{'width':'100%'}\\\" placeholder=\\\"Period Type\\\"\\r\\n                    [(ngModel)]=\\\"periodType\\\" optionLabel=\\\"name\\\" [style]=\\\"{'width':'200px'}\\\"\\r\\n                    (onChange)=\\\"onPeriodTypeChange($event)\\\"\\r\\n                    dropdownIcon=\\\"pi pi-chevron-down\\\" style=\\\"text-align: center\\\" filter=\\\"true\\\" joyrideStep=\\\"periodType\\\"\\r\\n                    title=\\\"Period Type\\\" [stepContent]=\\\"periodTypeSection\\\">\\r\\n                  </p-dropdown>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                  <label>Type</label>\\r\\n                  <p-dropdown [options]=\\\"typeList\\\" [style]=\\\"{'width':'100%'}\\\" placeholder=\\\"Type\\\" [(ngModel)]=\\\"type\\\"\\r\\n                    optionLabel=\\\"name\\\" [style]=\\\"{'width':'200px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    style=\\\"text-align: center\\\" filter=\\\"true\\\" joyrideStep=\\\"type\\\" title=\\\"Type\\\"\\r\\n                    (onChange)=\\\"onTypeChange($event)\\\"\\r\\n                    [stepContent]=\\\"typeSection\\\">\\r\\n                  </p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 \\\">\\r\\n                <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                  <label>Financial Statement</label>\\r\\n                  <p-dropdown [options]=\\\"trmRulFinStatmntList\\\" [style]=\\\"{'width':'100%'}\\\"\\r\\n                    placeholder=\\\"Financial Statement\\\" [(ngModel)]=\\\"finStatement\\\" optionLabel=\\\"financialStatement\\\"\\r\\n                    [style]=\\\"{'width':'200px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" style=\\\"text-align: center\\\"\\r\\n                    filter=\\\"true\\\" joyrideStep=\\\"financialStatement\\\" title=\\\"Financial Statement\\\"\\r\\n                    (onChange)=\\\"onFinStatemenChange($event)\\\"\\r\\n                    [stepContent]=\\\"financialStatementSection\\\"></p-dropdown>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                  <label>Priority Group</label>\\r\\n                  <p-dropdown [options]=\\\"trmRulPriorGrpList\\\" [style]=\\\"{'width':'100%'}\\\" placeholder=\\\"Priority Group\\\"\\r\\n                    [(ngModel)]=\\\"priorgroup\\\" optionLabel=\\\"name\\\" [style]=\\\"{'width':'200px'}\\\"\\r\\n                    dropdownIcon=\\\"pi pi-chevron-down\\\" style=\\\"text-align: center\\\" filter=\\\"true\\\"\\r\\n                    (onChange)=\\\"onPriorgroupChange($event)\\\"\\r\\n                    joyrideStep=\\\"priorityGroup\\\" title=\\\"Priority Group\\\" [stepContent]=\\\"priorityGroupSection\\\">\\r\\n                  </p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 \\\">\\r\\n                <div class=\\\"col-6 input-wrapper\\\">\\r\\n                  <label>Processing Order: {{processingOrder}}</label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row p-y-5 text-center\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Add Term\\\" class=\\\"ui-button m-x-5\\\" (click)=\\\"addTerm()\\\"\\r\\n                    [disabled]=\\\"enableAddTermButton\\\" joyrideStep=\\\"addTerm\\\" title=\\\"Add Term\\\"\\r\\n                    [stepContent]=\\\"addTermSection\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Save Term\\\" class=\\\"ui-button m-x-5\\\" [disabled]=\\\"enableTermButton\\\"\\r\\n                    (click)=\\\"saveTerm()\\\" joyrideStep=\\\"saveTerm\\\" title=\\\"Save Term\\\"\\r\\n                    text=\\\"The User can click on the “Save Term” to save the term\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Process Term\\\" class=\\\"ui-button m-x-5\\\"\\r\\n                    [disabled]=\\\"enableTermButton\\\" (click)=\\\"processTermnow()\\\" joyrideStep=\\\"processTerm\\\"\\r\\n                    title=\\\"Process Term\\\"\\r\\n                    text=\\\"The user can click on the “Process Term” to process the term results for a group of companies based on the option the user selected. \\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Remove Term\\\" class=\\\"ui-button m-x-5\\\"\\r\\n                    [disabled]=\\\"enableTermButton\\\" (click)=\\\"removeTerm()\\\" joyrideStep=\\\"removeTerm\\\" title=\\\"Remove Term\\\"\\r\\n                    [stepContent]=\\\"removeTermSection\\\"></button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-7 col-xs-12\\\" style=\\\" padding-right: 50px; \\\">\\r\\n              <!-- This feature is not for this release this is for next release -->\\r\\n              <!-- <div class=\\\"12\\\" style=\\\"float: right;\\\">\\r\\n                <label> Start Tour</label>\\r\\n                <p-inputSwitch (onChange)=\\\"startTour($event)\\\" [(ngModel)]=\\\"tour\\\"></p-inputSwitch>\\r\\n              </div> -->\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"displayTerms\\\">\\r\\n\\r\\n                <div class=\\\"12 p-y-5\\\">\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"{{expLabel}}\\\" class=\\\"ui-button m-x-5  ui-button-warning\\\"\\r\\n                    (click)=\\\"expressionClick()\\\" joyrideStep=\\\"expLabel\\\" title=\\\"{{expLabel}}\\\"\\r\\n                    [stepContent]=\\\"expLabelSection\\\"></button>\\r\\n\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Expressions\\\" class=\\\"ui-button m-x-5 ui-button-success\\\"\\r\\n                    (click)=\\\"onExpressionButtonClick('expressions')\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Validations\\\" class=\\\"ui-button m-x-5 ui-button-success\\\"\\r\\n                    (click)=\\\"onExpressionButtonClick('validations')\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Industry Override Expressios\\\"\\r\\n                    class=\\\"ui-button m-x-5 ui-button-success\\\" (click)=\\\"onExpressionButtonClick('industry')\\\"\\r\\n                    icon=\\\"pi pi-check\\\"></button>\\r\\n\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Derived Zero Expressions\\\"\\r\\n                    class=\\\"ui-button m-x-5 ui-button-success\\\" (click)=\\\"onExpressionButtonClick('derived')\\\"\\r\\n                    icon=\\\"pi pi-check\\\"></button>\\r\\n                  <p-dropdown *ngIf=\\\"indOvrdExprDrop\\\" [style]=\\\"{'width':'100%'}\\\" [options]=\\\"indovrDrpList\\\"\\r\\n                    [(ngModel)]=\\\"selIndOvrdExpr\\\" optionLabel=\\\"name\\\" (onChange)=\\\"industryChange()\\\"></p-dropdown>\\r\\n                </div>\\r\\n                <div class=\\\"12\\\">\\r\\n                  <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\" [paginator]=\\\"true\\\"\\r\\n                    [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                    [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                    p-dataTable [scrollable]=\\\"true\\\" scrollHeight=\\\"400px\\\">\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [style.width]=\\\"col.width\\\">\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                          [pSortableColumn]=\\\"col.field\\\">\\r\\n                          <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                              ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                              ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\r\\n                            </p-sortIcon>\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" pResizableColumn pReorderableColumn>\\r\\n                          <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                            <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                              [value]=\\\"expressionTable.filters[col.field] ? expressionTable.filters[col.field].value : ''\\\"\\r\\n                              (input)=\\\"expressionTable.filter($event.target.value, col.field, 'contains');\\\"\\r\\n                              style=\\\"width: 100%;\\\">\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns \\\" class=\\\"ui-resizable-column\\\" style=\\\"word-wrap:break-word\\\">\\r\\n                          <div *ngIf=\\\"col.field === 'rank'\\\">\\r\\n\\r\\n                            <a href=\\\"#\\\" (click)=\\\"moveRankBy(rowIndex, -1)\\\" *ngIf=\\\"rowIndex > 0\\\" title=\\\"Move row up\\\">\\r\\n                              <i class=\\\"fa fa-arrow-up\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </a><br>\\r\\n                            {{rowData[col.field]}}<br>\\r\\n                            <a href=\\\"#\\\" (click)=\\\"moveRankBy(rowIndex, 1)\\\" *ngIf=\\\"expTableList.length - rowIndex > 1\\\"\\r\\n                              title=\\\"Move row down\\\">\\r\\n                              <i class=\\\"fa fa-arrow-down\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </a>\\r\\n\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"col.field !== 'rank' && col.field !== 'options' && col.field !== 'expression'\\\">\\r\\n                            {{rowData[col.field]}}\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"col.field === 'expression'\\\">\\r\\n                            <div *ngIf=\\\"rowData['type'] !== 'Formula'\\\">\\r\\n                              {{rowData[col.field]}}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"rowData['type'] === 'Formula'\\\">\\r\\n                              <p style=\\\"display:inline\\\" *ngFor=\\\"let formula of rowData['formulaList']\\\">\\r\\n                                <a href=\\\"#\\\"\\r\\n                                  (click)=\\\"showTermResultnavigate($event,formula.termName)\\\">{{formula.termName}}\\r\\n                                </a>\\r\\n                                {{getFormulaSuffix(formula)}}\\r\\n                              </p>\\r\\n                              <!-- {{rowData[col.field]}} -->\\r\\n                              <button type=\\\"button\\\" class=\\\"glyphicon  glyphicon-eye-open\\\" pTooltip=\\\"Expression Tree\\\"\\r\\n                                (click)=\\\"showDerivationTree()\\\"></button>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"col.field === 'options'\\\">\\r\\n                            <button type=\\\"button\\\" pButton (click)=\\\"onExpressionEdit(rowData)\\\"\\r\\n                              (keydown.enter)=\\\"onExpressionEdit(rowData)\\\" icon=\\\"pi pi-pencil\\\"\\r\\n                              styleClass=\\\"ui-button-info\\\" pTooltip=\\\"Edit Expression\\\"></button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button type=\\\"button\\\" pButton (click)=\\\"deleteWithRank(rowIndex)\\\"\\r\\n                              (keydown.enter)=\\\"deleteWithRank(rowIndex)\\\" icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                              pTooltip=\\\"Delete Expression\\\"></button>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\" pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n                          <div class=\\\"loading-text\\\"></div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"summary\\\">\\r\\n                      Total number of Records: {{expressionTable.totalRecords}}\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-12 m-y-5 text-center\\\">\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Expressions\\\" class=\\\"ui-button m-x-5 ui-button-success\\\"\\r\\n                    (click)=\\\"onExpressionButtonClick('expressions')\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Validations\\\" class=\\\"ui-button m-x-5 ui-button-success\\\"\\r\\n                    (click)=\\\"onExpressionButtonClick('validations')\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Industry Override Expressios\\\"\\r\\n                    class=\\\"ui-button m-x-5 ui-button-success\\\" (click)=\\\"onExpressionButtonClick('industry')\\\"\\r\\n                    icon=\\\"pi pi-check\\\"></button>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Derived Zero Expressions\\\"\\r\\n                    class=\\\"ui-button m-x-5 ui-button-success\\\" (click)=\\\"onExpressionButtonClick('derived')\\\"\\r\\n                    icon=\\\"pi pi-check\\\"></button>\\r\\n                </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </as-split-area>\\r\\n        <as-split-area size=\\\"35\\\" *ngIf=\\\"displayTerms\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\r\\n                <label style=\\\"background-color: #E2E8EC;width: 100%\\\"> Coverage and Term Results</label>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\" padding: 15px 30px; \\\">\\r\\n                <div class=\\\"col-7\\\">\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-12\\\" input-wrapper>\\r\\n                      <p-radioButton class=\\\"float-left\\\" name=\\\"filterRadio\\\" value=\\\"company\\\" [(ngModel)]=\\\"filterRadio\\\">\\r\\n                      </p-radioButton>\\r\\n                      <label>Search by Company: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\" input-wrapper>\\r\\n                      <p-autoComplete [(ngModel)]=\\\"companyName\\\" class=\\\"company-name-wrapper\\\" name=\\\"companyName\\\"\\r\\n                        [size]=\\\"50\\\" [suggestions]=\\\"filteredCompany\\\" (completeMethod)=\\\"searchCompany($event)\\\"\\r\\n                        (onSelect)=\\\"onCompanyNameChange($event)\\\"\\r\\n                        placeholder=\\\"Search Company\\\" [size]=\\\"50\\\" [dropdown]=\\\"true\\\">\\r\\n\\r\\n                        <ng-template let-value pTemplate=\\\"item\\\">\\r\\n                          <div class=\\\"ui-helper-clearfix\\\">\\r\\n                            <span [innerHTML]=\\\"value | highlight : toHighlight\\\"></span>\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n                      </p-autoComplete>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-xs-12 col-lg-6  p-0\\\">\\r\\n                      <button pButton type=\\\"button\\\" label=\\\"Go To Peer Goup\\\" class=\\\"ui-button p-x-5\\\"\\r\\n                        (click)=\\\"goToPeer($event)\\\"></button>\\r\\n                      <button type=\\\"button\\\" pButton style=\\\"margin-left: 15px;\\\" (click)=\\\"resetCoverage()\\\"\\r\\n                        label=\\\"Clear All\\\" class=\\\"ui-button p-x-5\\\" pTooltip=\\\"Clear All\\\"></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                      <p-radioButton class=\\\"float-left\\\" name=\\\"filterRadio\\\" value=\\\"group\\\" [(ngModel)]=\\\"filterRadio\\\">\\r\\n                      </p-radioButton>\\r\\n                      <label>Search by Group:\\r\\n                        Division -> Sector:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                      <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\"\\r\\n                        [(ngModel)]=\\\"divSector\\\" [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                        (onChange)=\\\"divSectorChange(divSector)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                      </p-dropdown>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-1 p-y-5\\\">\\r\\n                      {{divisionCount}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-12 input-wrapper\\\">\\r\\n                      <label>Industry: </label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                      <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                        [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                        [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\"></p-dropdown>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-1 p-y-5\\\">\\r\\n                      <span>{{industryCount}}</span>\\r\\n                      <!-- <span *ngIf=\\\"!industryCount\\\">{{divisionCount}}</span> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-12 input-wrapper\\\">\\r\\n                      <label>Filer Category:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                      <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                        placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\"\\r\\n                        (onChange)=\\\"processfilCatChange(filerCategory)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                        filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\"></p-dropdown>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-1 p-y-5\\\">\\r\\n                      <span>{{categoryCount}}</span>\\r\\n                      <!-- <span *ngIf=\\\"!categoryCount\\\">{{divisionCount}}</span> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-xs-12 col-lg-6 \\\">\\r\\n                      <p-dropdown [options]=\\\"resolvedRanks\\\" class=\\\"\\\" [(ngModel)]=\\\"selectResolvedRank\\\"\\r\\n                        placeholder=\\\"Show Resolved By Rank\\\" (onChange)=\\\"showResolved(true)\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                      </p-dropdown>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-xs-12 col-lg-6\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <button pButton type=\\\"button\\\" [style]=\\\"{'width':'100%'}\\\" label=\\\"Show Resolved\\\" class=\\\"ui-button\\\"\\r\\n                        (click)=\\\"showResolved(true)\\\"></button>\\r\\n                      <button pButton style=\\\"margin-left: 15px;\\\" type=\\\"button\\\" label=\\\"Show Not Resolved\\\"\\r\\n                        class=\\\"ui-button\\\" (click)=\\\"showResolved(false)\\\"></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n<!--\\r\\n                  <div class=\\\"row p-y-5\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                      <p-checkbox class=\\\"float-left\\\" [(ngModel)]=\\\"quaterly\\\" binary=\\\"true\\\" label=\\\"Quarterly?\\\" (onChange)=\\\"quaterlyChange($event)\\\">\\r\\n                      </p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row p-y-5 \\\" style=\\\"visibility: hidden\\\">\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                      <h3 style=\\\"text-align: center\\\"> {{range[0]}} - {{range[1]}} </h3>\\r\\n                      <p-slider [(ngModel)]=\\\"range\\\" [min]=\\\"minRange\\\" [max]=\\\"maxRange\\\" [step]=\\\"1\\\" [range]=\\\"true\\\"\\r\\n                        (onChange)=\\\"yearChange($event)\\\"></p-slider>\\r\\n                    </div>\\r\\n                  </div>\\r\\n-->\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"col-5 text-center\\\" *ngIf=\\\"displayGetCoverage\\\">\\r\\n                  <div mk-morris-js [options]=\\\"chartDonutOptions\\\" [data]=\\\"chart\\\" type=\\\"Donut\\\"></div>\\r\\n                  <button pButton type=\\\"button\\\" label=\\\"Get Coverage\\\" class=\\\"ui-button ui-button-success\\\"\\r\\n                    (click)=\\\"showResolved(true)\\\"></button>\\r\\n                </div> -->\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row  p-y-5 m-y-5\\\" *ngIf=\\\"displayTerms\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <p-table #entityTable [columns]=\\\"entitycols\\\" [value]=\\\"entityList\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                    [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                    [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"cik\\\" dataKey=\\\"cik\\\"\\r\\n                    (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n                    scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [style.width]=\\\"col.width\\\">\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                          [pSortableColumn]=\\\"col.field\\\">\\r\\n                          <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                              ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                              ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\r\\n                            </p-sortIcon>\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                          <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                            <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                              [value]=\\\"entityTable.filters[col.field] ? entityTable.filters[col.field].value : ''\\\"\\r\\n                              (input)=\\\"entityTable.filter($event.target.value, col.field, 'contains'); onRowUnClick();onFilter($event.target.value, col.field, 'contains')\\\"\\r\\n                              style=\\\"width: 100%;\\\">\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\">\\r\\n                          <div\\r\\n                            *ngIf=\\\"col.field !== 'viewResultLink' && col.field !== 'researchLink' && col.field !== 'processTermLink'\\\">\\r\\n                            {{rowData[col.field]}}\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"col.field === 'viewResultLink'\\\">\\r\\n                          <a style=\\\"color:blue;\\\" (click)=\\\"showTermResults(rowData)\\\" href=\\\"javascript:void(0)\\\" pTooltip=\\\"Click to view processing result for {{this.termCode}}\\\">View</a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"col.field === 'researchLink'\\\">\\r\\n                            <a style=\\\"color:blue;\\\" target=\\\"_blank\\\"\\r\\n                              href=\\\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&type=&dateb=&owner=exclude&count=40&search_text=&CIK={{rowData.cik}}\\\">Research</a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"col.field === 'fsqvLink'\\\">\\r\\n                               <a (click)=\\\"openFSQVLink(rowData)\\\"\\r\\n                                style=\\\"cursor: pointer; color: blue;\\\">FSQV</a>\\r\\n                        </div>\\r\\n                          <div *ngIf=\\\"col.field === 'processTermLink'\\\">\\r\\n                            <a style=\\\"color:blue;\\\" (click)=\\\"processTermForEntity(rowData)\\\" href=\\\"#/home\\\">Process</a>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\" pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n                          <div class=\\\"loading-text\\\"></div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"summary\\\">\\r\\n                      Total number of Records: {{entityTable.totalRecords}}\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </as-split-area>\\r\\n      </as-split>\\r\\n    </as-split-area>\\r\\n  </as-split>\\r\\n</div>\\r\\n\\r\\n<p-dialog header=\\\"Term Expression Builder\\\" [(visible)]=\\\"editExpression\\\" [modal]=\\\"true\\\"\\r\\n  [style]=\\\"{width: '95vw', overflow: 'auto'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n  [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n  <div *ngIf=\\\"showValidation\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{validationMessage}}</strong>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" p-y-5>\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Name:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-6 input-wrapper\\\">\\r\\n      <label>Definition:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Code:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" disabled></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <p-tabView [activeIndex]=\\\"index\\\" (onChange)=\\\"onTabChange($event)\\\">\\r\\n      <p-tabPanel header=\\\"Concept Match\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Concept Name:</label>\\r\\n\\r\\n                <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"170\\\" placeholder=\\\"Concept Match\\\"\\r\\n                  [minLength]=\\\"3\\\" (ngModelChange)=\\\"getconceptNameDefinition()\\\"></p-autoComplete>\\r\\n                <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                  {{conceptNameDefinition}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row  p-y-5\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Use Positive Facts Only\\\" [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                  &nbsp;&nbsp;\\r\\n                </div>\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Use Negative Facts Only\\\" [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                  &nbsp;&nbsp;\\r\\n                </div>\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Reverse Negative Facts\\\" [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Axis:</label>\\r\\n\\r\\n                <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"axis\\\" placeholder=\\\"specify axis name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Members Exclusion (Virtual Parent):</label>\\r\\n\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                  placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Concept Match w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-12\\\">\\r\\n            <div class=\\\"row\\\" p-y-5>\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Concept Name:</label>\\r\\n\\r\\n                <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                  (ngModelChange)=\\\"getconceptNameDefinition()\\\">\\r\\n                </p-autoComplete>\\r\\n                <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                  {{conceptNameDefinition}}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n\\r\\n                <p-checkbox name=\\\"useMaxAxisCount\\\" value=\\\"useMaxAxisCount\\\" label=\\\"Max # Axes/Members:\\\"\\r\\n                  [(ngModel)]=\\\"useMaxAxisCount\\\" inputId=\\\"useMaxAxisCount\\\"></p-checkbox>&nbsp;\\r\\n                <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"maxAxisCount\\\" name=\\\"maxAxisCount\\\" [(ngModel)]=\\\"maxAxisCount\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\" *ngFor=\\\"let expressionSet of expressionSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>Axes:\\r\\n                      <p-radioButton name=\\\"axisOption{{i}}\\\" value=\\\"ExactMatch\\\" [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                        id=\\\"axisFullNameOption\\\"\\r\\n                        (onClick)=\\\"OnExpressionAxisTypeChanged(i); expressionSet.disableAxes=false;expressionSet.disableAxesInc=true\\\">\\r\\n                      </p-radioButton>\\r\\n                    </label>\\r\\n                    <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"expressionSet.axisName\\\"\\r\\n                      placeholder=\\\"specify axis name\\\" [disabled]=\\\"expressionSet.disableAxes\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"axisOption{{i}}\\\" id=\\\"axisPartialNameOption\\\" value=\\\"InclusionExclusionList\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                        (onClick)=\\\"OnExpressionAxisTypeChanged(i);expressionSet.disableAxesInc=false;expressionSet.disableAxes=true\\\">\\r\\n                      </p-radioButton>\\r\\n                      Inclusions(axis name must\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea id=\\\"axisInclusionList\\\" name=\\\"axisInclusionList\\\"\\r\\n                      [disabled]=\\\"expressionSet.disableAxesInc\\\" placeholder=\\\"Enter Inclusion Axes\\\"\\r\\n                      [(ngModel)]=\\\"expressionSet.axisInclusionListAsString\\\" cols=\\\"50\\\" placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                      (onChange)=\\\"expressionSet.axisInclusionList = buildListFromString(expressionSet.axisInclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      Exclusions (axis name must NOT\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea id=\\\"axisExclusions\\\" name=\\\"axisExclusions\\\"\\r\\n                      [disabled]=\\\"expressionSet.disableAxesInc\\\" [(ngModel)]=\\\"expressionSet.axisExclusionListAsString\\\"\\r\\n                      cols=\\\"50\\\" placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                      (onChange)=\\\"expressionSet.axisExclusionList = buildListFromString(expressionSet.axisExclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-lg-12 p-y-0\\\">\\r\\n                    <label>\\r\\n                      Members:\\r\\n                    </label>\\r\\n\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" id=\\\"anyMemberOption\\\" value=\\\"Any\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.memberType\\\" (onClick)=\\\"OnExpressionMemberTypeChanged(i)\\\">\\r\\n                      </p-radioButton>\\r\\n                      Any Members:\\r\\n                    </label>\\r\\n                    <div class=\\\"p-y-5\\\">\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" value=\\\"ExactMatch\\\" [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                        (onClick)=\\\"OnExpressionMemberTypeChanged(i); expressionSet.disableMember=false;expressionSet.disableMemInc=true\\\">\\r\\n                      </p-radioButton>\\r\\n                      <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"expressionSet.memberName\\\"\\r\\n                        placeholder=\\\"specify member name\\\" [disabled]=\\\"expressionSet.disableMember\\\">\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" value=\\\"InclusionExclusionList\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.memberType\\\" inputId=\\\"partialMemberOption\\\"\\r\\n                        (onClick)=\\\"OnExpressionMemberTypeChanged(i);expressionSet.disableMember=true; expressionSet.disableMemInc=false\\\">\\r\\n                      </p-radioButton>\\r\\n                      Inclusions(member name must\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea [(ngModel)]=\\\"expressionSet.memberInclusionListAsString\\\" cols=\\\"50\\\"\\r\\n                      placeholder=\\\"Enter Exclusion Members\\\" [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                      (onChange)=\\\"expressionSet.memberInclusionList = buildListFromString(expressionSet.memberInclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      Exclusions (member name must NOT\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea [(ngModel)]=\\\"expressionSet.memberExclusionListAsString\\\" cols=\\\"50\\\"\\r\\n                      placeholder=\\\"Enter Exclusion Members\\\" [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                      (onChange)=\\\"expressionSet.memberExclusionList = buildListFromString(expressionSet.memberExclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"removeSet(i)\\\" label=\\\"Remove Set\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"AddExpressionSet()\\\" label=\\\"Add New Set\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Extended Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name Contains:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                  (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name does not Contain:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameDoesNotContains\\\" cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                  placeholder=\\\"Name Does Not Contain\\\"\\r\\n                  (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Balance Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"debit\\\" label=\\\"Debit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"credit\\\" label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"na\\\" label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"none\\\" label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Period Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"perTypeGroup\\\" value=\\\"instant\\\" label=\\\"Instant\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"perTypeGroup\\\" value=\\\"duration\\\" label=\\\"duration\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"p-y-5\\\">\\r\\n                  &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\" binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                  </p-checkbox>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-lg-8\\\" style=\\\"background-color: #ccc;\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Division ->\\r\\n                  Sector:</label>\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                  [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"divSectorChange(divSector)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{divisionCount}}\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>Industry: </label>\\r\\n\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                  [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                  filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{sectorCount}}\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n\\r\\n                <label>Filer Category:</label>\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                  placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange(filerCategory)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>&nbsp;\\r\\n                {{categoryCount}}\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\" [paginator]=\\\"true\\\"\\r\\n                  [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                  [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                  (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n                  scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"resolve()\\\" label=\\\"Resolve\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Include\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Exclude\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Extended Check w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name Contains:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                  (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name does not Contain:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameDoesNotContains\\\" cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                  placeholder=\\\"Name Does Not Contain\\\"\\r\\n                  (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Balance Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"debit\\\" label=\\\"Debit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"credit\\\" label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"na\\\" label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"none\\\" label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Period Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"radioGroup1\\\" value=\\\"instant\\\" label=\\\"Instant\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"radioGroup1\\\" value=\\\"duration\\\" label=\\\"duration\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"p-y-5\\\">\\r\\n                  &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\" binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                  </p-checkbox>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Axes:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"axes\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Enter Axes\\\"\\r\\n                  (onChange)=\\\"updateAxes(axes)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Members:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"axesMembers\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Enter Members\\\"\\r\\n                  (onChange)=\\\"updateAxesMembers(axesMembers)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-lg-8\\\" style=\\\"background-color: #ccc;\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Division ->\\r\\n                  Sector:</label>\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                  [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"divSectorChange(divSector)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{divisionCount}}\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>Industry: </label>\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                  [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                  filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{sectorCount}}\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n\\r\\n                <label>Filer Category:</label>\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                  placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange(filerCategory)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>&nbsp;\\r\\n                {{categoryCount}}\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\" [paginator]=\\\"true\\\"\\r\\n                  [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                  [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                  (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n                  scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"resolve()\\\" label=\\\"Resolve\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Include\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Exclude\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Formula\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\" [style]=\\\"{height: '500px'}\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Term Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"formulaSet.termName\\\" name=\\\"formulaTermName\\\" [size]=\\\"50\\\"\\r\\n                  [suggestions]=\\\"formulaFilteredTerms\\\" (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                  placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n                  <ng-template let-value pTemplate=\\\"item\\\">\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                      <span [innerHTML]=\\\"value\\\"></span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-1\\\">\\r\\n                <label style=\\\"width: 100%; height: 18px;\\\"></label>\\r\\n                <p-checkbox [(ngModel)]=\\\"formulaSet.nullable\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                &nbsp;\\r\\n                <label>\\r\\n                  Allow Null?\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-2 input-wrapper\\\">\\r\\n\\r\\n                <label>\\r\\n                  Operators:\\r\\n                </label>\\r\\n                <p-dropdown [options]=\\\"formulaOperatorsList\\\" [style]=\\\"{width: '100%'}\\\"\\r\\n                  [(ngModel)]=\\\"formulaSet.operation\\\" optionLabel=\\\"name\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-1 text-align\\\">\\r\\n                <label style=\\\"width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"deleteFormula(i)\\\" (keydown.enter)=\\\"deleteFormula(i)\\\"\\r\\n                  icon=\\\"pi pi-trash\\\" Class=\\\"ui-button-info\\\" pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 text-left\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherFormula()\\\"\\r\\n                  label=\\\"Add + Another Term to Formula\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Concept Match Multiple\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let conceptSet of conceptMatchMultipleList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-11 col-lg-8 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Concept Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"conceptMatchMultiple[i]\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" [size]=\\\"80\\\" field=\\\"id\\\" placeholder=\\\"Enter Concept Name\\\"\\r\\n                  [minLength]=\\\"3\\\">\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-1 col-lg-1\\\">\\r\\n                <label style=\\\"height: 18px; width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                  (keydown.enter)=\\\"deleteConceptMatchMultipleItem(i)\\\" icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                  pTooltip=\\\"Delete Concept\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"addAnotherConcept()\\\" label=\\\"Add + Another Concept\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Use Positive Facts Only\\\" [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Use Negative Facts Only\\\" [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Reverse Negative Facts\\\" [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Axis:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\" placeholder=\\\"specify axis name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Members Exclusion (Virtual Parent):\\r\\n                </label>\\r\\n\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                  placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n    </p-tabView>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"saveExpression()\\\" label=\\\"Save Expression\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"editExpression=false\\\" label=\\\"Cancel\\\"\\r\\n      class=\\\"ui-button-secondary\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n<p-dialog header=\\\"Term Validation Builder\\\" [(visible)]=\\\"addEditValidation\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '95vw'}\\\"\\r\\n  [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\" [draggable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n  [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n  <div *ngIf=\\\"showValidation\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{validationMessage}}</strong>\\r\\n  </div>\\r\\n  <div class=\\\"row p-y-5\\\">\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Name:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-6 input-wrapper\\\">\\r\\n      <label>Definition:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Code:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" disabled></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row p-y-5\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"row\\\" *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n          <label>\\r\\n            Term Name:\\r\\n          </label>\\r\\n\\r\\n          <p-autoComplete [(ngModel)]=\\\"formulaSet.termName\\\" name=\\\"formulaTermName\\\" [size]=\\\"50\\\"\\r\\n            [suggestions]=\\\"formulaFilteredTerms\\\" (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n            placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n            <ng-template let-value pTemplate=\\\"item\\\">\\r\\n              <div class=\\\"ui-helper-clearfix\\\">\\r\\n                <span [innerHTML]=\\\"value\\\"></span>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </p-autoComplete>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-lg-1\\\">\\r\\n          <label style=\\\"width: 100%; height: 18px;\\\"></label>\\r\\n          <p-checkbox [(ngModel)]=\\\"formulaSet.nullable\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n          &nbsp;\\r\\n          <label>\\r\\n            Allow Null?\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-lg-2 input-wrapper\\\">\\r\\n\\r\\n          <label>\\r\\n            Operators:\\r\\n          </label>\\r\\n          <p-dropdown [options]=\\\"formulaOperatorsList\\\" [style]=\\\"{width: '100%'}\\\" [(ngModel)]=\\\"formulaSet.operation\\\"\\r\\n            optionLabel=\\\"name\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-lg-1 text-align\\\">\\r\\n          <label style=\\\"width: 100%;\\\"></label>\\r\\n          <button type=\\\"button\\\" pButton (click)=\\\"deleteFormula(i)\\\" (keydown.enter)=\\\"deleteFormula(i)\\\" icon=\\\"pi pi-trash\\\"\\r\\n            Class=\\\"ui-button-info\\\" pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row p-y-5\\\">\\r\\n        <div class=\\\"col-lg-12 text-left\\\">\\r\\n          <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherFormula()\\\"\\r\\n            label=\\\"Add + Another Term to Formula\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row p-y-5\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <p-checkbox [(ngModel)]=\\\"showExpression\\\" binary=\\\"true\\\" (ngModelChange)=\\\"getValidationExpression()\\\"></p-checkbox>\\r\\n      &nbsp;\\r\\n      <label>\\r\\n        Show Expression ?\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"showExpression\\\">\\r\\n      <div class=\\\"row p-y-5\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n          <label> Rank : {{validationRank}}\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row p-y-5\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n          <label> Expression : {{validationExpression}}\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addEditValidation=false; saveRuleWithValidation()\\\"\\r\\n      label=\\\"Save Validation\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditValidation=false\\\" label=\\\"Cancel\\\"\\r\\n      class=\\\"ui-button-secondary\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Term Override Expression Builder\\\" [(visible)]=\\\"addEditIndustry\\\" [modal]=\\\"true\\\"\\r\\n  [style]=\\\"{width: '95vw'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n  [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n  <div *ngIf=\\\"showValidation\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{validationMessage}}</strong>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" p-y-5>\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Name:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-6 input-wrapper\\\">\\r\\n      <label>Definition:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Code:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" disabled></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row p-y-5\\\">\\r\\n    <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n      <label>\\r\\n        Companies/Industries to override:\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"column\\\" style=\\\"width:150px; margin-left: 15px;\\\">\\r\\n      <label>\\r\\n        Override Name:\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\" column2\\\">\\r\\n      <!-- <p-dropdown [options]=\\\"indovrDrpList\\\" [(ngModel)]=\\\"overrideName\\\" placeholder=\\\"Enter Override Name\\\" optionLabel=\\\"name\\\"  [style]=\\\"{'width':'400px'}\\\" [showClear]=\\\"true\\\"></p-dropdown> -->\\r\\n      <p-autoComplete [(ngModel)]=\\\"overrideName\\\" [suggestions]=\\\"companyovrRideList\\\"\\r\\n        (completeMethod)=\\\"getOverRides($event)\\\" (onSelect)=\\\"getCurrentOverrideDetails()\\\" field=\\\"name\\\"></p-autoComplete>\\r\\n      <!-- <input id=\\\"typeahead-http\\\" type=\\\"text\\\" class=\\\"form-control mx-sm-3\\\"  [selectItem]=\\\"getCurrentOverrideDetails()\\\"\\r\\n            [class.is-invalid]=\\\"searchFailed\\\" [(ngModel)]=\\\"overrideName\\\" [ngbTypeahead]=\\\"termRule.overrides\\\" placeholder=\\\"Enter Override Name\\\" /> -->\\r\\n    </div>\\r\\n    <div class=\\\"column\\\" style=\\\"margin-left: 15px;\\\">\\r\\n      <p-checkbox [(ngModel)]=\\\"mergeBaseExpressions\\\" binary=\\\"true\\\" label=\\\" Merge Base Expressions?\\\">\\r\\n      </p-checkbox>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n  <div *ngFor=\\\"let overrides of entityOverrides; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"margin-left: 1px;\\\">\\r\\n      <div class=\\\"column\\\">\\r\\n        <label>\\r\\n          Company:\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"column\\\" style=\\\"margin-left: 80px\\\">\\r\\n        <p-autoComplete [(ngModel)]=\\\"overrides.entityname\\\" name=\\\"overridecompanyName\\\" [size]=\\\"50\\\"\\r\\n          [suggestions]=\\\"filteredCompany\\\" (completeMethod)=\\\"searchCompany($event)\\\" placeholder=\\\"Search Company\\\"\\r\\n          [dropdown]=\\\"true\\\">\\r\\n        </p-autoComplete>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n    <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n      <div class=\\\"column\\\" style=\\\"margin-left: 15px;\\\">\\r\\n\\r\\n        <label>\\r\\n          Division -> Sector:</label>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"column\\\" style=\\\"margin-left: 25px;\\\">\\r\\n        <p-autoComplete [(ngModel)]=\\\"overrides.divisionSector\\\" name=\\\"overrideDivSec\\\" [size]=\\\"50\\\"\\r\\n          [suggestions]=\\\"filtereddivSector\\\" (completeMethod)=\\\"searchDivisionSector($event)\\\"\\r\\n          placeholder=\\\"Search Division Sector\\\" [dropdown]=\\\"true\\\">\\r\\n        </p-autoComplete> &nbsp;&nbsp;\\r\\n        <button type=\\\"button\\\" pButton (click)=\\\"removeOverride(i)\\\" (keydown.enter)=\\\"removeOverride(i)\\\" icon=\\\"pi pi-trash\\\"\\r\\n          styleClass=\\\"ui-button-info\\\" pTooltip=\\\"Delete Override\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherIndustryOverride()\\\"\\r\\n        label=\\\"Add + Another Company/Industry\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <p-tabView [activeIndex]=\\\"index\\\" (onChange)=\\\"onTabChange($event)\\\">\\r\\n      <p-tabPanel header=\\\"Concept Match\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Concept Name:</label>\\r\\n\\r\\n                <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"auto\\\" placeholder=\\\"Concept Match\\\"\\r\\n                  [minLength]=\\\"3\\\" (ngModelChange)=\\\"getconceptNameDefinition()\\\">\\r\\n                </p-autoComplete>\\r\\n\\r\\n                <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                  {{conceptNameDefinition}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row  p-y-5\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Use Positive Facts Only\\\" [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                  &nbsp;&nbsp;\\r\\n                </div>\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Use Negative Facts Only\\\" [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                  &nbsp;&nbsp;\\r\\n                </div>\\r\\n                <div>\\r\\n                  <p-checkbox label=\\\"Reverse Negative Facts\\\" [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Axis:</label>\\r\\n\\r\\n                <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"axis\\\" placeholder=\\\"specify axis name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Members Exclusion (Virtual Parent):</label>\\r\\n\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                  placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Concept Match w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-12\\\">\\r\\n            <div class=\\\"row\\\" p-y-5>\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                <label>Concept Name:</label>\\r\\n\\r\\n                <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                  (ngModelChange)=\\\"getconceptNameDefinition()\\\">\\r\\n                </p-autoComplete>\\r\\n                <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                  {{conceptNameDefinition}}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n\\r\\n                <p-checkbox name=\\\"useMaxAxisCount\\\" value=\\\"useMaxAxisCount\\\" label=\\\"Max # Axes/Members:\\\"\\r\\n                  [(ngModel)]=\\\"useMaxAxisCount\\\" inputId=\\\"useMaxAxisCount\\\"></p-checkbox>&nbsp;\\r\\n                <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"maxAxisCount\\\" name=\\\"maxAxisCount\\\" [(ngModel)]=\\\"maxAxisCount\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\" *ngFor=\\\"let expressionSet of expressionSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>Axes:\\r\\n                      <p-radioButton name=\\\"axisOption{{i}}\\\" value=\\\"ExactMatch\\\" [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                        id=\\\"axisFullNameOption\\\"\\r\\n                        (onClick)=\\\"OnExpressionAxisTypeChanged(i); expressionSet.disableAxes=false;expressionSet.disableAxesInc=true\\\">\\r\\n                      </p-radioButton>\\r\\n                    </label>\\r\\n                    <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"expressionSet.axisName\\\"\\r\\n                      placeholder=\\\"specify axis name\\\" [disabled]=\\\"expressionSet.disableAxes\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"axisOption{{i}}\\\" id=\\\"axisPartialNameOption\\\" value=\\\"InclusionExclusionList\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                        (onClick)=\\\"OnExpressionAxisTypeChanged(i);expressionSet.disableAxesInc=false;expressionSet.disableAxes=true\\\">\\r\\n                      </p-radioButton>\\r\\n                      Inclusions(axis name must\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea id=\\\"axisInclusionList\\\" name=\\\"axisInclusionList\\\"\\r\\n                      [disabled]=\\\"expressionSet.disableAxesInc\\\" placeholder=\\\"Enter Inclusion Axes\\\"\\r\\n                      [(ngModel)]=\\\"expressionSet.axisInclusionListAsString\\\" cols=\\\"50\\\" placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                      (onChange)=\\\"expressionSet.axisInclusionList = buildListFromString(expressionSet.axisInclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      Exclusions (axis name must NOT\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea id=\\\"axisExclusions\\\" name=\\\"axisExclusions\\\"\\r\\n                      [disabled]=\\\"expressionSet.disableAxesInc\\\" [(ngModel)]=\\\"expressionSet.axisExclusionListAsString\\\"\\r\\n                      cols=\\\"50\\\" placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                      (onChange)=\\\"expressionSet.axisExclusionList = buildListFromString(expressionSet.axisExclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-lg-12 p-y-0\\\">\\r\\n                    <label>\\r\\n                      Members:\\r\\n                    </label>\\r\\n\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" id=\\\"anyMemberOption\\\" value=\\\"Any\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.memberType\\\" (onClick)=\\\"OnExpressionMemberTypeChanged(i)\\\">\\r\\n                      </p-radioButton>\\r\\n                      Any Members:\\r\\n                    </label>\\r\\n                    <div class=\\\"p-y-5\\\">\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" value=\\\"ExactMatch\\\" [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                        (onClick)=\\\"OnExpressionMemberTypeChanged(i); expressionSet.disableMember=false;expressionSet.disableMemInc=true\\\">\\r\\n                      </p-radioButton>\\r\\n                      <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"expressionSet.memberName\\\"\\r\\n                        placeholder=\\\"specify member name\\\" [disabled]=\\\"expressionSet.disableMember\\\">\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row p-y-5\\\">\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      <p-radioButton name=\\\"memberOption{{i}}\\\" value=\\\"InclusionExclusionList\\\"\\r\\n                        [(ngModel)]=\\\"expressionSet.memberType\\\" inputId=\\\"partialMemberOption\\\"\\r\\n                        (onClick)=\\\"OnExpressionMemberTypeChanged(i);expressionSet.disableMember=true; expressionSet.disableMemInc=false\\\">\\r\\n                      </p-radioButton>\\r\\n                      Inclusions(member name must\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea [(ngModel)]=\\\"expressionSet.memberInclusionListAsString\\\" cols=\\\"50\\\"\\r\\n                      placeholder=\\\"Enter Exclusion Members\\\" [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                      (onChange)=\\\"expressionSet.memberInclusionList = buildListFromString(expressionSet.memberInclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"col-xs-12 col-lg-6 input-wrapper\\\">\\r\\n                    <label>\\r\\n                      Exclusions (member name must NOT\\r\\n                      contain the list of words):\\r\\n                    </label>\\r\\n                    <textarea pInputTextarea [(ngModel)]=\\\"expressionSet.memberExclusionListAsString\\\" cols=\\\"50\\\"\\r\\n                      placeholder=\\\"Enter Exclusion Members\\\" [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                      (onChange)=\\\"expressionSet.memberExclusionList = buildListFromString(expressionSet.memberExclusionListAsString)\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"removeSet(i)\\\" label=\\\"Remove Set\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"AddExpressionSet()\\\" label=\\\"Add New Set\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Extended Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name Contains:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                  (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name does not Contain:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameDoesNotContains\\\" cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                  placeholder=\\\"Name Does Not Contain\\\"\\r\\n                  (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Balance Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"debit\\\" label=\\\"Debit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"credit\\\" label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"na\\\" label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"none\\\" label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Period Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"perTypeGroup\\\" value=\\\"instant\\\" label=\\\"Instant\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"perTypeGroup\\\" value=\\\"duration\\\" label=\\\"duration\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"p-y-5\\\">\\r\\n                  &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\" binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                  </p-checkbox>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-lg-8\\\" style=\\\"background-color: #ccc;\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Division ->\\r\\n                  Sector:</label>\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                  [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"divSectorChange(divSector)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{divisionCount}}\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>Industry: </label>\\r\\n\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                  [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                  filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{sectorCount}}\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n\\r\\n                <label>Filer Category:</label>\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                  placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange(filerCategory)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>&nbsp;\\r\\n                {{categoryCount}}\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\" [paginator]=\\\"true\\\"\\r\\n                  [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                  [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                  (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n                  scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"resolve()\\\" label=\\\"Resolve\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Include\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Exclude\\\"\\r\\n                  class=\\\"ui-button m-x-5 ui-button-info\\\"></button>&nbsp;\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Extended Check w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name Contains:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                  (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Element Name does not Contain:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"nameDoesNotContains\\\" cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                  placeholder=\\\"Name Does Not Contain\\\"\\r\\n                  (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Balance Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"debit\\\" label=\\\"Debit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"credit\\\" label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"na\\\" label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                  <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"none\\\" label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                  </p-radioButton> &nbsp;\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Period Type:\\r\\n                </label>\\r\\n                <div>\\r\\n                  &nbsp; <p-radioButton name=\\\"radioGroup1\\\" value=\\\"instant\\\" label=\\\"Instant\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n                  <p-radioButton name=\\\"radioGroup1\\\" value=\\\"duration\\\" label=\\\"duration\\\" [(ngModel)]=\\\"perType\\\">\\r\\n                  </p-radioButton>\\r\\n                  &nbsp;\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"p-y-5\\\">\\r\\n                  &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\" binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                  </p-checkbox>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Axes:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"axes\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Enter Axes\\\"\\r\\n                  (onChange)=\\\"updateAxes(axes)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Members:\\r\\n                </label>\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"axesMembers\\\" cols=\\\"40\\\" rows=\\\"5\\\" placeholder=\\\"Enter Members\\\"\\r\\n                  (onChange)=\\\"updateAxesMembers(axesMembers)\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-lg-8\\\" style=\\\"background-color: #ccc;\\\">\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Division ->\\r\\n                  Sector:</label>\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                  [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"divSectorChange(divSector)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{divisionCount}}\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n                <label>Industry: </label>\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                  [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange(industry)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                  filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{sectorCount}}\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n\\r\\n                <label>Filer Category:</label>\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                  placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange(filerCategory)\\\"\\r\\n                  [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                </p-dropdown>&nbsp;\\r\\n                {{categoryCount}}\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\" [paginator]=\\\"true\\\"\\r\\n                  [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                  [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                  (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n                  scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n\\r\\n              <div class=\\\"col-lg-12 text-center\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"resolve()\\\" label=\\\"Resolve\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Include\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"editExpression=false\\\" label=\\\"Exclude\\\"\\r\\n                  class=\\\"ui-button ui-button-info\\\"></button>&nbsp;\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Formula\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\" [style]=\\\"{height: '500px'}\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-12 col-lg-3 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Term Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"formulaSet.termName\\\" name=\\\"formulaTermName\\\" [size]=\\\"50\\\"\\r\\n                  [suggestions]=\\\"formulaFilteredTerms\\\" (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                  placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n                  <ng-template let-value pTemplate=\\\"item\\\">\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                      <span [innerHTML]=\\\"value\\\"></span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-1\\\">\\r\\n                <label style=\\\"width: 100%; height: 18px;\\\"></label>\\r\\n                <p-checkbox [(ngModel)]=\\\"formulaSet.nullable\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                &nbsp;\\r\\n                <label>\\r\\n                  Allow Null?\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-2 input-wrapper\\\">\\r\\n\\r\\n                <label>\\r\\n                  Operators:\\r\\n                </label>\\r\\n                <p-dropdown [options]=\\\"formulaOperatorsList\\\" [style]=\\\"{width: '100%'}\\\"\\r\\n                  [(ngModel)]=\\\"formulaSet.operation\\\" optionLabel=\\\"name\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-1 text-align\\\">\\r\\n                <label style=\\\"width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"deleteFormula(i)\\\" (keydown.enter)=\\\"deleteFormula(i)\\\"\\r\\n                  icon=\\\"pi pi-trash\\\" Class=\\\"ui-button-info\\\" pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 text-left\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherFormula()\\\"\\r\\n                  label=\\\"Add + Another Term to Formula\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Concept Match Multiple\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let conceptSet of conceptMatchMultipleList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-11 col-lg-8 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Concept Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"conceptMatchMultiple[i]\\\" [suggestions]=\\\"filteredconcMat\\\"\\r\\n                  (completeMethod)=\\\"filterConceptMatch($event)\\\" [size]=\\\"80\\\" field=\\\"id\\\" placeholder=\\\"Enter Concept Name\\\"\\r\\n                  [minLength]=\\\"3\\\">\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-1 col-lg-1\\\">\\r\\n                <label style=\\\"height: 18px; width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                  (keydown.enter)=\\\"deleteConceptMatchMultipleItem(i)\\\" icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                  pTooltip=\\\"Delete Concept\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"addAnotherConcept()\\\" label=\\\"Add + Another Concept\\\"\\r\\n                  class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Use Positive Facts Only\\\" [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Use Negative Facts Only\\\" [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-lg-4\\\">\\r\\n\\r\\n                <p-checkbox label=\\\"Reverse Negative Facts\\\" [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Axis:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\" placeholder=\\\"specify axis name\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Members Exclusion (Virtual Parent):\\r\\n                </label>\\r\\n\\r\\n                <textarea pInputTextarea [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                  placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n    </p-tabView>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"saveExpression()\\\" label=\\\"Save Expression\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditIndustry=false; editExpression=false;\\\"\\r\\n      label=\\\"Cancel\\\" class=\\\"ui-button-secondary\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Term Derived Zero Expression Builder\\\" [(visible)]=\\\"addEditDerived\\\" [modal]=\\\"true\\\"\\r\\n  [style]=\\\"{width: '95vw'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n  [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n  <div *ngIf=\\\"showValidation\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{validationMessage}}</strong>\\r\\n  </div>\\r\\n  <div class=\\\"row p-y-5\\\">\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Name:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-6 input-wrapper\\\">\\r\\n      <label>Definition:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-6 col-lg-3 input-wrapper\\\">\\r\\n      <label>Term Code:</label>\\r\\n      <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" disabled></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <p-tabView [activeIndex]=\\\"activeExpressionTabIndex\\\" (onChange)=\\\"onDerivedTabChange($event)\\\">\\r\\n      <p-tabPanel header=\\\"Text Block Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of derivedZeroExpressionForEdit.textBlockList; let i = index\\\"\\r\\n              [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-11 col-lg-8 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Text Block: {{filteredtext[i]}}\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\" name=\\\"textblock\\\" [size]=\\\"80\\\" field=\\\"id\\\"\\r\\n                  [suggestions]=\\\"filteredconcMat\\\" (completeMethod)=\\\"filterConceptMatch($event)\\\"\\r\\n                  placeholder=\\\"Search Term Name\\\">\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-1 col-lg-1\\\">\\r\\n                <label style=\\\"height: 14px; width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"removeTextBlock(i)\\\" (keydown.enter)=\\\"removeTextBlock(i)\\\"\\r\\n                  icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\" pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherTextBlock()\\\"\\r\\n                  label=\\\"Add + Another Text Block\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Dependent Terms\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <p-checkbox [(ngModel)]=\\\"derivedZeroExpressionForEdit.allTermsRequired\\\" binary=\\\"true\\\"\\r\\n              label=\\\"Dependent on all terms?\\\">\\r\\n            </p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of derivedZeroExpressionForEdit.depTermNameList; let i = index\\\"\\r\\n              [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-11 col-lg-8 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Term Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\" name=\\\"formulaTermName\\\" [size]=\\\"72\\\"\\r\\n                  [suggestions]=\\\"formulaFilteredTerms\\\" (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                  placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n                  <ng-template let-value pTemplate=\\\"item\\\">\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                      <span [innerHTML]=\\\"value\\\"></span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </p-autoComplete>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-1 col-lg-1\\\">\\r\\n                <label style=\\\"height: 14px; width: 100%;\\\"></label>\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"removeDerivedTerm(i)\\\"\\r\\n                  (keydown.enter)=\\\"removeDerivedTerm(i, false)\\\" icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                  pTooltip=\\\"Delete Term Entry\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherItem(false)\\\"\\r\\n                  label=\\\"Add + Another Term\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Exclusive Terms\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-6\\\">\\r\\n            <div class=\\\"row\\\" *ngFor=\\\"let item of derivedZeroExpressionForEdit.excTermNameList; let i = index\\\"\\r\\n              [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n              <div class=\\\"col-xs-11 col-lg-8 input-wrapper\\\">\\r\\n                <label>\\r\\n                  Term Name:\\r\\n                </label>\\r\\n\\r\\n                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\" name=\\\"formulaTermName\\\" [size]=\\\"72\\\"\\r\\n                  [suggestions]=\\\"formulaFilteredTerms\\\" (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                  placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n                  <ng-template let-value pTemplate=\\\"item\\\">\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                      <span [innerHTML]=\\\"value\\\"></span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </p-autoComplete>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-1 col-lg-1\\\">\\r\\n                <label style=\\\"height: 14px; width: 100%;\\\"></label><button type=\\\"button\\\" pButton\\r\\n                  (click)=\\\"removeDerivedTerm(i)\\\" (keydown.enter)=\\\"removeDerivedTerm(i, true)\\\" icon=\\\"pi pi-trash\\\"\\r\\n                  styleClass=\\\"ui-button-info\\\" pTooltip=\\\"Delete Term Entry\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row p-y-5\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherItem(true)\\\"\\r\\n                  label=\\\"Add + Another Term\\\" class=\\\"ui-button ui-button-success\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n      <p-tabPanel header=\\\"Exclusive Division->Sector\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n            <label>Division -> Sector:</label>\\r\\n            <p-dropdown [options]=\\\"filteredDeriveddivSectors\\\" placeholder=\\\"Select Division Sector\\\"\\r\\n              [(ngModel)]=\\\"deriveddivSector\\\" [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n              (onChange)=\\\"derivedDivisionSeleted($event)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n            </p-dropdown>\\r\\n            <span>\\r\\n              {{divisionCount}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-lg-4 input-wrapper\\\">\\r\\n            <label>Industry: </label>\\r\\n            <p-dropdown [options]=\\\"filteredDerivedindustry\\\" placeholder=\\\"Select Industry\\\" [(ngModel)]=\\\"derivedindustry\\\"\\r\\n              [style]=\\\"{'width':'100%'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\" (onChange)=\\\"industryChanged($event)\\\"\\r\\n              filter=\\\"true\\\">\\r\\n            </p-dropdown>\\r\\n            <span>\\r\\n              {{sectorCount}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </p-tabPanel>\\r\\n    </p-tabView>\\r\\n  </div>\\r\\n\\r\\n  <p-footer>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addEditDerived=false; saveNewDerivedExpression()\\\"\\r\\n      label=\\\"Save Derived Expression\\\"></button>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditDerived=false; \\\" label=\\\"Cancel\\\"\\r\\n      class=\\\"ui-button-secondary\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Expression For {{termId}}\\\" [(visible)]=\\\"displayTermTreeModal\\\" [modal]=\\\"true\\\"\\r\\n  [style]=\\\"{width: '95vw', overflow: 'auto'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n  [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n  <div class=\\\"row\\\" p-y-5>\\r\\n    <div class=\\\"col-xs-12 col-lg-7\\\" id=\\\"termRulesTreeTable\\\">\\r\\n      <p-treeTable [value]=\\\"treeData.data\\\" [columns]=\\\"treeCol\\\">\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n          <tr>\\r\\n            <td *ngFor=\\\"let col of columns; let i = index\\\" ttEditableColumn [ngClass]=\\\"{'ui-toggler-column': i === 0}\\\">\\r\\n              <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i === 0\\\"></p-treeTableToggler>\\r\\n              <a href=\\\"#\\\"\\r\\n                [ngClass]=\\\"{'selected-node': ((selectedTreeNode['childId'] === rowData['childId']) && (selectedTreeNode['parent'] === rowData['parent']) && (selectedTreeNode['id'] === rowData['id']))}\\\"\\r\\n                (click)=\\\"showTermRuleResultnavigateTree($event,rowData)\\\">\\r\\n                {{rowData[col.field]}}\\r\\n              </a>\\r\\n              <!-- <span *ngIf=\\\"rowData['hasChildren']\\\"> {{rowData[col.field]}}</span> -->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-treeTable>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-lg-5\\\" *ngIf=\\\"modalExpTableData && modalExpTableData.name && modalExpTableData.termId\\\">\\r\\n      <div style=\\\" margin-bottom: 5px; font-weight: 700; font-size: 14px; text-align: center;\\\">Expression table for\\r\\n        {{modalExpTableData.name}} ({{modalExpTableData.termId}})</div>\\r\\n\\r\\n      <p-table #modalExpressionTable [columns]=\\\"modalExpressioncols\\\" [value]=\\\"modalExpTableList\\\" [paginator]=\\\"true\\\"\\r\\n        [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n        [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\" p-dataTable\\r\\n        [scrollable]=\\\"true\\\" scrollHeight=\\\"400px\\\">\\r\\n        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n          <colgroup>\\r\\n            <col *ngFor=\\\"let col of columns\\\" [style.width]=\\\"col.width\\\">\\r\\n          </colgroup>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n          <tr>\\r\\n            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n              <div>\\r\\n                {{col.header}}\\r\\n              </div>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n          <tr style=\\\"height:34px\\\">\\r\\n            <td *ngFor=\\\"let col of columns \\\" class=\\\"ui-resizable-column\\\" style=\\\"word-wrap:break-word\\\">\\r\\n              <div *ngIf=\\\"col.field === 'rank'\\\">\\r\\n                {{rowData[col.field]}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"col.field !== 'rank' && col.field !== 'options' && col.field !== 'expression'\\\">\\r\\n                {{rowData[col.field]}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"col.field === 'expression'\\\">\\r\\n                <div *ngIf=\\\"rowData['type'] !== 'Formula'\\\">\\r\\n                  {{rowData[col.field]}}\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"rowData['type'] === 'Formula'\\\">\\r\\n                  <p style=\\\"display:inline\\\" *ngFor=\\\"let formula of rowData['formulaList']\\\">\\r\\n                    <a href=\\\"#\\\" (click)=\\\"showTermRuleResultnavigate($event,formula.termName)\\\">{{formula.termName}}\\r\\n                    </a>\\r\\n                    {{getFormulaSuffix(formula)}}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n          <tr style=\\\"height:34px\\\">\\r\\n            <td *ngFor=\\\"let col of columns\\\" pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n              <div class=\\\"loading-text\\\"></div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"summary\\\">\\r\\n          Total number of Records: {{expressionTable.totalRecords}}\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-footer>\\r\\n    <!-- <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"editExpression=false; saveExpression()\\\"\\r\\n      label=\\\"Save Expression\\\"></button> -->\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"displayTermTreeModal=false\\\" label=\\\"Cancel\\\"\\r\\n      class=\\\"ui-button-secondary\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<span *ngFor=\\\"let entity of entityList; let i = index;\\\">\\r\\n  <div\\r\\n    [ngStyle]=\\\"{'display': showTermResultsWindow[i] ? 'block' : 'none', 'margin-left': showTermResultsWindowMinimize[i] ? '5px' : '0px', 'width': showTermResultsWindowMinimize[i] ? minimizeWidth : 'auto', 'background-color': showTermResultsWindowMinimize[i] ? '#f4f4f4' : ''  }\\\"\\r\\n    [ngDraggable]=\\\"!showTermResultsWindowMinimize[i]\\\" [ngResizable]=\\\"!showTermResultsWindowMinimize[i]\\\" class=\\\"modal\\\"\\r\\n    [ngClass]=\\\"showTermResultsWindowMinimize[i] ? 'minimize-modal modal' + i : 'modal' + i \\\">\\r\\n\\r\\n    <div *ngIf=\\\"showTermResultsWindowMinimize[i]\\\" style=\\\"padding: 0px 5px;\\\">\\r\\n      <span style=\\\"position: relative; top: 12px;; font-weight: bolder;\\\">{{state[i].companyName | slice:0:13}}</span>\\r\\n\\r\\n      <span class=\\\"float-right\\\">\\r\\n        <span (click)=\\\"maximizeModal(i)\\\" class=\\\"maximize\\\">+</span>\\r\\n        <span (click)=\\\"close(i)\\\" style=\\\"position: relative; top: 8px;\\\" class=\\\"close\\\">&times;</span>\\r\\n      </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-content\\\" *ngIf=\\\"!showTermResultsWindowMinimize[i]\\\">\\r\\n      <div class=\\\"row modal-header\\\" [ngStyle]=\\\"{'margin': showTermResultsWindowMinimize[i] ? '0px' : '0px -15px' }\\\">\\r\\n        <div class=\\\"col-12\\\" [ngStyle]=\\\"{'padding': showTermResultsWindowMinimize[i] ? '0px' : '5px' }\\\">\\r\\n\\r\\n          <span class=\\\"float-right\\\">\\r\\n            <span (click)=\\\"minimizeModal(i)\\\" class=\\\"minimize\\\">-</span>\\r\\n            <span (click)=\\\"close(i)\\\" class=\\\"close\\\">&times;</span>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <app-term-result *ngIf=\\\"showTermResultsWindow[i]\\\" [state]=\\\"state[i]\\\"></app-term-result>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\" style=\\\"padding: 10px 5px;\\\">\\r\\n          <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"showTermResultsWindow[i]=false\\\" label=\\\"Cancel\\\"\\r\\n            class=\\\"ui-button-secondary float-right\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- <p-dialog header=\\\"\\\" [(visible)]=\\\"showTermResultsWindow[i]\\\" [style]=\\\"{width: '95vw', overflow: 'auto'}\\\"\\r\\n    [draggable]=\\\"true\\\" [maximizable]=\\\"true\\\" [resizable]=\\\"true\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\">\\r\\n    <app-term-result [state]=\\\"state[i]\\\"></app-term-result>\\r\\n\\r\\n    <p-footer>\\r\\n\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"showTermResultsWindow[i]=false\\\" label=\\\"Cancel\\\"\\r\\n        class=\\\"ui-button-secondary\\\"></button>\\r\\n    </p-footer>\\r\\n  </p-dialog> -->\\r\\n</span>\\r\\n\\r\\n<ng-template #termRuleSelectionSection>\\r\\n  <div>The Term list shows the complete list of term rules.>\\r\\n    <div>\\r\\n      <ol>\\r\\n        <li>\\r\\n          The display is a hierarchical list, group by financial statements and sorted by term names. The term names are\\r\\n          aligned to Compustat term codes when applicable.\\r\\n        </li>\\r\\n        <li>\\r\\n          You can \\\"filter\\\" by typing in the filter text box. Example, filter by \\\"intangible\\\":\\r\\n        </li>\\r\\n      </ol>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #periodTypeSection>\\r\\n  <div>The dropdown determines what specific period type the selected term represents.</div>\\r\\n  <div>Options include: Instant, Duration, and NA. </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #typeSection>\\r\\n  <div>This dropdown determines what type the selected term represents. </div>\\r\\n  <div>Options include: Decimal, Integer, Monetary, PerShare, Ratio, Shares, and NA.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #financialStatementSection>\\r\\n  <div>This dropdown determines what financial statement the selected term represents. </div>\\r\\n  <div>Options include: Various Balance sheet, Income Statement, and Statement of Cash Flows selections.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #priorityGroupSection>\\r\\n  <div>This dropdown determines what priority group the selected term is classified. </div>\\r\\n  <div>Options include: Priority groups A through J.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #addTermSection>\\r\\n  <div>The user click on the “Add Term” to add a new term. </div>\\r\\n  <div>The detail pane would be blanked out to allow the user to enter a new term. </div>\\r\\n  <div>The term name and code need to be unique.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #removeTermSection>\\r\\n  <div>The user can click on the “Remove Term” to remove the term.</div>\\r\\n  <div>The user will need to confirm the action.</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #expLabelSection>\\r\\n  <div>The user can click on the “Add Expression” to add an additional expressions to the term rule. </div>\\r\\n  <div>Please view the “Expression Parser/Builder” section to review details of how to build expressions for different\\r\\n    expression types.</div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, HostListener, ElementRef } from '@angular/core';\r\nimport { HomeService } from 'app/home/homeService';\r\nimport { AppComponent } from 'app/app.component';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { TreeNode, Message, ConfirmationService } from 'primeng/api';\r\nimport { Home } from 'app/domain/home';\r\nimport { UtilService } from 'app/utils/utilService';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { TermRule } from 'app/domain/termRule';\r\nimport { MappedEntity } from 'app/domain/mappedEntity';\r\nimport { EditExpression } from 'app/domain/editExpression';\r\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\r\nimport { Keepalive } from '@ng-idle/keepalive';\r\nimport { LoginService } from 'app/services/login.service';\r\nimport { JoyrideService } from 'ngx-joyride';\r\nimport { ActivatedRoute } from '@angular/router';\r\ndeclare var d3: any\r\n@Component({\r\n  selector: 'app-featurehome',\r\n  templateUrl: './featurehome.component.html',\r\n  styleUrls: ['./featurehome.component.css']\r\n})\r\nexport class FeaturehomeComponent implements OnInit {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  toHighlight;\r\n  private termRuleByStatList: any = [];\r\n  private trmRulFinStatmntList: any = [];\r\n  private trmRulPriorGrpList: any = [];\r\n  private periodTypeList: any = [{ name: \"instant\" }, { name: \"duration\" }, { name: \"na\" }];\r\n  private typeList: any = [{ name: \"decimal\" }, { name: \"integer\" }, { name: \"monetary\" }, { name: \"perShare\" }, { name: \"ratio\" }, { name: \"shares\" }, { name: \"na\" }];\r\n  private expressionTypes = [\"ConceptMatch\", \"ConceptMatchWithDim\", \"ExtendedCheck\", \"ExtendedCheckWithDim\", \"Formula\", \"ConceptMatchMultiple\"];\r\n  private rulePeriodTypes = [\"instant\", \"duration\", \"na\"];\r\n  private testFiscalYears = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\"];\r\n  private balanceTypes = [\"debit\", \"credit\", \"na\", \"none\"];\r\n  private ruleTypes = [\"decimal\", \"integer\", \"monetary\", \"perShare\", \"ratio\", \"shares\", \"na\"];\r\n  private derivedZeroTypes = [\"NoteBlockExistsCheck\", \"DependentTermCheck\", \"ExclusiveTermCheck\", \"IndustryExclusionCheck\"];\r\n  private formulaOperatorsList: any = [{ name: \"\" }, { name: \"+\" }, { name: \"-\" }, { name: \"*\" }, { name: \"/\" }];\r\n  private termRulesList: any;\r\n  private populateList: any[] = [];\r\n  private uncategorizedPopulateList: any[] = [];\r\n  private termRulesPriorityGroupList;\r\n  private userRolesList;\r\n  private userDisplayName;\r\n  private display: true;\r\n  msgs: Message[] = [];\r\n  expressioncols: any;\r\n  modalExpressioncols: any;\r\n  entitycols: any;\r\n  selectedItem: any;\r\n  termTree: TreeNode[] = [];\r\n  selectedTerm: TreeNode;\r\n  termName: string;\r\n  termCode: string;\r\n  definition: string;\r\n  incAccuTest: boolean;\r\n  periodType: any;\r\n  type: any;\r\n  finStatement: any;\r\n  priorgroup: any;\r\n  processOrder: string;\r\n  processingOrder: string;\r\n  expTableList: any[] = [];\r\n  expressionList: any[] = [];\r\n  validationList: any[] = [];\r\n  indOvrrideList: any[] = [];\r\n  dervdZroExpList: any[] = [];\r\n  expLabel: string;\r\n  indOvrdExprDrop: boolean;\r\n  indovrDrpList: any[];\r\n  companyovrRideList: any[];\r\n  selIndOvrdExpr: any;\r\n  chart: any;\r\n  companyList: any[];\r\n  completeCompanyList: any[];\r\n  completeEntities: any[] = [];\r\n  filteredCompany: any[];\r\n  companyName: string;\r\n  termId: string;\r\n  divSectorList: any[];\r\n  filtereddivSector: any[];\r\n  divSector: string;\r\n  division: string;\r\n  sector: string;\r\n  sectorList: any[];\r\n  filteredsector: any[];\r\n  industryList: any[];\r\n  filteredindustry: any[];\r\n  industry: string;\r\n  filerCategoryList: any[];\r\n  filteredfilerCategory: any[];\r\n  filerCategory: string = null;\r\n  quaterly: boolean = true;\r\n  filterRadio: string;\r\n  newTerm: boolean;\r\n  errorMsg: string = '';\r\n  entityList: any[];\r\n  chartData: any;\r\n  resolvedRanks: any[];\r\n  unResolvedRanks: any[];\r\n  selectResolvedRank: string;\r\n  chartUrl: string = '/api/TermRulesStatisticsForCriteria'\r\n  termRule: TermRule;\r\n  company: string;\r\n  isAdminUser: boolean = true;\r\n  index: number = 0;\r\n  filteredconcMat: any[];\r\n  conceptNameDefinition: string = \"\";\r\n  concMatch: any;\r\n  divisionCount: number;\r\n  industryCount: number;\r\n  categoryCount: any;\r\n  fsqvLink: string = \"\";\r\n\r\n  usePositiveFacts: boolean;\r\n  useNegativeFacts: boolean;\r\n  revNegativeFacts: boolean;\r\n  axis: string;\r\n  virtualFactMemberExclusions: any[];\r\n  maxAxisCount: number;\r\n  useMaxAxisCount: string;\r\n  expressionSets: any[];\r\n  conceptMatchMultipleList: any[];\r\n  conceptMatchMultiple: any[];\r\n\r\n  exprStr = \"isExtended\";\r\n  containsWords: any[] = [];\r\n  doesNotContainsWords: any[] = [];\r\n  nameDoesNotContains: any[] = [];\r\n  balType: string;\r\n  perType: string;\r\n  isShareItemType: boolean;\r\n  axes: any;\r\n  axesMembers: any;\r\n  nameContains: any[] = [];\r\n  extendedEntitiesLookup: any[] = [];\r\n  namedAxisList: any[];\r\n  namedMemberList: any[];\r\n  formulaSets: any[];\r\n  formulaTermName: string;\r\n  formulaAllowNull: boolean;\r\n  formulaOperator: string;\r\n\r\n  formulaFilteredTerms: any[];\r\n  termRuleLists: any[] = [];\r\n  overrideForEdit: any;\r\n  validationExpression: any;\r\n  validationRank: any;\r\n  addvalidation: boolean;\r\n\r\n  entityOverrides: any[];\r\n  overrideName: any;\r\n  mergeBaseExpressions: boolean;\r\n  overridecompanyName: any;\r\n  overrideDivSec: any;\r\n\r\n  derivedZeroExpressionForEdit: any = {};\r\n  activeExpressionTabIndex = 0;\r\n  excludeEntitiesFilter: any = {};\r\n  filteredDeriveddivSectors: any = [];\r\n  deriveddivSector: string = '';\r\n  derivedindustry: string = '';\r\n  filteredDerivedindustry: any[] = [];\r\n  derivedRank: boolean = true;\r\n\r\n  // this are for enabling and disabling purpos\r\n  displayTerms: boolean = false;\r\n  processnow: boolean = false;\r\n  displayGetCoverage: boolean = false;\r\n  showError: boolean;\r\n  progressSpinner: boolean;\r\n  enableTermButton: boolean;\r\n  enableAddTermButton: boolean;\r\n  enableTermCode: boolean;\r\n  editExpression: boolean;\r\n  addExpression: boolean;\r\n  isOverrideExpressionForEdit: boolean;\r\n  disableAxes: boolean;\r\n  disableMember: boolean;\r\n  disableMemInc: boolean;\r\n  disableAxesInc: boolean;\r\n  showExpression: boolean;\r\n  addEditValidation: boolean;\r\n  addEditIndustry: boolean;\r\n  addEditDerived: boolean;\r\n  filteredtext: any[] = [];\r\n  expressionForEdit: any;\r\n\r\n  expressionName: string;\r\n  startYear: number = (new Date()).getFullYear() - 4;\r\n  endYear: number = (new Date()).getFullYear();\r\n  minRange: number = (new Date()).getFullYear() - 4;\r\n  maxRange: number = (new Date()).getFullYear();\r\n  range: number[] = [(new Date()).getFullYear() - 4, (new Date()).getFullYear()];\r\n  minYear: number = (new Date()).getFullYear() - 4;\r\n  maxYear: number = (new Date()).getFullYear();\r\n\r\n  timedOut = false;\r\n  lastPing?: Date = null;\r\n  displayTermTreeModal = false;\r\n  derivationTreeRes;\r\n\r\n  modalExpTableList = [];\r\n  modalExpTableData;\r\n  minimizeArray = [];\r\n\r\n  treeData = {};\r\n  treeCol = [\r\n    { field: 'name', header: 'Name' }\r\n  ];\r\n  chartDonutOptions;\r\n\r\n  showTermResultsWindow = [];\r\n  showTermResultsWindowMinimize = [];\r\n  state = [];\r\n  title = 'Maxds';\r\n  tour: boolean;\r\n  percent: number = 0;\r\n  totalEntityCount: number = 0;\r\n  showValidation: boolean;\r\n  validationMessage: string;\r\n\r\n  constructor(private homeService: HomeService, private app: AppComponent, private router: Router, private home: Home, private utilService: UtilService, private mappedEntity: MappedEntity, private rule: TermRule, private el: ElementRef,\r\n    private confirmationService: ConfirmationService, private editForExpression: EditExpression, private idle: Idle, private keepalive: Keepalive, private login: LoginService, private readonly joyrideService: JoyrideService, private route: ActivatedRoute) {\r\n\r\n    this.app.showmenu = true;\r\n\r\n    this.chart = {};\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  public areas = [\r\n    { size: 20, order: 1, name: 'Term Tree' },\r\n    { size: 80, order: 2, name: 'Content' }\r\n  ];\r\n\r\n  onGutterClick(e: {gutterNum: number; sizes: number[]}) {\r\n    if (!e || e.gutterNum !== 1) return;\r\n\r\n    if(e.sizes[0] > 0) {\r\n      this.areas = [\r\n        { size: 0, order: 1, name: 'Term Tree' },\r\n        { size: 100, order: 2, name: 'Content' }\r\n\r\n      ];\r\n    }\r\n    else {\r\n      this.areas = [\r\n        { size: 20, order: 1, name: 'Term Tree' },\r\n        { size: 80, order: 2, name: 'Content' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  onDragEnd(e: {gutterNum: number; sizes: number[]}) {\r\n    this.areas[0].size = e.sizes[0];\r\n    this.areas[1].size = e.sizes[1];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.termRule = new TermRule;\r\n    //this.expressionForEdit = null;\r\n    this.expressionName = 'Expression';\r\n    this.display = true;\r\n    this.errorMsg = '';\r\n    this.progressSpinner = false;\r\n    this.refresh();\r\n    console.log('homeComponent : calling ngOnInit...');\r\n\r\n\t//from resolver\r\n\tthis.completeCompanyList = this.route.snapshot.data['completeCompanyList'];\r\n\tthis.trmRulFinStatmntList = this.route.snapshot.data['termRuleCategoryList'];\r\n\tthis.termRulesList = this.route.snapshot.data['termRuleList'];\r\n\t//init ...\r\n    this.expressioncols = this.home.homeCols();\r\n    this.modalExpressioncols = this.home.modalExpressioncols();\r\n    this.getRuleList();\r\n    this.getTermRuleOptions();\r\n    this.getUserRole();\r\n    this.utilService.getCompanyList().subscribe((response) => { this.companyList = response; });\r\n    this.utilService.getDivSectorList().subscribe((response) => {\r\n      this.divSectorList = response;\r\n      this.filtereddivSector = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filtereddivSector.push(name)\r\n      });\r\n    })\r\n    this.utilService.getIndustryList().subscribe((response) => { this.industryList = response; })\r\n    this.utilService.getFilerCategoryList().subscribe((response) => {\r\n      this.filerCategoryList = response;\r\n      this.filteredfilerCategory = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filteredfilerCategory.push(name)\r\n      });\r\n    })\r\n\r\n    //this.completeCompanyList = this.route.snapshot.data['completeCompanyList'];\r\n    this.addTerm();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.loadFromStorage();\r\n  }\r\n\r\n  loadFromStorage() {\r\n    let termTreeId = sessionStorage.getItem('home.termTreeId');\r\n    if (termTreeId !== null) {\r\n      this.processnow = false;\r\n      this.indovrDrpList = [];\r\n      this.selIndOvrdExpr = null;\r\n      this.indOvrdExprDrop = false;\r\n      this.enableAddTermButton = false;\r\n\r\n      console.log('selected: ' + termTreeId);\r\n      this.termId = termTreeId;\r\n      this.displayTerms = true;\r\n      this.displayGetCoverage = false;\r\n      this.enableTermButton = false;\r\n      this.entitycols = this.home.homeEntityCols();\r\n      this.expressionName = 'Expression'\r\n\r\n      if (sessionStorage.getItem('home.companyName') !== null) {\r\n        this.companyName = sessionStorage.getItem('home.companyName');\r\n      }\r\n      if (sessionStorage.getItem('home.division') !== null) {\r\n        this.division = sessionStorage.getItem('home.division');\r\n      }\r\n      if (sessionStorage.getItem('home.sector') !== null) {\r\n        this.sector = sessionStorage.getItem('home.sector');\r\n      }\r\n      if (sessionStorage.getItem('home.divSector') !== null) {\r\n        this.divSector = sessionStorage.getItem('home.divSector');\r\n      }\r\n      if (sessionStorage.getItem('home.filteredindustry') !== null) {\r\n        this.filteredindustry = JSON.parse(sessionStorage.getItem('home.filteredindustry'));\r\n      }\r\n      if (sessionStorage.getItem('home.industry') !== null) {\r\n        this.industry = sessionStorage.getItem('home.industry');\r\n      }\r\n      if (sessionStorage.getItem('home.filerCategory') !== null) {\r\n        this.filerCategory = sessionStorage.getItem('home.filerCategory');\r\n      }\r\n      if (sessionStorage.getItem('home.divisionCount') !== null) {\r\n        this.divisionCount = JSON.parse(sessionStorage.getItem('home.divisionCount'));\r\n      }\r\n      if (sessionStorage.getItem('home.industryCount') !== null) {\r\n        this.industryCount = JSON.parse(sessionStorage.getItem('home.industryCount'));\r\n      }\r\n      if (sessionStorage.getItem('home.categoryCount') !== null) {\r\n        this.categoryCount = JSON.parse(sessionStorage.getItem('home.categoryCount'));\r\n      }\r\n      if (sessionStorage.getItem('home.quaterly') !== null) {\r\n        this.quaterly = JSON.parse(sessionStorage.getItem('home.quaterly'));\r\n      }\r\n      if (sessionStorage.getItem('home.termName') !== null) {\r\n        this.termName = sessionStorage.getItem('home.termName');\r\n      }\r\n      if (sessionStorage.getItem('home.definition') !== null) {\r\n        this.definition = sessionStorage.getItem('home.definition');\r\n      }\r\n      if (sessionStorage.getItem('home.termCode') !== null) {\r\n        this.termCode = sessionStorage.getItem('home.termCode');\r\n      }\r\n      if (sessionStorage.getItem('home.incAccuTest') !== null) {\r\n        this.incAccuTest = JSON.parse(sessionStorage.getItem('home.incAccuTest'));\r\n      }\r\n      if (sessionStorage.getItem('home.periodType') !== null) {\r\n        this.periodType = JSON.parse(sessionStorage.getItem('home.periodType'));\r\n      }\r\n      if (sessionStorage.getItem('home.type') !== null) {\r\n        this.type = JSON.parse(sessionStorage.getItem('home.type'));\r\n      }\r\n      if (sessionStorage.getItem('home.finStatement') !== null) {\r\n        this.finStatement = JSON.parse(sessionStorage.getItem('home.finStatement'));\r\n      }\r\n      if (sessionStorage.getItem('home.priorgroup') !== null) {\r\n        this.priorgroup = JSON.parse(sessionStorage.getItem('home.priorgroup'));\r\n      }\r\n      if (sessionStorage.getItem('home.processingOrder') !== null) {\r\n        this.processingOrder = sessionStorage.getItem('home.processingOrder');\r\n      }\r\n      if (sessionStorage.getItem('home.range') !== null) {\r\n        this.range = JSON.parse(sessionStorage.getItem('home.range'));\r\n      }\r\n      if (sessionStorage.getItem('home.expTableList') !== null) {\r\n        this.expTableList = JSON.parse(sessionStorage.getItem('home.expTableList'));\r\n      }\r\n      if (sessionStorage.getItem('home.expLabel') !== null) {\r\n        this.expLabel = sessionStorage.getItem('home.expLabel');\r\n      }\r\n      if (sessionStorage.getItem('home.expressionList') !== null) {\r\n        this.expressionList = JSON.parse(sessionStorage.getItem('home.expressionList'));\r\n      }\r\n      if (sessionStorage.getItem('home.validationList') !== null) {\r\n        this.validationList = JSON.parse(sessionStorage.getItem('home.validationList'));\r\n      }\r\n      if (sessionStorage.getItem('home.indOvrrideList') !== null) {\r\n        this.indOvrrideList = JSON.parse(sessionStorage.getItem('home.indOvrrideList'));\r\n      }\r\n      if (sessionStorage.getItem('home.dervdZroExpList') !== null) {\r\n        this.dervdZroExpList = JSON.parse(sessionStorage.getItem('home.dervdZroExpList'));\r\n      }\r\n      if (sessionStorage.getItem('home.selectedTerm') !== null) {\r\n        this.selectedTerm = JSON.parse(sessionStorage.getItem('home.selectedTerm'));\r\n      }\r\n    } else {\r\n      //no term node stored\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // This method gets all pre options on home page\r\n  getTermRuleOptions() {\r\n    this.trmRulFinStatmntList;\r\n    this.getPriorityGrpList();\r\n  }\r\n\r\n  getUserRole() {\r\n\t  this.utilService.getUserRolesList().subscribe(\r\n\t      (response) => {\r\n\t        this.isAdminUser = response.includes('admin');\r\n\t      },\r\n\t      (error) => console.log(error)\r\n\t    )\r\n\t  }\r\n\t\r\n  // This method populate termTree in home page\r\n  getRuleList() {\r\n\t\tif (this.trmRulFinStatmntList) {\r\n\t\t\tthis.trmRulFinStatmntList[this.trmRulFinStatmntList.length] = ({ \"financialStatement\": \"Uncategorized\" });\r\n\t\t} else {\r\n\t\t  this.homeService.getTermRuleCategoryList().subscribe(\r\n\t\t      (response) => {\r\n\t\t        this.trmRulFinStatmntList = response;\r\n\t\t        this.trmRulFinStatmntList[this.trmRulFinStatmntList.length] = ({ \"financialStatement\": \"Uncategorized\" });\r\n\t\t      },\r\n\t\t      (error) => console.log(error)\r\n\t    \t)\r\n\t\t}\r\n\t\t\r\n\t\tif (this.termRulesList) {\r\n\t\t    this.termRulesList = this.termRulesList.sort((a, b) => {\r\n\t\t          if (a.termId < b.termId) { return -1; }\r\n\t\t          if (a.termId > b.termId) { return 1; }\r\n\t\t          return 0;\r\n\t        });\r\n\t        for (var i = 0; i < this.trmRulFinStatmntList.length; i++) {\r\n\t          this.populateList = [];\r\n\t          for (var j = 0; j < this.termRulesList.length; j++) {\r\n\t            if (this.trmRulFinStatmntList[i].financialStatement === this.termRulesList[j].financialStatement) {\r\n\t              this.populateList.push(this.termRulesList[j]);\r\n\t            }\r\n\t          }\r\n\t          let home = new Home();\r\n\t          home.label = this.trmRulFinStatmntList[i].financialStatement;\r\n\t          this.populateList.forEach(obj => {\r\n\t            home.children.push({ \"label\": obj.termId + ' - ' + obj.name, \"leaf\": true, \"key\": obj.termId });\r\n\t            this.termRuleLists.push(obj.name);\r\n\t          }\r\n\t          )\r\n\t          home.leaf = false;\r\n\t          this.termTree.push(home);\r\n\t\r\n\t        }\r\n\t\t} else {\r\n\t\t\tthis.utilService.getTermRuleList().subscribe(\r\n\t\t      \t(response) => {\r\n\t\t\t        this.termRulesList = response;\r\n\t\t\t        this.termRulesList = this.termRulesList.sort((a, b) => {\r\n\t\t\t          if (a.termId < b.termId) { return -1; }\r\n\t\t\t          if (a.termId > b.termId) { return 1; }\r\n\t\t\t          return 0;\r\n\t\t        });\r\n\t\t        for (var i = 0; i < this.trmRulFinStatmntList.length; i++) {\r\n\t\t          this.populateList = [];\r\n\t\t          for (var j = 0; j < this.termRulesList.length; j++) {\r\n\t\t            if (this.trmRulFinStatmntList[i].financialStatement === this.termRulesList[j].financialStatement) {\r\n\t\t              this.populateList.push(this.termRulesList[j]);\r\n\t\t            }\r\n\t\t          }\r\n\t\t          let home = new Home();\r\n\t\t          home.label = this.trmRulFinStatmntList[i].financialStatement;\r\n\t\t          this.populateList.forEach(obj => {\r\n\t\t            home.children.push({ \"label\": obj.termId + ' - ' + obj.name, \"leaf\": true, \"key\": obj.termId });\r\n\t\t            this.termRuleLists.push(obj.name);\r\n\t\t          }\r\n\t\t          )\r\n\t\t          home.leaf = false;\r\n\t\t          this.termTree.push(home);\r\n\t\t        };\r\n\t\t      }\r\n\t    \t)\r\n\t\t}\r\n\r\n/*\t\r\n    this.utilService.getTermRuleList().subscribe(\r\n      (response) => {\r\n        this.termRulesList = response;\r\n        this.termRulesList = this.termRulesList.sort((a, b) => {\r\n          if (a.termId < b.termId) { return -1; }\r\n          if (a.termId > b.termId) { return 1; }\r\n          return 0;\r\n        });\r\n        for (var i = 0; i < this.trmRulFinStatmntList.length; i++) {\r\n          this.populateList = [];\r\n          for (var j = 0; j < this.termRulesList.length; j++) {\r\n            if (this.trmRulFinStatmntList[i].financialStatement === this.termRulesList[j].financialStatement) {\r\n              this.populateList.push(this.termRulesList[j]);\r\n            }\r\n          }\r\n          let home = new Home();\r\n          home.label = this.trmRulFinStatmntList[i].financialStatement;\r\n          this.populateList.forEach(obj => {\r\n            home.children.push({ \"label\": obj.termId + ' - ' + obj.name, \"leaf\": true, \"key\": obj.termId });\r\n            this.termRuleLists.push(obj.name);\r\n          }\r\n          )\r\n          home.leaf = false;\r\n          this.termTree.push(home);\r\n\r\n        };\r\n      }\r\n    ) */\r\n  }\r\n\r\n  onCompanyNameChange($event) {\r\n    console.log(this.companyName);\r\n    sessionStorage.setItem('home.companyName', $event);\r\n  }\r\n  onTermNameChange($event) {\r\n    sessionStorage.setItem('home.termName', $event);\r\n  }\r\n  onTermDefinitionChange($event) {\r\n    sessionStorage.setItem('home.definition', $event);\r\n  }\r\n  termCodeChange($event) {\r\n    console.log(this.termCode);\r\n    if (this.termCode != \"\" && this.termCode) {\r\n      this.enableTermButton = false;\r\n      this.enableAddTermButton = true;\r\n    } else {\r\n      this.enableTermButton = true;\r\n      this.enableAddTermButton = false;\r\n    }\r\n    sessionStorage.setItem('home.termCode', $event);\r\n  }\r\n  termTreeSelection($event) {\r\n    this.processnow = false;\r\n    this.indovrDrpList = [];\r\n    this.selIndOvrdExpr = null;\r\n    this.indOvrdExprDrop = false;\r\n    this.enableAddTermButton = false;\r\n    if ($event.node.key !== undefined) {\r\n      console.log('selected: ' + $event.node.key);\r\n      this.termId = $event.node.key;\r\n      this.displayTerms = true;\r\n      this.displayGetCoverage = false;\r\n      this.enableTermButton = false;\r\n      this.entitycols = this.home.homeEntityCols();\r\n      this.expressionName = 'Expression'\r\n      this.getTermBasedOnId($event.node.key);\r\n      if (this.entityList) {\r\n        this.showResolved(true);\r\n      } else\r\n        this.divisionCount = this.completeCompanyList.length;\r\n      console.log(this.selectedTerm);\r\n\r\n      sessionStorage.setItem('home.termTreeId', this.termId);\r\n      sessionStorage.setItem('home.selectedTerm', JSON.stringify(this.selectedTerm));\r\n    }\r\n  }\r\n\r\n  getPriorityGrpList() {\r\n    this.homeService.getTermRulesPriorityGroupList().subscribe(\r\n      (response) => {\r\n        this.trmRulPriorGrpList = response;\r\n      }\r\n    )\r\n  }\r\n  onTabChange(event) {\r\n    this.index = event.index;\r\n    this.expressionForEdit.type = this.expressionTypes[this.index];\r\n  }\r\n\r\n  onExpressionEdit(rowdata: any) {\r\n    //this.reset();\r\n    //this.expressionList = rowdata.expression;\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    if (this.expressionName === 'Expression') {\r\n      this.expressionsEdit(rowdata);\r\n    }\r\n    if (this.expressionName === 'Validation') {\r\n      this.showExpression = false;\r\n      this.validationEdit(rowdata);\r\n    }\r\n    if (this.expressionName === 'Industry') {\r\n      this.isOverrideExpressionForEdit = true;\r\n      this.entityOverrides = [];\r\n      this.addAnotherIndustryOverride();\r\n      this.industryEdit(rowdata);\r\n      this.expressionSets = [];\r\n      this.formulaSets = [];\r\n      this.AddExpressionSet();\r\n      this.expressionsEdit(rowdata);\r\n      this.editExpression = false;\r\n    }\r\n    if (this.expressionName === 'Derived') {\r\n      this.derivedZeroExpressionForEdit = this.termRule.derivedZeroExpressions[rowdata.rank - 1];\r\n      if (rowdata.type == 'NoteBlockExistsCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'NoteBlockExistsCheck'\r\n        this.activeExpressionTabIndex = 0;\r\n      }\r\n      if (rowdata.type == 'DependentTermCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'DependentTermCheck'\r\n        this.activeExpressionTabIndex = 1;\r\n      }\r\n      if (rowdata.type == 'ExclusiveTermCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'ExclusiveTermCheck'\r\n        this.activeExpressionTabIndex = 2;\r\n      }\r\n      if (rowdata.type == 'IndustryExclusionCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'IndustryExclusionCheck'\r\n        this.activeExpressionTabIndex = 3;\r\n      }\r\n\r\n      this.addEditDerived = true;\r\n      this.prepareDerivedZeroExpressionForEdit();\r\n    }\r\n  }\r\n  industryEdit(rowdata: any) {\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    this.addEditIndustry = true;\r\n    this.editOverrideExpression(rowdata);\r\n  }\r\n\r\n  validationEdit(rowdata: any) {\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    this.addEditValidation = true;\r\n    this.addvalidation = false;\r\n    this.formulaFilteredTerms = this.termRuleLists;\r\n    this.validationRank = rowdata.rank;\r\n    if (rowdata.expression) {\r\n      this.convertExpressionToFormula(rowdata.expression);\r\n    } else {\r\n      this.formulaSets = [];\r\n      this.formulaOperatorsList;\r\n      this.addAnotherFormula();\r\n    }\r\n  }\r\n  getconceptNameDefinition() {\r\n    if (this.concMatch.id) {\r\n      this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n        this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  expressionsEdit(rowdata: any) {\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    this.index = 0;\r\n    this.conceptNameDefinition = \"\";\r\n    this.conceptMatchMultipleList = [];\r\n    this.conceptMatchMultiple = [];\r\n    // this.addAnotherConcept();\r\n    this.concMatch = {};\r\n    //this.expressionForEdit =new EditExpression;\r\n    this.expressionForEdit = rowdata;\r\n    if (rowdata.type == 'ConceptMatch') {\r\n      this.index = 0;\r\n    }\r\n    if (rowdata.type == 'ConceptMatchWithDim') {\r\n      this.index = 1;\r\n    }\r\n    if (rowdata.type == 'ExtendedCheck') {\r\n      this.index = 2;\r\n    }\r\n    if (rowdata.type == 'ExtendedCheckWithDim') {\r\n      this.index = 3;\r\n    }\r\n    if (rowdata.type == 'Formula') {\r\n      this.index = 4;\r\n    }\r\n    if (rowdata.type == 'ConceptMatchMultiple') {\r\n      this.index = 5;\r\n    }\r\n\r\n    this.conceptMatchExpression(rowdata);\r\n    this.conceptMatchWithDim(rowdata);\r\n    this.editExtendedCheck(rowdata);\r\n    this.editExtendedCheckWithDim(rowdata);\r\n    this.editFormula(rowdata);\r\n    this.editConceptMultiple(rowdata);\r\n    this.editExpression = true;\r\n  }\r\n  reset() {\r\n    this.concMatch = {};\r\n    this.usePositiveFacts = false;\r\n    this.useNegativeFacts = false;\r\n    this.revNegativeFacts = false;\r\n    this.axis = null\r\n    this.virtualFactMemberExclusions = [];\r\n    this.axes = null\r\n    this.useMaxAxisCount = null;\r\n    this.maxAxisCount = 0;\r\n    this.expressionSets = [];\r\n    this.nameContains = [];\r\n    this.nameDoesNotContains = [];\r\n    this.balType = null;\r\n    this.perType = null;\r\n    this.isShareItemType = false;\r\n    this.divSector = null;\r\n    this.industry = null;\r\n    this.filerCategory = null;\r\n    this.editExpression = false;\r\n    this.axes = null;\r\n    this.axesMembers = null;\r\n    this.formulaSets = [];\r\n    this.conceptMatchMultipleList = [];\r\n    this.overrideName = null;\r\n    this.mergeBaseExpressions = true;\r\n    this.entityOverrides = [];\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n\r\n  }\r\n\r\n  conceptMatchExpression(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatch') {\r\n      if (rowdata.type === 'ConceptMatch') {\r\n        this.concMatch = rowdata.expression.replace(\"{\", \"\");\r\n        this.concMatch = { 'id': this.concMatch.replace('}', \"\") };\r\n        this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n          this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n        });\r\n      }\r\n      this.usePositiveFacts = rowdata.usePositiveValuesOnly;\r\n      this.useNegativeFacts = rowdata.useNegativeValuesOnly;\r\n      this.revNegativeFacts = rowdata.reverseNegativeValues;\r\n      this.axis = rowdata.virtualFactAxis;\r\n      this.virtualFactMemberExclusions = rowdata.virtualFactMemberExclusionList;\r\n    }\r\n  }\r\n  conceptMatchWithDim(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatchWithDim') {\r\n      if (rowdata.type === 'ConceptMatchWithDim') {\r\n        this.concMatch = rowdata.expression.replace(\"{\", \"\");\r\n        this.concMatch = { 'id': this.concMatch.replace('}', \"\") };\r\n        this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n          this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n        });\r\n      }\r\n      this.useMaxAxisCount = rowdata.useMaxAxisCount;\r\n      this.maxAxisCount = rowdata.maxAxisCount;\r\n      if (!rowdata.dimensionExpressionSets && rowdata.dimensionExpressionSets == null) {\r\n        this.expressionSets = [];\r\n        this.AddExpressionSet();\r\n      } else {\r\n        //this.expressionSets = rowdata.dimensionExpressionSets;\r\n        this.expressionSets = [];\r\n        rowdata.dimensionExpressionSets.forEach(expSet => {\r\n          expSet.axisInclusionListAsString = this.arrayToExpression(expSet.axisInclusionList, \"\\n\", false, false);\r\n          expSet.axisExclusionListAsString = this.arrayToExpression(expSet.axisExclusionList, \"\\n\", false, false);\r\n          expSet.memberInclusionListAsString = this.arrayToExpression(expSet.memberInclusionList, \"\\n\", false, false);\r\n          expSet.memberExclusionListAsString = this.arrayToExpression(expSet.memberExclusionList, \"\\n\", false, false);\r\n          if (expSet.memberInclusionListAsString || expSet.memberExclusionListAsString) {\r\n            expSet.disableMember = true;\r\n            expSet.disableMemInc = false;\r\n          }\r\n          if (expSet.axisExclusionListAsString || expSet.axisInclusionListAsString) {\r\n            expSet.disableAxes = true;\r\n            expSet.disableAxesInc = false;\r\n          }\r\n          this.expressionSets.push(expSet);\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n  editExtendedCheck(rowdata: any) {\r\n    if (rowdata.type === 'ExtendedCheck') {\r\n      this.nameContains = this.splitTextToArray(rowdata.containsWords, \"\\n\")\r\n      this.nameDoesNotContains = this.splitTextToArray(rowdata.doesNotContainsWords, \"\\n\")\r\n      this.balType = rowdata.balType;\r\n      this.perType = rowdata.perType;\r\n      this.isShareItemType = rowdata.isShareItemType;\r\n\r\n    }\r\n\r\n  }\r\n  editExtendedCheckWithDim(rowdata: any) {\r\n    if (rowdata.type === 'ExtendedCheckWithDim') {\r\n      this.nameContains = this.splitTextToArray(rowdata.containsWords, \"\\n\")\r\n      this.nameDoesNotContains = this.splitTextToArray(rowdata.doesNotContainsWords, \"\\n\")\r\n      this.balType = rowdata.balType;\r\n      this.perType = rowdata.perType;\r\n      this.isShareItemType = rowdata.isShareItemType;\r\n      this.axes = this.arrayToExpression(rowdata.NamedAxisList, \"\\n\", false, false);\r\n      this.axesMembers = this.arrayToExpression(rowdata.NamedMemberList, \"\\n\", false, false);\r\n    }\r\n  }\r\n  editFormula(rowdata: any) {\r\n    this.formulaSets = [];\r\n    this.formulaFilteredTerms = this.termRuleLists;\r\n    if (rowdata.type === 'Formula') {\r\n\r\n      if (rowdata.formulaList) {\r\n        rowdata.formulaList.forEach(obj => {\r\n          var formula = { termName: obj.termName, nullable: obj.nullable, operation: { name: obj.operation } };\r\n          this.formulaSets.push(formula);\r\n        })\r\n      }\r\n    } else {\r\n\r\n      this.formulaOperatorsList;\r\n      this.addAnotherFormula();\r\n    }\r\n\r\n\r\n  }\r\n  editConceptMultiple(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatchMultiple') {\r\n      this.conceptMatchMultiple = [];\r\n      this.conceptMatchMultipleList = [];\r\n      if (!rowdata.conceptMatchMultipleList) {\r\n        this.addAnotherConcept();\r\n      }\r\n      else {\r\n        rowdata.conceptMatchMultipleList.forEach(obj => {\r\n          this.conceptMatchMultipleList.push(obj);\r\n          this.conceptMatchMultiple.push({ id: obj });\r\n        })\r\n      }\r\n    }\r\n  }\r\n  addAnotherFormula() {\r\n    var formula = { termName: \"\", nullable: false, operation: \"\" };\r\n    this.formulaSets.push(formula);\r\n  }\r\n\r\n  AddExpressionSet() {\r\n    var termExpressionSet: any = {};\r\n    termExpressionSet.axisType = \"ExactMatch\";\r\n    termExpressionSet.memberType = \"ExactMatch\";\r\n    termExpressionSet.disableAxes = false;\r\n    termExpressionSet.disableMember = false;\r\n    termExpressionSet.disableAxesInc = true;\r\n    termExpressionSet.disableMemInc = true;\r\n    termExpressionSet.axisInclusionListAsString = \"\";\r\n    termExpressionSet.axisExclusionListAsString = \"\";\r\n    termExpressionSet.axisInclusionList = [];\r\n    termExpressionSet.axisExclusionList = [];\r\n    termExpressionSet.memberName = \"\";\r\n    termExpressionSet.axisName = \"\";\r\n    termExpressionSet.memberInclusionListAsString = \"\";\r\n    termExpressionSet.memberExclusionListAsString = \"\";\r\n    termExpressionSet.memberInclusionList = [];\r\n    termExpressionSet.memberExclusionList = [];\r\n    this.expressionSets.push(termExpressionSet);\r\n  }\r\n  removeSet(index) {\r\n    this.expressionSets.splice(index, 1);\r\n  };\r\n\r\n  addAnotherConcept() {\r\n\r\n    if (!this.conceptMatchMultipleList) {\r\n      this.conceptMatchMultipleList = [];\r\n    }\r\n    var conceptExpression = \"\";\r\n    this.conceptMatchMultipleList.push(conceptExpression);\r\n  };\r\n  deleteConceptMatchMultipleItem(index) {\r\n    this.conceptMatchMultipleList.splice(index, 1);\r\n  };\r\n\r\n  getTermBasedOnId(id: string) {\r\n    this.showError = false;\r\n    this.homeService.getTermRule(id).subscribe(\r\n      (response) => {\r\n        this.termRule = response;\r\n        this.definition = response.description\r\n        this.termCode = response.termId;\r\n        if (this.termCode != \"\") {\r\n          this.enableTermCode = true;\r\n        } else {\r\n          this.enableTermCode = false;\r\n        }\r\n        this.termName = response.name;\r\n        this.periodType = { name: response.periodType };\r\n        this.type = { name: response.type };\r\n        this.incAccuTest = response.includeInAccuracyTests;\r\n        this.finStatement = { financialStatement: response.financialStatement };\r\n        this.priorgroup = { name: response.priorityGroup };\r\n        this.processingOrder = response.order;\r\n\r\n        this.expTableList = response.expressions;\r\n        this.expLabel = 'Add Expression';\r\n        this.expressionList = []\r\n        this.expressionList = response.expressions;\r\n        this.validationList = [];\r\n        if (response.validationExpressions)\r\n          response.validationExpressions.forEach(obj => {\r\n            obj.type = 'V';\r\n            this.validationList.push(obj);\r\n          })\r\n        // this.validationList = response.validationExpressions;\r\n        this.indOvrrideList = [];\r\n        this.indOvrrideList = response.overrides;\r\n        this.dervdZroExpList = [];\r\n        this.dervdZroExpList = response.derivedZeroExpressions;\r\n\r\n        this.showTermResultsWindow = [];\r\n        this.showTermResultsWindowMinimize = [];\r\n\r\n        sessionStorage.setItem('home.termCode', this.termCode);\r\n        sessionStorage.setItem('home.termName', this.termName);\r\n        sessionStorage.setItem('home.definition', this.definition);\r\n        sessionStorage.setItem('home.periodType', JSON.stringify(this.periodType));\r\n        sessionStorage.setItem('home.type', JSON.stringify(this.type));\r\n        sessionStorage.setItem('home.incAccuTest', JSON.stringify(this.incAccuTest));\r\n        sessionStorage.setItem('home.finStatement', JSON.stringify(this.finStatement));\r\n        sessionStorage.setItem('home.priorgroup', JSON.stringify(this.priorgroup));\r\n        sessionStorage.setItem('home.processingOrder', this.processingOrder);\r\n\r\n        sessionStorage.setItem('home.expTableList', JSON.stringify(this.expTableList));\r\n        sessionStorage.setItem('home.expLabel', this.expLabel);\r\n        sessionStorage.setItem('home.expressionList', JSON.stringify(this.expressionList));\r\n        sessionStorage.setItem('home.validationList', JSON.stringify(this.validationList));\r\n        sessionStorage.setItem('home.indOvrrideList', JSON.stringify(this.indOvrrideList));\r\n        sessionStorage.setItem('home.dervdZroExpList', JSON.stringify(this.dervdZroExpList));\r\n\r\n      }\r\n    )\r\n    sessionStorage.setItem('home.processingOrder', this.processingOrder);\r\n  }\r\n\r\n  onIncAccuTest($event){\r\n    sessionStorage.setItem('home.incAccuTest', JSON.stringify($event));\r\n  }\r\n  onPeriodTypeChange($event){\r\n    sessionStorage.setItem('home.periodType', JSON.stringify($event.value));\r\n  }\r\n  onTypeChange($event){\r\n    sessionStorage.setItem('home.type', JSON.stringify($event.value));\r\n  }\r\n  onFinStatemenChange($event){\r\n    sessionStorage.setItem('home.finStatement', JSON.stringify($event.value));\r\n  }\r\n  onPriorgroupChange($event){\r\n    sessionStorage.setItem('home.priorgroup', JSON.stringify($event.value));\r\n  }\r\n\r\n  onExpressionButtonClick(type: string) {\r\n    this.indovrDrpList = [];\r\n    this.indOvrdExprDrop = false;\r\n    this.selIndOvrdExpr = null;\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    if (type == 'expressions') {\r\n      this.expTableList = this.expressionList;\r\n      this.expLabel = 'Add Expression';\r\n      this.expressionName = 'Expression'\r\n      return;\r\n    }\r\n    if (type == 'validations') {\r\n      this.expTableList = this.validationList;\r\n      this.expressionName = 'Validation'\r\n      this.expLabel = 'Add Validations';\r\n      return;\r\n    }\r\n    if (type == 'industry') {\r\n      this.expTableList = [];\r\n      if (this.indOvrrideList != null && this.indOvrrideList[0] != null) {\r\n        this.indOvrrideList.forEach(obj => {\r\n          this.expTableList = this.indOvrrideList[0].expressions;\r\n          this.indovrDrpList.push({ \"name\": obj.name });\r\n        })\r\n        this.selIndOvrdExpr = this.indovrDrpList[0].name;\r\n        this.indOvrdExprDrop = true;\r\n      }\r\n      this.expressionName = 'Industry'\r\n      this.expLabel = 'Add Industry Override Expressions';\r\n      return;\r\n    }\r\n    if (type == 'derived') {\r\n      this.expTableList = this.dervdZroExpList;\r\n      this.expressionName = 'Derived'\r\n      this.expLabel = 'Add Derived Zero Expressions';\r\n      return;\r\n    }\r\n  }\r\n  industryChange() {\r\n    this.selIndOvrdExpr;\r\n    this.indOvrrideList.forEach(obj => {\r\n      if (this.selIndOvrdExpr.name == obj.name) {\r\n        this.expTableList = obj.expressions;\r\n      }\r\n    })\r\n  }\r\n\r\n  expressionClick() {\r\n    this.reset();\r\n    this.showValidation = false;\r\n    this.validationMessage = '';\r\n    this.validationMessage = '';\r\n    this.showValidation = false;\r\n    if (this.expLabel === 'Add Expression') {\r\n      this.expressionName = 'Expression'\r\n      this.addingExpression();\r\n    }\r\n    if (this.expLabel === 'Add Validations') {\r\n      this.expressionName = 'Validation'\r\n      this.addValidations();\r\n    }\r\n    if (this.expLabel === 'Add Industry Override Expressions') {\r\n      this.expressionName = 'Industry'\r\n      this.entityOverrides = [];\r\n      this.addAnotherIndustryOverride();\r\n      this.addOverrideExpression();\r\n      this.addEditIndustry = true;\r\n      this.editExpression = false;\r\n\r\n    }\r\n    if (this.expLabel === 'Add Derived Zero Expressions') {\r\n      this.expressionName = 'Derived'\r\n      this.addDerivedZeroExpression();\r\n    }\r\n  }\r\n  deleteFormula(index) {\r\n    this.formulaSets.splice(index, 1);\r\n  }\r\n\r\n  goToPeer(event) {\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n    this.company = null;\r\n    if (this.companyName != undefined && this.companyName.length > 15) {\r\n      this.company = this.companyName.substr(0, this.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.division = peer[0].division;\r\n      this.sector = peer[0].sector;\r\n      this.divSector = peer[0].division + ' -> ' + peer[0].sector;\r\n      this.divSectorChange(this.divSector)\r\n      this.industry = peer[0].sic + '-' + peer[0].industry;\r\n      this.processIndustryChange(this.industry);\r\n      this.filerCategory = peer[0].filerCategory;\r\n      this.processfilCatChange(this.filerCategory);\r\n      this.filterRadio = 'group';\r\n    } else {\r\n      window.scroll(0, 0);\r\n      this.errorMsg = 'Please Select Company';\r\n      this.showError = true;\r\n    }\r\n  }\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    this.toHighlight = event.query;\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i];\r\n      if ((cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.toLowerCase().includes(event.query.toLowerCase()))) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchIndustry(event) {\r\n    this.filteredindustry = [];\r\n    for (let i = 0; i < this.industryList.length; i++) {\r\n      let cname: string = this.industryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredindustry.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchDivisionSector(event) {\r\n    this.filtereddivSector = [];\r\n    this.toHighlight = event.query;\r\n    for (let i = 0; i < this.divSectorList.length; i++) {\r\n      let cname: string = this.divSectorList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filtereddivSector.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  derivedDivisionSeleted(event) {\r\n    this.deriveddivSector;\r\n    console.log(event.value);\r\n    if (event.value) {\r\n      var division = event.value.substr(0, event.value.indexOf('->') - 1);\r\n      var sector = event.value.substr(event.value.indexOf('->') + 3, event.value.length);\r\n      this.setExcDivSec(division, sector);\r\n    }\r\n  }\r\n\r\n  industryChanged(event) {\r\n    console.log(event.value);\r\n    var sic = event.value.substr(0, 4)\r\n    var completeEntities = this.completeEntities.filter(obj => obj.sic === sic);\r\n    this.industryCount = completeEntities.length\r\n    this.categoryCount = completeEntities.length;\r\n  }\r\n\r\n\r\n  searchFilerCategory(event) {\r\n    this.filteredfilerCategory = [];\r\n    for (let i = 0; i < this.filerCategoryList.length; i++) {\r\n      let cname: string = this.filerCategoryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredfilerCategory.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  quaterlyChange($event){\r\n    this.quaterly = $event;\r\n    sessionStorage.setItem('home.quaterly', JSON.stringify(this.quaterly));\r\n  }\r\n\r\n  searchTermNames(event) {\r\n    this.formulaFilteredTerms = [];\r\n    this.toHighlight = event.query;\r\n    for (let i = 0; i < this.termRuleLists.length; i++) {\r\n      let cname: string = this.termRuleLists[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.formulaFilteredTerms.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  resetCoverage() {\r\n    this.companyName = undefined;\r\n    this.divSector = undefined;\r\n    this.filterRadio = undefined;\r\n    this.division = undefined;\r\n    this.sector = undefined;\r\n    this.industry = undefined;\r\n    this.resolvedRanks = undefined;\r\n    this.unResolvedRanks = undefined;\r\n    this.divisionCount = this.completeCompanyList.length;\r\n    this.industryCount = null;\r\n    this.categoryCount = null;\r\n    this.startYear = (new Date()).getFullYear() - 4;\r\n    this.endYear = (new Date()).getFullYear();\r\n    this.filerCategory = undefined;\r\n    this.entityList = [];\r\n    this.showTermResultsWindow = [];\r\n    this.showTermResultsWindowMinimize = [];\r\n    this.state = [];\r\n    this.chart = {};\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n\r\n    sessionStorage.removeItem('home.companyName');\r\n    sessionStorage.removeItem('home.divSector');\r\n    sessionStorage.removeItem('home.division');\r\n    sessionStorage.removeItem('home.industry');\r\n    sessionStorage.removeItem('home.sector');\r\n    sessionStorage.removeItem('home.filerCategory');\r\n    sessionStorage.removeItem('home.divisionCount');\r\n    sessionStorage.removeItem('home.industryCount');\r\n    sessionStorage.removeItem('home.categoryCount');\r\n\r\n  }\r\n  showResolved(isShow) {\r\n    this.showTermResultsWindow = [];\r\n    this.showTermResultsWindowMinimize = [];\r\n    this.entityList =[];\r\n    this.entitycols  = this.home.homeEntityCols();\r\n    let mp = new MappedEntity();\r\n    let url = '/api/UnMappedEntitiesForCriteria';\r\n    if (isShow) {\r\n      url = '/api/MappedEntitiesForCriteria';\r\n    } else {\r\n      this.selectResolvedRank = undefined;\r\n    }\r\n\r\n    //url = '/api/UnMappedEntitiesForCriteria';\r\n    mp.termRuleId = this.termId;\r\n    mp.minYear = this.startYear;\r\n    mp.maxYear = this.endYear;\r\n    this.showError = false;\r\n    var selectionData = this.companyName\r\n    if (this.filterRadio !== 'group' && selectionData != undefined && selectionData.length > 15) {\r\n      selectionData = selectionData.substring((selectionData.indexOf(\"(\") + 1), selectionData.indexOf(\")\"))\r\n      var entities = this.completeCompanyList.filter(obj => obj.entityId === selectionData);\r\n      var company = entities.length == 1 ? entities[0] : null;\r\n      if (!company) {\r\n        this.errorMsg = 'Please select a company, division->Sector or Filer Category before getting coverage statistics.';\r\n        this.showError = true;\r\n        window.scroll(0, 0);\r\n        return;\r\n      } else {\r\n        mp.entityId = company.entityId;\r\n      }\r\n    } if (this.filterRadio === 'group' && (this.divSector === undefined)) {\r\n      this.errorMsg = 'Please select a company, division->Sector or Filer Category before getting coverage statistics.';\r\n      this.showError = true;\r\n      window.scroll(0, 0);\r\n      return;\r\n    }\r\n    this.displayGetCoverage = true;\r\n    if ((this.companyName == undefined || this.companyName == null) && this.divSector != undefined) {\r\n      this.filterRadio = 'group';\r\n    }\r\n    if (this.filterRadio === 'group' && this.division != undefined && this.sector != undefined) {\r\n      mp.division = this.division;\r\n      mp.sector = this.sector;\r\n    } if (this.filterRadio === 'group' && this.divSector != '' && this.divSector != undefined) {\r\n      mp.division = this.divSector.substr(0, this.divSector.indexOf('->') - 1);\r\n      mp.sector = this.divSector.substr(this.divSector.indexOf('->') + 3, this.divSector.length);\r\n      mp.entityId = 'NULL';\r\n\r\n      mp.filerCategory = this.filerCategory;\r\n      mp.rankId = 0;\r\n\r\n    } else {\r\n\r\n      mp.division = \"settoinvalid\";\r\n      mp.sector = \"settoinvalid\";\r\n    } if (this.industry != undefined) {\r\n      mp.sic = this.industry.substr(0, 4);\r\n      mp.includeQuarterly = true;\r\n    } else {\r\n      mp.sic = 'NULL';\r\n      mp.filerCategory = 'NULL';\r\n      mp.includeQuarterly = this.quaterly;\r\n    }\r\n    if (this.selectResolvedRank) {\r\n      mp.rankId = Number(this.selectResolvedRank);\r\n    }\r\n    mp.includeQuarterly = this.quaterly;\r\n\r\n    this.homeService.getTermResults(this.termId, selectionData).subscribe(\r\n      (data) => {\r\n        data.forEach(obj => {\r\n          if (obj.FQ == 'FY') {\r\n            this.percent += 25;\r\n          }\r\n        });\r\n        if (this.percent > 100) {\r\n          this.percent = 100;\r\n        }\r\n        var percent = this.percent;\r\n      }\r\n    )\r\n    this.homeService.getMappedEntityList(mp, this.chartUrl).subscribe(\r\n      (response) => {\r\n        this.chartData = [];\r\n        this.resolvedRanks = [{ label: 'Show Resolved By Rank', value: null }];\r\n        this.unResolvedRanks = [{ label: 'Show UnResolved', value: null }];\r\n        // let ranks = {};\r\n        let unresolved = { label: 'Unresolved', value: response.unMappedEntityCount };\r\n        this.chartData.push(unresolved);\r\n        response.resultsByRank.forEach(obj => {\r\n          // var name = { label: obj, value: obj };\r\n          // ranks = { label: 'Rank ' + obj.rankId + ' (' + obj.nonDistinctMappedEntityCount + ')', value: obj.mappedEntityCount };\r\n          // const name = { label: obj, value: obj };\r\n\r\n          const ranks = { label: 'Rank ' + obj.rankId, value: obj.mappedEntityCount };\r\n          const chart = { label: 'Rank ' + obj.rankId + ' (' + obj.mappedEntityCount + ') ' + (obj.mappedEntityCount / response.totalEntityCount * 100).toFixed(2) + '%', value: obj.rankId };\r\n          this.resolvedRanks.push(chart);\r\n          if (ranks.value != 0) {\r\n            this.chartData.push(ranks);\r\n          }\r\n\r\n        })\r\n        var percent = this.percent;\r\n        this.totalEntityCount = response.totalEntityCount;\r\n        this.getChartData(this.chartData);\r\n      })\r\n    this.homeService.getMappedEntityList(mp, url).subscribe(\r\n      (response) => {\r\n        this.entityList = response;\r\n        if (this.entityList.length > 0) {\r\n          this.entityList.forEach(() => {\r\n            this.showTermResultsWindow.push(false);\r\n            this.showTermResultsWindowMinimize.push(false);\r\n            this.state.push({});\r\n            this.minimizeArray.push(null);\r\n          });\r\n        } else {\r\n          this.showTermResultsWindow = [];\r\n          this.showTermResultsWindowMinimize = [];\r\n          this.state = [];\r\n        }if(!isShow) {\r\n          this.resolvedRanks = this.unResolvedRanks;\r\n          this.entitycols.splice(2,1);\r\n        }\r\n          this.entityList.forEach(obj => {\r\n            obj.show = true;\r\n          })\r\n        // }\r\n      })\r\n  }\r\n\r\n  showNotResolved() {\r\n    this.displayGetCoverage = true;\r\n  }\r\n\r\n  getChartData(data: any) {\r\n    this.chart = data;\r\n  }\r\n  getFormulaSuffix(formula) {\r\n\r\n    if (formula.nullable && formula.nullable === true) {\r\n      return \"=0 \" + formula.operation;\r\n    }\r\n    return formula.operation;\r\n  }\r\n\r\n  showTermResultnavigate(event, data) {\r\n    console.log(data)\r\n\r\n    if (data !== undefined) {\r\n      console.log('selected: ' + data);\r\n      event.preventDefault();\r\n      var term = this.getTermIdFromTermName(data)\r\n      this.termId = term;\r\n      this.displayTerms = true;\r\n      this.displayGetCoverage = false;\r\n      this.entitycols = this.home.homeEntityCols();\r\n      this.getTermBasedOnId(term);\r\n      console.log(term)\r\n    }\r\n  }\r\n\r\n  showTermResults(data) {\r\n    const index = this.entityList.findIndex(item => (item.entityId === data.entityId) && (item.companyName === data.companyName));\r\n    this.state[index] = {\r\n      termName: this.termCode,\r\n      entityId: data.entityId,\r\n      companyName: data.companyName\r\n    };\r\n    this.showTermResultsWindow[index] = true;\r\n    this.showTermResultsWindowMinimize[index] = false;\r\n  }\r\n\r\n  openFSQVLink(data) {\r\n    let linkUrl: string = \"https://sp-us-deraodp01.ix.sec.gov:18443/fsqv-solr/filingSearchSolr?refresh=1&cik=\";\r\n    let cik: string = data.cik;\r\n    this.utilService.getProfileId().subscribe((response) => {\r\n      if (response) {\r\n        let profileId: string = response.text();\r\n        if ( profileId === 'ci') {\r\n          linkUrl = \"https://sp-us-deraodp01.ix.sec.gov:18443/fsqv-solr/filingSearchSolr?refresh=1&cik=\" + cik;\r\n        } else if ( profileId === 'prod' ) {\r\n          linkUrl = \"https://md-up-webidap.ix.sec.gov:18443/fsqv-solr/filingSearchSolr?refresh=1&cik=\" + cik;\r\n        }\r\n        window.open(linkUrl, \"_blank\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getTermIdOrEntityName(inputValue: string): string {\r\n    let outputValue: string = inputValue.substring((inputValue.indexOf(\"(\") + 1), inputValue.indexOf(\")\"));\r\n    return outputValue;\r\n  }\r\n\r\n  getTermIdFromTermName(termName) {\r\n\r\n    for (var i = 0; i < this.termRulesList.length; i++) {\r\n      var termRule = this.termRulesList[i];\r\n      if (termRule.name === termName) {\r\n        return termRule.termId;\r\n      }\r\n\r\n    }\r\n    return \"LSE\";\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  moveRankBy(index, amount) {\r\n    this.msgs = [];\r\n    let e1 = Object.assign(this.expressionList[index])\r\n    let e2 = Object.assign(this.expressionList[index + amount])\r\n\r\n\r\n    console.log(\"e1:\" + e1);\r\n    console.log(\"e2:\" + e2);\r\n\r\n    console.log(e1.rank + \" will be moved to \" + e2.rank);\r\n    e2.rank = index + 1;\r\n    e1.rank = index + amount + 1;\r\n    this.expressionList[index] = e2;\r\n    this.expressionList[index + amount] = e1;\r\n\r\n    //utilService.saveTerm(\"Expression Rank \" + e2.rank + \" moved to \" + e1.rank);\r\n    // updateExpressionTableParams(rule);\r\n\r\n  };\r\n\r\n  addTerm() {\r\n    this.showError = false;\r\n    this.msgs = [];\r\n    this.newTerm = true;\r\n    this.refresh();\r\n    this.definition = '';\r\n    this.termCode = '';\r\n    this.termName = '';\r\n    this.periodType = { name: '' };\r\n    this.type = { name: '' };\r\n    this.incAccuTest = false;\r\n    this.finStatement = { financialStatement: '' };\r\n    this.priorgroup = { name: '' };\r\n    this.processingOrder = '';\r\n    this.termRule = this.rule;\r\n    this.expressionList = [];\r\n    this.validationList = [];\r\n    this.indOvrrideList = [];\r\n    this.dervdZroExpList = [];\r\n    this.expTableList = [];\r\n    this.displayTerms = false;\r\n\r\n  }\r\n  processTermnow() {\r\n    this.refresh();\r\n    this.enableTermButton = false;\r\n    this.enableTermCode = true;\r\n    this.processnow = true;\r\n    if (this.divisionCount === 0) {\r\n      this.divisionCount = this.completeCompanyList.length;\r\n    }\r\n    this.enableTermCode = true;\r\n    this.displayTerms = true;\r\n    this.displayGetCoverage = true;\r\n    if (this.termCode != '') {\r\n      this.enableTermButton = false;\r\n    }\r\n\r\n  }\r\n\r\n  divSectorChange(event) {\r\n    this.divSector = event;\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    // event = event.value ? event.value : event;\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    this.filerCategory = undefined;\r\n    this.industry = undefined;\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    this.industryCount = this.completeEntities.length;\r\n    this.categoryCount = this.completeEntities.length;\r\n\r\n    //sessionStorage.setItem('home.completeEntities', JSON.stringify(this.completeEntities));\r\n    sessionStorage.setItem('home.filteredindustry', JSON.stringify(this.filteredindustry));\r\n    sessionStorage.setItem('home.division', this.division);\r\n    sessionStorage.setItem('home.sector', this.sector);\r\n    sessionStorage.setItem('home.divSector', this.divSector);\r\n    sessionStorage.setItem('home.divisionCount', JSON.stringify(this.divisionCount));\r\n    sessionStorage.setItem('home.industryCount', JSON.stringify(this.industryCount));\r\n    sessionStorage.setItem('home.categoryCount', JSON.stringify(this.categoryCount));\r\n\r\n  }\r\n  processIndustryChange(event) {\r\n    // event = event.value ? event.value : null;\r\n    if (event != null) {\r\n      this.industry = event;\r\n      this.filerCategory = undefined;\r\n      event = event.substring(0, 4);\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n      this.industryCount = completeEntities.length;\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      this.industryCount = this.divisionCount;\r\n      this.categoryCount = this.divisionCount;\r\n    }\r\n    sessionStorage.setItem('home.industry', this.industry);\r\n    //sessionStorage.setItem('home.completeEntities', JSON.stringify(this.completeEntities));\r\n    sessionStorage.setItem('home.industryCount', JSON.stringify(this.industryCount));\r\n    sessionStorage.setItem('home.categoryCount', JSON.stringify(this.categoryCount));\r\n  }\r\n\r\n  processfilCatChange(event) {\r\n    // event = event.value ? event.value : null;\r\n    if (event != null) {\r\n      this.filerCategory = event;\r\n      var completeEntities = this.completeEntities.filter(obj =>\r\n        obj.filerCategory === event && obj.sic === this.industry.substr(0, 4));\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      this.categoryCount = null;\r\n    }\r\n    sessionStorage.setItem('home.filerCategory', this.filerCategory);\r\n    //sessionStorage.setItem('home.completeEntities', JSON.stringify(this.completeEntities));\r\n    sessionStorage.setItem('home.categoryCount', JSON.stringify(this.categoryCount));\r\n  }\r\n\r\n\r\n  processNow() {\r\n    this.refresh();\r\n    this.enableTermButton = false;\r\n    this.enableTermCode = true;\r\n    if (this.companyName && this.divSector && this.division && this.sector) {\r\n      this.processTermRule();\r\n      window.scroll(0, 0);\r\n      return;\r\n    } else {\r\n\r\n      this.confirmationService.confirm({\r\n        message: 'Are you sure you want to process all entities for the selected term?',\r\n        header: 'Processing Term Rule ' + this.termId,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          //this.msgs = [{severity:'info', summary:'Process Term', detail:'Process Term'}];\r\n          this.processTermRule();\r\n\r\n        },\r\n        reject: () => {\r\n          //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n        }\r\n      });\r\n    }\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  removeTerm() {\r\n    this.refresh();\r\n    this.enableTermButton = false;\r\n    this.enableTermCode = true;\r\n    this.confirmationService.confirm({\r\n      message: 'Term Rule will be removed, are you sure?',\r\n      header: 'Remove Rule ' + this.termCode,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n\r\n        this.utilService.removeTerm(this.termCode).subscribe((response) => {\r\n          if (response.errorMessage) {\r\n            this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: response.errorMessage }];\r\n          } else {\r\n            this.msgs = [{ severity: 'info', summary: '', detail: 'Term Rule Removed' }];\r\n            this.ngOnInit();\r\n          }\r\n          console.log(\"Remove Term  completed \")\r\n          this.selectedTerm = null;\r\n          this.termTree = [];\r\n          this.getRuleList();\r\n        },\r\n          (error) => console.log(error)\r\n        )\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  saveTerm() {\r\n    this.showError = false;\r\n    if (!this.newTerm && this.termRule.termId != '') {\r\n      this.termRule.expressions = this.expressionList;\r\n    }\r\n    this.termRule.termId = this.termCode;\r\n    this.termRule.name = this.termName\r\n    this.termRule.description = this.definition;\r\n    this.termRule.includeInAccuracyTests = this.incAccuTest;\r\n    if (this.periodType.name === '') {\r\n      this.termRule.periodType = null;\r\n    } else {\r\n      this.termRule.periodType = this.periodType.name;\r\n\r\n    }\r\n    if (this.type.name === '') {\r\n      this.termRule.type = null;\r\n    } else {\r\n      this.termRule.type = this.type.name;\r\n\r\n    }\r\n    if (this.finStatement.financialStatement === '') {\r\n      this.termRule.financialStatement = null;\r\n    } else {\r\n      this.termRule.financialStatement = this.finStatement.financialStatement;\r\n\r\n    }\r\n    if (this.priorgroup.name === '') {\r\n      this.termRule.priorityGroup = null;\r\n    } else {\r\n      this.termRule.priorityGroup = this.priorgroup.name;\r\n\r\n    }\r\n\r\n    this.utilService.saveTerm(this.termRule).subscribe((response) => {\r\n      console.log(\"Save Term  completed \")\r\n      this.msgs = [{ severity: 'info', summary: 'Term', detail: this.termRule.termId + ' saved successfully' }];\r\n      this.termTree = [];\r\n      this.getRuleList();\r\n      if(this.expressionName === 'Expression') {\r\n        this.getTermBasedOnId(this.termId);\r\n      }\r\n      //return;\r\n    },\r\n      (error) => {\r\n        console.log(error)\r\n        this.msgs = [{ severity: 'danger', summary: 'Term Rule Save Failed' }];\r\n        return;\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n  refresh() {\r\n    this.processnow = false;\r\n    this.msgs = [];\r\n    // this.displayTerms = false;\r\n    // this.displayGetCoverage = false;\r\n    this.showError = false;\r\n    this.enableTermButton = true;\r\n    this.enableTermCode = false;\r\n\r\n  }\r\n  processTermRule() {\r\n    console.log(\"process Rule : \" + JSON.stringify(this.termId));\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: 'Started processing for ' + this.termName, detail: '' }];\r\n    if (this.divSector && this.filerCategory && this.industry) {\r\n      var sic = \"NULL\";\r\n      if (this.industry) {\r\n        sic = this.industry.substr(0, this.industry.indexOf('-'));\r\n      }\r\n      var filerCategory = \"NULL\";\r\n      if (this.filerCategory) {\r\n        filerCategory = this.filerCategory;\r\n      }\r\n      var division = \"NULL\";\r\n      var sector = \"NULL\";\r\n      if (this.divSector) {\r\n        division = this.divSector.substr(0, this.divSector.indexOf('->') - 1);\r\n        sector = this.divSector.substr(this.divSector.indexOf('->') + 3, this.divSector.length);\r\n\r\n      }\r\n      this.utilService.processTermForCriteria(this.termCode, division, sector, sic, filerCategory).subscribe((response) => {\r\n        if (!response.data) {\r\n          window.scroll(0, 0);\r\n          this.msgs = [{ severity: 'info', summary: 'Term processing for' + this.termName, detail: ' processed successfully' }];\r\n          this.progressSpinner = false;\r\n\r\n        } else {\r\n          window.scroll(0, 0);\r\n          this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed' + this.termName, detail: '' }];\r\n          this.progressSpinner = false;\r\n\r\n        }\r\n      }, function (err) {\r\n      }\r\n      );\r\n    } else {\r\n      if (this.isAdminUser) {\r\n        //we can allow admin users to process all entities for a given term....\r\n        this.processTermRuleAdmin();\r\n        return;\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Please select a division->Sector or Filer Category before processing Term Rule.', detail: '' }];\r\n        this.progressSpinner = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    // adminProcessAllTermsClicked('#processTermForCriteria');\r\n\r\n\r\n  };\r\n\r\n  processTermRuleAdmin() {\r\n    this.utilService.processTerm(this.termRule).subscribe((response) => {\r\n      if (!response.data) {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Term processing for ' + this.termName, detail: 'processed successfully' }];\r\n        this.progressSpinner = false;\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed for ' + this.termName, detail: ' ' }];\r\n        this.progressSpinner = false;\r\n      }\r\n    }, function (err) {\r\n    }\r\n    );\r\n\r\n  }\r\n\r\n  filterConceptMatch(event) {\r\n    this.toHighlight = event.query;\r\n    this.conceptMatch(event.query)\r\n  }\r\n\r\n  conceptMatch(q: string) {\r\n    this.utilService.getTaxonomyElements(q, false).subscribe((response) => {\r\n      this.filteredconcMat = response;\r\n    })\r\n  }\r\n\r\n  OnExpressionAxisTypeChanged(index) {\r\n    var expSet = this.expressionSets[index];\r\n    if (this.expressionSets[index].axisType === \"ExactMatch\") {\r\n      this.expressionSets[index].axisInclusionListAsString = \"\";\r\n      this.expressionSets[index].axisExclusionListAsString = \"\";\r\n      this.expressionSets[index].axisInclusionList = [];\r\n      this.expressionSets[index].axisExclusionList = [];\r\n    } else {\r\n      this.expressionSets[index].axisName = \"\";\r\n    }\r\n    //this.expressionSets[index] = expSet;\r\n  };\r\n\r\n  OnExpressionMemberTypeChanged(index) {\r\n\r\n    var expSet = this.expressionSets[index];\r\n\r\n    if (this.expressionSets[index].memberType === \"Any\") {\r\n      this.expressionSets[index].memberName = \"\";\r\n      this.expressionSets[index].memberInclusionListAsString = \"\";\r\n      this.expressionSets[index].memberExclusionListAsString = \"\";\r\n      this.expressionSets[index].memberInclusionList = [];\r\n      this.expressionSets[index].memberExclusionList = [];\r\n    } else if (this.expressionSets[index].memberType === \"ExactMatch\") {\r\n      this.expressionSets[index].memberInclusionListAsString = \"\";\r\n      this.expressionSets[index].memberExclusionListAsString = \"\";\r\n      this.expressionSets[index].memberInclusionList = [];\r\n      this.expressionSets[index].memberExclusionList = [];\r\n    } else {\r\n      this.expressionSets[index].memberName = \"\";\r\n    }\r\n  };\r\n\r\n  buildListFromString(listAsString) {\r\n    return this.splitTextToArray(listAsString, \"\\n\");\r\n  };\r\n\r\n  splitTextToArray(textData, spliter) {\r\n    //console.log(\"TextArea to array : \" + textData + \", splitter : \" + spliter);\r\n    var strArray = [];\r\n    if (!textData) {\r\n      return strArray;\r\n    }\r\n    strArray = textData.toString().split(spliter);\r\n    //console.log(\"TextArea to array : result array: \" + JSON.stringify(strArray));\r\n    return strArray;\r\n  }\r\n\r\n  updateNameContains(nameContains) {\r\n    this.containsWords = this.splitTextToArray(nameContains, \"\\n\");\r\n\r\n  };\r\n\r\n  updateNameNotContains(nameNotContains) {\r\n    this.doesNotContainsWords = this.splitTextToArray(nameNotContains, \"\\n\");\r\n  };\r\n\r\n  resolve() {\r\n    // this.updateExpressionForEditFromTextArea();\r\n    var expressionObject: any = {};\r\n    expressionObject.type = this.expressionForEdit.type;\r\n    switch (this.expressionForEdit.type) {\r\n      case this.expressionTypes[2]:\r\n        {\r\n          expressionObject.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n          //extended check with dimension\r\n          expressionObject.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          expressionObject.axisExpression = dim.axisExpression;\r\n          expressionObject.memberExpression = dim.memberExpression;\r\n          break;\r\n        }\r\n    };\r\n\r\n    //console.log(\"resolve - : \" + JSON.stringify( expressionObject));\r\n\r\n    this.getExtendedEntityLookup(expressionObject);\r\n  };\r\n\r\n  getExtendedEntityLookup(expression) {\r\n    //console.log(\"extended entity lookup call with : \" + JSON.stringify(companiesFilter) + \", expression:\" + JSON.stringify(expression) + \",TOKEN: \" + this.csrfToken);\r\n\r\n    var query: any = {};\r\n    query.sic = this.industry.split('-')[0];\r\n    query.division = this.divSector.split(' -> ')[0];\r\n    query.sector = this.divSector.split(' -> ')[1];\r\n    query.filerCategory = this.filerCategory;\r\n    query.expression = expression;\r\n\r\n    this.utilService.extendedEntityLookup(query).subscribe((response) => {\r\n      this.extendedEntitiesLookup = response.data\r\n    })\r\n  };\r\n\r\n  updateAxes(axes) {\r\n    //console.log(\"updateAxes: \" + this.axes + \" - \" + axes);\r\n    this.namedAxisList = this.splitTextToArray(axes, '\\n');\r\n  };\r\n\r\n  updateAxesMembers(axesMembers) {\r\n    this.namedMemberList = this.splitTextToArray(axesMembers, \"\\n\");\r\n  };\r\n\r\n\r\n  arrayToExpression(arrayData, splitter, prefix, suffix) {\r\n    if (!prefix) {\r\n      prefix = \"\";\r\n    }\r\n    if (!suffix) {\r\n      suffix = \"\";\r\n    }\r\n    //console.log(\"arrayToExpression with spliter: \" + splitter + \",prefix: \" + prefix + \", suffix: \" + suffix);\r\n    var textData: any[];\r\n    if (!arrayData) {\r\n      return textData;\r\n    }\r\n    for (var i = 0; i < arrayData.length; i++) {\r\n      //\r\n      var elem = arrayData[i].trim();\r\n      //console.log(\"word from array : \" + elem);\r\n      if (elem.length > 0) {\r\n        if (i === 0) {\r\n          textData = this.surroundTextWith(elem, prefix, suffix, false);\r\n        } else {\r\n          textData = textData + splitter + this.surroundTextWith(elem, prefix, suffix, false);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    //console.log(\"arrayToExpression converted expression : \" + textData);\r\n    return textData;\r\n  };\r\n\r\n  surroundTextWith(str, prefix, suffix, check) {\r\n    //console.log(\"surround text \" + str + \" with \" + prefix + \" and \"+ suffix);\r\n    if (!check) {\r\n      str = prefix + str + suffix;\r\n    } else {\r\n      var patt1 = new RegExp(\"^\" + prefix);\r\n      var patt2 = new RegExp(suffix + \"$\");\r\n      if (!patt1.test(str)) {\r\n        str = prefix + str;\r\n      }\r\n      if (!patt2.test(str)) {\r\n        str = str + suffix;\r\n      }\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  addingExpression() {\r\n    this.expressionForEdit = {};\r\n    this.conceptMatchMultipleList = [];\r\n    this.conceptMatchMultiple = [];\r\n    this.concMatch = {};\r\n    this.index = 0;\r\n    this.isOverrideExpressionForEdit = false;\r\n    this.expressionForEdit.expression = \"\";\r\n\r\n    // this.expressionForEdit.type = this.expressionTypes[0];\r\n    this.expressionForEdit.type = this.expressionTypes[this.index];\r\n    this.expressionForEdit.NamedAxisList = [];\r\n    this.expressionForEdit.useVirtualParentNew = true;\r\n    this.expressionForEdit.useMaxAxisCount = false;\r\n    this.expressionForEdit.maxAxisCount = 2;\r\n    this.expressionForEdit.NamedMemberList = [];\r\n    this.expressionForEdit.dimensionExpressionSets = [];\r\n    this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    this.expressionForEdit.containsWords = [];\r\n    this.expressionForEdit.doesNotContainsWords = [];\r\n    this.conceptNameDefinition = \"\";\r\n    this.formulaSets = [];\r\n    this.expressionSets = [];\r\n    this.AddExpressionSet();\r\n    this.addAnotherConcept();\r\n    this.addAnotherFormula();\r\n    this.editExpression = true;\r\n  };\r\n\r\n  saveExpression() {\r\n    this.saveValues(this.expressionForEdit);\r\n    this.validationMessage = null;\r\n    this.showValidation = false;\r\n    if (!!this.formulaSets) {\r\n      for (var i = 0; i < this.formulaSets.length; i++) {\r\n        var formula = this.formulaSets[i];\r\n        if (this.formulaSets.length == 1 && formula.termName == \"\" && formula.nullable == false && formula.operation == \"\") {\r\n          break;\r\n        }\r\n        if (!formula.termName) {\r\n          this.validationMessage = 'Incomplete Formula\", \"Please complete Term Rule selection';\r\n          this.showValidation = true;\r\n          window.scroll(0, 0);\r\n          return;\r\n        } else {\r\n          if (i !== (this.formulaSets.length - 1) && !formula.operation) {\r\n            this.validationMessage = 'Incomplete Formula\", \"Please complete missing operation';\r\n            this.showValidation = true;\r\n            window.scroll(0, 0);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.expressionForEdit.type === this.expressionTypes[1]) {\r\n      if (this.validateDimensionalExpressions() === false)\r\n        return;\r\n    }\r\n\r\n    if (this.isOverrideExpressionForEdit) {\r\n      var overrideName = this.overrideName.name ? this.overrideName.name : this.overrideName;\r\n      if (!overrideName) {\r\n        this.validationMessage = 'Incomplete override information, Please provide an override name for the expression being added.';\r\n        this.showValidation = true;\r\n        this.addEditIndustry = true;\r\n      }\r\n      //verify that override name is populated...\r\n    }\r\n    switch (this.expressionForEdit.type) {\r\n\r\n      case this.expressionTypes[0]:\r\n        {\r\n          this.expressionForEdit.expression = this.getExpression();\r\n          this.expressionForEdit.conceptName = this.expressionForEdit.expression;\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[1]:\r\n        {\r\n          this.expressionForEdit.expression = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          this.expressionForEdit.conceptName = this.expressionForEdit.expression;\r\n\r\n\r\n          //cleanup old code...\r\n          this.expressionForEdit.axisExpression = null;\r\n          this.expressionForEdit.memberExpression = null;\r\n          this.expressionForEdit.NamedAxisList = null;\r\n          this.expressionForEdit.NamedMemberList = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[2]:\r\n        {\r\n          this.expressionForEdit.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n\r\n          //extended check with dimension\r\n          this.expressionForEdit.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          this.expressionForEdit.axisExpression = dim.axisExpression;\r\n          this.expressionForEdit.memberExpression = dim.memberExpression;\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[4]:\r\n        {\r\n          //formula\r\n          this.expressionForEdit.formulaList = this.formulaSets;\r\n          this.expressionForEdit.expression = this.getFormulaExpression(this.expressionForEdit);\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[5]:\r\n        {\r\n          //conceptmatchmultiple\r\n          this.expressionForEdit.expression = this.expressionForEdit.conceptMatchMultipleList.join(\"||\");\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n\r\n    }\r\n    if (this.isOverrideExpressionForEdit) {\r\n      this.updateOverrideFromUIToRule();\r\n    } else {\r\n      if (!this.expressionForEdit.rank) {\r\n        this.expressionForEdit.rank = this.termRule.expressions.length + 1;\r\n        this.termRule.expressions.push(this.expressionForEdit);\r\n      } else {\r\n        var index = this.expressionForEdit.rank - 1;\r\n        this.termRule.expressions[index] = this.expressionForEdit;\r\n      }\r\n    }\r\n    // this.activeExpressionTabIndex = this.isOverrideExpressionForEdit ? 2 : 0;\r\n    if (!this.showValidation) {\r\n      this.addEditIndustry = false;\r\n      this.editExpression = false;\r\n      this.addEditDerived = false;\r\n      this.saveTerm();\r\n    }\r\n\r\n    window.scroll(0, 0);\r\n    this.msgs = [{ severity: 'info', summary: 'Saved Expression successfully' }];\r\n\r\n  }\r\n\r\n  getExpression() {\r\n    var exprStr = \"\";\r\n    switch (this.expressionForEdit.type) {\r\n      case this.expressionTypes[0]:\r\n        {\r\n          if (this.concMatch.id === undefined) {\r\n            // this.concMatch.id = this.concMatch?;\r\n            if (this.concMatch.length !== undefined) {\r\n              const id = { id: this.concMatch };\r\n              this.concMatch = id;\r\n            }\r\n          }\r\n          if (!this.concMatch.id) {\r\n            this.showValidation = true;\r\n            this.validationMessage = 'Concept Name is required.';\r\n            return;\r\n\r\n\r\n          }\r\n          exprStr = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          break;\r\n        }\r\n      case this.expressionTypes[1]:\r\n        {\r\n          if (!this.concMatch.id) {\r\n            return;\r\n\r\n          }\r\n          exprStr = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          exprStr = exprStr + \", axisExpression:\" + dim.axisExpression + \", memberExpression:\" + dim.memberExpression;\r\n\r\n\r\n          break;\r\n        }\r\n      case this.expressionTypes[2]:\r\n        {\r\n          exprStr = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n          exprStr = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          exprStr = exprStr + \", axisExpression:\" + dim.axisExpression + \", memberExpression:\" + dim.memberExpression;\r\n          break;\r\n        }\r\n      case this.expressionTypes[4]:\r\n        {\r\n\r\n          exprStr = this.getFormulaExpression(this.expressionForEdit);\r\n          break;\r\n        }\r\n      case this.expressionTypes[5]:\r\n        {\r\n\r\n          exprStr = this.expressionForEdit.conceptMatchMultipleList.join(\"||\");\r\n          break;\r\n        }\r\n\r\n\r\n    }\r\n    return exprStr;\r\n  }\r\n  getFormulaExpression = function (expr) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < expr.formulaList.length; i++) {\r\n      var formula = expr.formulaList[i];\r\n      if (!formula) {\r\n        continue;\r\n      }\r\n      var term = \"sec:\" + formula.termName;\r\n      if (!term) {\r\n        continue;\r\n      }\r\n      if (formula.nullable) {\r\n        term = term + \"=0\";\r\n      }\r\n      exprStr = exprStr + this.surroundTextWith(term, \"{\", \"}\", true);\r\n      if (expr.formulaList[i+1] != undefined && formula.operation) {\r\n        var operation = formula.operation.name ? formula.operation.name : formula.operation;\r\n        exprStr = exprStr + \" \" + operation;\r\n      }\r\n\r\n    }\r\n    return exprStr;\r\n  }\r\n\r\n  saveValues(expression) {\r\n    // Concept Match\r\n    if (this.concMatch) {\r\n      this.expressionForEdit.conceptName = this.concMatch.id !== undefined ? this.concMatch.id : null;\r\n    }\r\n    this.expressionForEdit.usePositiveValuesOnly = this.usePositiveFacts ? true : false;\r\n    this.expressionForEdit.useNegativeValuesOnly = this.useNegativeFacts ? true : false;\r\n    this.expressionForEdit.reverseNegativeValues = this.revNegativeFacts ? true : false;\r\n    this.expressionForEdit.virtualFactAxis = this.axis;\r\n    if (this.virtualFactMemberExclusions && this.virtualFactMemberExclusions[0] != null) {\r\n      // this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n      this.expressionForEdit.virtualFactMemberExclusionList.push(this.virtualFactMemberExclusions);\r\n    } else {\r\n      this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    }\r\n\r\n    // Concept Match With Dim\r\n    if (this.expressionSets) {\r\n      this.expressionForEdit.dimensionExpressionSets = []\r\n      this.expressionSets.forEach(obj => {\r\n        if (obj.memberInclusionListAsString) {\r\n          obj.memberInclusionList = []\r\n          obj.memberInclusionList.push(obj.memberInclusionListAsString);\r\n        }\r\n        if (obj.memberExclusionListAsString) {\r\n          obj.memberExclusionList = []\r\n          obj.memberExclusionList.push(obj.memberExclusionListAsString);\r\n        }\r\n        if (obj.axisExclusionListAsString) {\r\n          obj.axisExclusionList = []\r\n          obj.axisExclusionList.push(obj.axisExclusionListAsString);\r\n        }\r\n        if (obj.axisInclusionListAsString) {\r\n          obj.axisInclusionList = []\r\n          obj.axisInclusionList.push(obj.axisInclusionListAsString);\r\n        }\r\n      })\r\n      this.expressionForEdit.dimensionExpressionSets = this.expressionSets;\r\n    }\r\n\r\n\r\n    // Extended check\r\n    this.expressionForEdit.containsWords = this.containsWords;\r\n    this.expressionForEdit.doesNotContainsWords = this.doesNotContainsWords;\r\n    this.expressionForEdit.balType = this.balType !== undefined ? this.balType : null;\r\n    this.expressionForEdit.perType = this.perType !== undefined ? this.perType : null;\r\n    this.expressionForEdit.isShareItemType = this.isShareItemType !== undefined ? this.isShareItemType : null;\r\n\r\n\r\n    // Extended check with dim\r\n    this.expressionForEdit.NamedAxisList = this.splitTextToArray(this.axes, '\\n');\r\n    this.expressionForEdit.NamedMemberList = this.splitTextToArray(this.axesMembers, '\\n');\r\n\r\n    //Formula\r\n    this.formulaSets.forEach(obj => {\r\n      if(obj.operation !== null) {\r\n        obj.operation = obj.operation.name ? obj.operation.name : \"\";\r\n      }\r\n    })\r\n    this.expressionForEdit.formulaList = this.formulaSets;\r\n\r\n    if (this.formulaSets.length > 1) {\r\n      this.expressionForEdit.formulaList = [];\r\n      this.formulaSets.forEach(obj => {\r\n        var operation = \"\";\r\n        if(obj.operation != null) {\r\n          operation = obj.operation.name != undefined ? obj.operation.name : \"\"\r\n        }\r\n        var formula = { termName: obj.termName, nullable: obj.nullable, operation:  operation};\r\n\r\n        this.expressionForEdit.formulaList.push(formula);\r\n      })\r\n    }\r\n\r\n    //Concept Match Multiple\r\n    if (this.conceptMatchMultiple[0] != \"\") {\r\n      this.expressionForEdit.conceptMatchMultipleList = [];\r\n      this.conceptMatchMultiple.forEach(obj => {\r\n\r\n        this.expressionForEdit.conceptMatchMultipleList.push(obj.id);\r\n      })\r\n    }\r\n  }\r\n\r\n  getExtendedCheckExpression = function (expression) {\r\n    //console.log(\"name contains expression:  \" + JSON.stringify(expression));\r\n    var exprStr = \"isExtended\";\r\n\r\n    var nameContainsExpr = this.arrayToExpression(expression.containsWords, \" && \", 'nameContains(', ')');\r\n    if (nameContainsExpr && nameContainsExpr.indexOf('nameContains') >= 0) {\r\n      exprStr = exprStr + \" && \" + nameContainsExpr;\r\n    }\r\n    //console.log(\"name contains expression:  \" + exprStr);\r\n\r\n    var notContainsExpr = this.arrayToExpression(expression.doesNotContainsWords, \" && \", 'nameNotContains(', ')');\r\n\r\n    if (notContainsExpr && notContainsExpr.indexOf('nameNotContains') >= 0) {\r\n      exprStr = exprStr + \" && \" + notContainsExpr;\r\n    }\r\n\r\n    //console.log(\"name not contains expression:  \" + exprStr);\r\n\r\n    if (expression.balType === this.balanceTypes[0]) {\r\n      exprStr = exprStr + \" && isDebit\";\r\n    }\r\n    if (expression.balType === this.balanceTypes[1]) {\r\n      exprStr = exprStr + \" && isCredit\";\r\n    }\r\n    if (expression.balType === this.balanceTypes[2]) {\r\n      exprStr = exprStr + \" && isNA\";\r\n    }\r\n    if (expression.perType === this.rulePeriodTypes[0]) {\r\n      exprStr = exprStr + \" && isInstant\";\r\n    }\r\n    if (expression.perType === this.rulePeriodTypes[1]) {\r\n      exprStr = exprStr + \" && isDuration\";\r\n    }\r\n    if (expression.isShareItemType) {\r\n      exprStr = exprStr + \" && isShareItemType\";\r\n    }\r\n\r\n    return exprStr;\r\n  };\r\n\r\n  getDimensionExpression = function (expression) {\r\n    var dim: any = {};\r\n    dim.memberExpression = this.arrayToExpression(expression.NamedMemberList, \" || \", \"{\", \"}\");\r\n    dim.axisExpression = this.arrayToExpression(expression.NamedAxisList, \" || \", \"{\", \"}\");\r\n    return dim;\r\n  };\r\n\r\n  validateDimensionalExpressions() {\r\n    if (this.expressionForEdit.dimensionExpressionSets == null ||\r\n      this.expressionForEdit.dimensionExpressionSets.length == 0) {\r\n      this.errorMsg = 'Incomplete Dimension\", \"Please specify dimensional information.';\r\n      this.showError = true;\r\n      window.scroll(0, 0);\r\n      return false;\r\n    }\r\n\r\n    this.expressionForEdit.dimensionExpressionSets.forEach(function (expSet) {\r\n\r\n      if (expSet.axisType === \"ExactMatch\") {\r\n        if (!expSet.axisName || expSet.axisName.length === 0) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Axis name for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      } else {\r\n        var hasData = false;\r\n        if (expSet.axisInclusionList && expSet.axisInclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n        if (expSet.axisExclusionList && expSet.axisExclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n\r\n        if (hasData === false) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Axis inclusion /exclusion data for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (expSet.memberType === \"ExactMatch\") {\r\n        if (!expSet.memberName || expSet.memberName.length === 0) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Member name for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      } else if (expSet.memberType === \"InclusionExclusionList\") {\r\n        var hasData = false;\r\n        if (expSet.memberInclusionList && expSet.memberInclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n        if (expSet.memberExclusionList && expSet.memberExclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n\r\n        if (hasData === false) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify member inclusion /exclusion data for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      }\r\n\r\n\r\n    });\r\n    return true;\r\n  }\r\n\r\n  deleteWithRank(index) {\r\n    if (this.expressionName === 'Expression')\r\n      this.deleteExpressions(index)\r\n    if (this.expressionName === 'Validation')\r\n      this.deleteValidation(index);\r\n    if (this.expressionName === 'Industry')\r\n      this.deleteIndustry(index);\r\n  };\r\n\r\n  deleteIndustry(index) {\r\n    var ind = index + 1\r\n    this.confirmationService.confirm({\r\n      message: 'Override Expression will be removed, are you sure?',\r\n      header: 'Delete Override Expression',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        var override = this.getOverride(this.selIndOvrdExpr.name);\r\n        if (override) {\r\n          override.expressions.splice(index, 1);\r\n          for (var j = 0; j < override.expressions.length; j++) {\r\n            override.expressions[j].rank = j + 1;\r\n          }\r\n        }\r\n        // this.termRule.overrides.push( override.expressions);\r\n        this.saveTerm();\r\n        this.expTableList = override.expressions;\r\n        window.scroll(0, 0);\r\n        this.msgs = [];\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Override Expression successfully' }];\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  deleteExpressions(index) {\r\n    var ind = index + 1\r\n    this.confirmationService.confirm({\r\n      message: 'Rank ' + ind + ' Expression will be removed, are you sure?',\r\n      header: 'Delete Expression',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.expressionList.splice(index, 1);\r\n        for (var i = 0; i < this.expressionList.length; i++) {\r\n          this.expressionList[i].rank = i + 1;\r\n        }\r\n        this.termRule.expressions = this.expressionList;\r\n\r\n        this.saveTerm();\r\n        this.expTableList = this.termRule.expressions;\r\n        window.scroll(0, 0);\r\n        this.msgs = [];\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Expression with rank ', detail: index + ' successfully' }];\r\n\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  addValidations() {\r\n    this.addEditValidation = true;\r\n    this.formulaSets = [];\r\n    this.addAnotherFormula();\r\n    this.addvalidation = true\r\n    //   if(!this.termRule.validationExpressions) {\r\n    //     this.termRule.validationExpressions = [];\r\n    // }\r\n    // this.validation = {};\r\n    // this.validation.rank = this.termRule.validationExpressions.length+1;\r\n    // this.validation.formulaList = [];\r\n    // this.validation.formulaList.push({});\r\n    // this.validation.expression = \"\";\r\n\r\n\r\n  }\r\n\r\n  saveRuleWithValidation() {\r\n    if (!this.checkFormulas()) {\r\n      this.validationMessage = \"Incomplete Validation entry found. Please complete before saving.\";\r\n      this.showValidation = true;\r\n      window.scroll(0, 0);\r\n      return;\r\n    };\r\n    let val: any = {};\r\n    if (this.addvalidation) {\r\n      if(this.termRule != null && this.termRule.validationExpressions === null) {\r\n        this.termRule.validationExpressions = [];\r\n      }\r\n      val.rank = this.termRule.validationExpressions.length + 1;\r\n      val.expression = this.convertFormulaToExpression(this.formulaSets);\r\n      this.termRule.validationExpressions[val.rank - 1] = val;\r\n    } else {\r\n      val.rank = this.validationRank;\r\n      val.expression = this.convertFormulaToExpression(this.formulaSets);\r\n      this.formulaSets = [];\r\n      this.termRule.validationExpressions[val.rank - 1] = val;\r\n    }\r\n\r\n\r\n    //this.activeExpressionTabIndex = 1;\r\n    this.saveTerm();\r\n    this.msgs = [];\r\n    window.scroll(0, 0);\r\n    this.msgs = [{ severity: 'info', summary: 'Saved Validation successfully' }];\r\n    this.validationList = [];\r\n    this.expTableList = []\r\n    this.termRule.validationExpressions.forEach(obj => {\r\n      obj.type = 'V';\r\n      this.validationList.push(obj);\r\n    })\r\n    this.expTableList = this.validationList;\r\n  }\r\n  checkFormulas = function () {\r\n    console.log(\"checking formulas add allowed\");\r\n    var allowAdd = true;\r\n    for (var x = 0; x < this.formulaSets.length; x++) {\r\n      var formula = this.formulaSets[x];\r\n      if (!formula.termName) {\r\n        console.log(\"failed validation: \" + JSON.stringify(formula));\r\n        allowAdd = false;\r\n        break;\r\n      } else {\r\n        if (x !== (this.formulaSets.length - 1) && !formula.operation) {\r\n          console.log(\"failed validation: \" + JSON.stringify(formula));\r\n          allowAdd = false;\r\n          break;\r\n        }\r\n      }\r\n      //|| !formula.operation\r\n    }\r\n    console.log(\"checking formulas add allowed: \" + allowAdd);\r\n    return allowAdd;\r\n  }\r\n  convertFormulaToExpression(formulaList) {\r\n    console.log(\"convertFormulaToExpression: \" + JSON.stringify(formulaList));\r\n    var expression = \"work in progress... available soon\";\r\n    expression = \"\";\r\n    for (var x = 0; x < formulaList.length; x++) {\r\n      var formula = formulaList[x];\r\n      if (!!formula.termName) {\r\n        expression = expression + \"{sec:\" + formula.termName;\r\n        if (!!formula.nullable) {\r\n          expression = expression + \"=0\";\r\n        }\r\n        expression = expression + \"}\";\r\n        if (!!formula.operation) {\r\n          expression = expression + formula.operation.name;\r\n        }\r\n      }\r\n    }\r\n\r\n    return expression;\r\n  }\r\n\r\n  getValidationExpression() {\r\n    this.validationExpression = this.convertFormulaToExpression(this.formulaSets);\r\n    this.validationRank = this.termRule.validationExpressions.length + 1\r\n\r\n  }\r\n\r\n  deleteValidation(index) {\r\n    var ind = index + 1;\r\n    this.confirmationService.confirm({\r\n      message: 'Rank ' + ind + ' validation will be removed, are you sure?',\r\n      header: 'Delete Validation',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.termRule.validationExpressions.splice(index, 1);\r\n        for (var i = 0; i < this.termRule.validationExpressions.length; i++) {\r\n          var elem = this.termRule.validationExpressions[i];\r\n          elem.rank = i + 1;\r\n        }\r\n        this.saveTerm();\r\n        this.expTableList = this.termRule.validationExpressions;\r\n        this.msgs = [];\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Validation with rank ', detail: ind + ' successfully' }];\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  addOverrideExpression() {\r\n    this.expressionForEdit = {};\r\n    this.expressionSets = [];\r\n    this.formulaSets = [];\r\n    this.AddExpressionSet();\r\n    this.addAnotherFormula();\r\n    this.overrideName = null;\r\n    this.mergeBaseExpressions = null;\r\n    this.overridecompanyName = null;\r\n    this.disableAxes = false;\r\n    this.disableMember = false;\r\n    this.disableAxesInc = true;\r\n    this.disableMemInc = true;\r\n    this.overrideForEdit = {};\r\n    this.mergeBaseExpressions = true;\r\n    // this.expressionForEdit.expression = \"\";\r\n    // this.expressionForEdit.type = this.expressionTypes[0];\r\n    // this.expressionForEdit.NamedAxisList = [];\r\n    // this.expressionForEdit.NamedMemberList = [];\r\n    // this.expressionForEdit.useVirtualParentNew = true;\r\n    // this.expressionForEdit.useMaxAxisCount = false;\r\n    // this.expressionForEdit.maxAxisCount = 2;\r\n    // this.expressionForEdit.dimensionExpressionSets = [];\r\n    // this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    // this.expressionForEdit.containsWords = [];\r\n    // this.expressionForEdit.doesNotContainsWords = [];\r\n    this.conceptNameDefinition = \"\";\r\n    this.showExpression = false;\r\n    this.addingExpression();\r\n    this.isOverrideExpressionForEdit = true;\r\n  };\r\n\r\n  editOverrideExpression(rowdata) {\r\n    this.entityOverrides = [];\r\n    var override = this.getOverride(this.selIndOvrdExpr.name);\r\n    this.overrideForEdit = {}\r\n    if (!override)\r\n      return;\r\n    this.expressionForEdit = override.expressions[rowdata.rank - 1];\r\n    this.overrideForEdit.name = override.name;\r\n    this.overrideForEdit.mergeBaseExpressions = override.mergeBaseExpressions;\r\n    this.overrideForEdit.origName = override.name;\r\n    this.overrideName = { name: override.name };\r\n    this.mergeBaseExpressions = override.mergeBaseExpressions;\r\n    if (override.entityOverrides[0] != null) {\r\n      this.setCurrentOverrideIndustryInformation(override);\r\n    } else {\r\n      this.entityOverrides = null;\r\n      this.addAnotherIndustryOverride();\r\n    }\r\n\r\n\r\n    this.isOverrideExpressionForEdit = true;\r\n    if (!this.expressionForEdit.type || this.expressionForEdit.type === 'na') {\r\n      this.expressionForEdit.type = this.expressionTypes[0];\r\n    }\r\n  };\r\n\r\n  setCurrentOverrideIndustryInformation(override) {\r\n\r\n    this.entityOverrides = [];\r\n    for (var j = 0; j < override.entityOverrides.length; j++) {\r\n      var entityOverride: any = {};\r\n\r\n      if (override.entityOverrides[j].entityId) {\r\n        var entity = this.completeCompanyList.filter(obj => obj.entityId === override.entityOverrides[j].entityId);\r\n        if (entity && entity.length > 0) {\r\n          entityOverride.entityname = entity[0].companyName + \"(\" + entity[0].entityId + \")\";\r\n        }\r\n      }\r\n      if (!entityOverride.entityname) {\r\n        entityOverride.overrideDivSec = this.divSector;\r\n      }\r\n      this.entityOverrides.push(entityOverride);\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addAnotherIndustryOverride() {\r\n\r\n    var overrideEntity = { divisionSector: \"\", entityname: \"\" };\r\n    if (!this.entityOverrides) {\r\n      this.entityOverrides = [];\r\n    }\r\n    this.entityOverrides.push(overrideEntity);\r\n  }\r\n\r\n  removeOverride = function (index) {\r\n    this.entityOverrides.splice(index, 1);\r\n  }\r\n\r\n  updateOverrideFromUIToRule() {\r\n    var overrideName = this.overrideName.name ? this.overrideName.name : this.overrideName;\r\n    var index = -1;\r\n    var existingExpressions = [];\r\n    if (!this.termRule.overrides) {\r\n      this.termRule.overrides = [];\r\n    }\r\n    for (var i = 0; i < this.termRule.overrides.length; i++) {\r\n      if (overrideName) {\r\n        if (overrideName === this.termRule.overrides[i].name) {\r\n          index = i;\r\n          existingExpressions = this.termRule.overrides[i].expressions;\r\n          break;\r\n        }\r\n      } else {\r\n        if (this.overrideForEdit.name === this.termRule.overrides[i].name) {\r\n          index = i;\r\n          existingExpressions = this.termRule.overrides[i].expressions;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var override: any = {};\r\n    override.name = overrideName;\r\n    override.mergeBaseExpressions = this.mergeBaseExpressions;\r\n    override.expressions = existingExpressions;\r\n    override.entityOverrides = [];\r\n    for (var i = 0; i < this.entityOverrides.length; i++) {\r\n      var indOverride: any = {};\r\n      if (this.entityOverrides[i].entityname) {\r\n        // entityOverride.overridecompanyName = entity[0].companyName.substr(0, entity[0].companyName.indexOf( '(');\r\n        // mp.division = this.divSector.substr(0,this.divSector.indexOf( '->')-1);\r\n        // mp.sector =  this.divSector.substr(this.divSector.indexOf( '->')+3, this.divSector.length);\r\n        indOverride.entityId = this.getCompanyIdFromName(this.entityOverrides[i].entityname.substr(0, this.entityOverrides[i].entityname.indexOf('(')));\r\n      } else {\r\n        if (this.entityOverrides[i].divisionSector) {\r\n          indOverride.division = this.entityOverrides[i].divisionSector.division;\r\n          indOverride.sector = this.entityOverrides[i].divisionSector.sector;\r\n        }\r\n      }\r\n      if (!indOverride.division && !indOverride.entityId) {\r\n        continue;\r\n      }\r\n\r\n      override.entityOverrides.push(indOverride);\r\n    }\r\n    if (this.expressionForEdit.rank) {\r\n\r\n      //console.log(\"Updating Expression array index : \" + index);\r\n      override.expressions[this.expressionForEdit.rank - 1] = this.expressionForEdit;\r\n    } else {\r\n      this.expressionForEdit.rank = override.expressions.length + 1;\r\n\r\n      override.expressions.push(this.expressionForEdit);\r\n    }\r\n\r\n    if (index < 0) {\r\n      this.termRule.overrides.push(override);\r\n    } else {\r\n      this.termRule.overrides[index] = override;\r\n    }\r\n  }\r\n\r\n  getCompanyIdFromName(input) {\r\n    var entities = this.completeCompanyList.filter(obj => obj.companyName === input);\r\n\r\n    if (entities.length > 0) {\r\n      return entities[0].entityId;\r\n    }\r\n\r\n    return null;\r\n  }\r\n  getOverride(overrideName) {\r\n    this.toHighlight = (overrideName && overrideName.query) ? overrideName.query : '';\r\n    if (overrideName && this.termRule.overrides) {\r\n      for (var i = 0; i < this.termRule.overrides.length; i++) {\r\n        if (this.termRule.overrides[i].name === overrideName) {\r\n          return this.termRule.overrides[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  deleteOverrideExpressionWithRank(selectedOverride, index) {\r\n    if (confirm(\"Override Expression will be removed, are you sure?\")) {\r\n\r\n      var override = this.getOverride(selectedOverride);\r\n\r\n      if (override) {\r\n        override.expressions.splice(index, 1);\r\n        for (var j = 0; j < override.expressions.length; j++) {\r\n          override.expressions[j].rank = j + 1;\r\n        }\r\n      }\r\n      this.saveTerm();\r\n    } else {\r\n    }\r\n\r\n  };\r\n\r\n  convertExpressionToFormula(expression) {\r\n    console.log(\"convertExpressionToFormula: \" + expression);\r\n    var parts = expression.split(\"{\");\r\n    this.formulaSets = [];\r\n    for (var i = 0; i < parts.length; i++) {\r\n      var part = parts[i];\r\n      if (!!part) {\r\n        var fields = part.split(\"}\");\r\n        if (fields.length > 0) {\r\n          var term = fields[0];\r\n          term = term.replace(\"sec:\", \"\");\r\n          var nullable = false;\r\n          if ((term.length - 2) === term.lastIndexOf(\"=0\")) {\r\n            nullable = true;\r\n          }\r\n          if (fields.length === 2) {\r\n            var operation = fields[1].trim();\r\n\r\n            term = term.replace(\"=0\", \"\");\r\n          }\r\n          this.formulaSets.push({ termName: term, nullable: nullable, operation: { name: operation } });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getCurrentOverrideDetails() {\r\n    var override = this.getOverride(this.overrideName.name);\r\n    if (override) {\r\n      this.setCurrentOverrideIndustryInformation(override);\r\n    }\r\n  };\r\n\r\n  getOverRides(event) {\r\n    this.companyovrRideList = [];\r\n    for (let i = 0; i < this.termRule.overrides.length; i++) {\r\n      let cname: string = this.termRule.overrides[i].name;\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.companyovrRideList.push({ name: cname });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeTextBlock(index) {\r\n    this.derivedZeroExpressionForEdit.textBlockList.splice(index, 1);\r\n  };\r\n  addAnotherTextBlock() {\r\n    var item = { expressionItem: \"\" };\r\n    this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n  };\r\n\r\n  addDerivedZeroExpression() {\r\n    this.addEditDerived = true;\r\n    this.derivedZeroExpressionForEdit = {};\r\n    this.activeExpressionTabIndex = 0;\r\n    this.derivedZeroExpressionForEdit.expression = \"\";\r\n    this.derivedZeroExpressionForEdit.type = this.derivedZeroTypes[0];\r\n    this.derivedZeroExpressionForEdit.textBlockList = [];\r\n    var item = { expressionItem: \"\" };\r\n    this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n    this.derivedZeroExpressionForEdit.depTermNameList = [];\r\n    this.derivedZeroExpressionForEdit.excTermNameList = [];\r\n    this.divisionCount = this.completeCompanyList.length;\r\n    this.addAnotherItem(false);\r\n    this.addAnotherItem(true);\r\n\r\n  };\r\n\r\n  editDerivedZeroExpression = function (index) {\r\n    this.activeExpressionTabIndex = 3;\r\n    this.derivedZeroExpressionForEdit = this.termRule.derivedZeroExpressions[index];\r\n  };\r\n\r\n  saveNewDerivedExpression() {\r\n\r\n    if (!this.termRule.derivedZeroExpressions) {\r\n      this.termRule.derivedZeroExpressions = [];\r\n    }\r\n\r\n    var derivedZeroExpression: any = {};\r\n    derivedZeroExpression.type = this.derivedZeroExpressionForEdit.type;\r\n    derivedZeroExpression.rank = this.derivedZeroExpressionForEdit.rank;\r\n    derivedZeroExpression.allTermsRequired = false;\r\n    switch (this.derivedZeroExpressionForEdit.type) {\r\n      case this.derivedZeroTypes[0]:\r\n        {\r\n          derivedZeroExpression.expression = this.getTextBlockExpression(this.derivedZeroExpressionForEdit.textBlockList);\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[1]:\r\n        {\r\n          derivedZeroExpression.allTermsRequired = this.derivedZeroExpressionForEdit.allTermsRequired;\r\n          var splitStr = derivedZeroExpression.allTermsRequired && derivedZeroExpression.allTermsRequired == true ? \"&&\" : \"||\";\r\n          derivedZeroExpression.expression = this.getTermExpression(this.derivedZeroExpressionForEdit.depTermNameList, splitStr);\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[2]:\r\n        {\r\n          derivedZeroExpression.expression = this.getTermExpression(this.derivedZeroExpressionForEdit.excTermNameList, \"||\");\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[3]:\r\n        {\r\n          var division = this.deriveddivSector.substr(0, this.deriveddivSector.indexOf('->') - 1);\r\n          var sector = this.deriveddivSector.substr(this.deriveddivSector.indexOf('->') + 3, this.deriveddivSector.length);\r\n          var sic = this.derivedindustry.substr(0, 4);\r\n          derivedZeroExpression.division = division;\r\n          derivedZeroExpression.sector = sector;\r\n          derivedZeroExpression.industry = sic;\r\n          derivedZeroExpression.expression = this.getExcludeIndustryExpression(derivedZeroExpression);\r\n          break;\r\n        }\r\n    }\r\n    ;\r\n\r\n    if (!derivedZeroExpression.rank) {\r\n\r\n      derivedZeroExpression.rank = this.termRule.derivedZeroExpressions.length + 1;\r\n\r\n\r\n      this.termRule.derivedZeroExpressions.push(derivedZeroExpression);\r\n    } else {\r\n      var index = this.derivedZeroExpressionForEdit.rank - 1;\r\n      //console.log(\"Updating Expression array index : \" + index);\r\n      this.termRule.derivedZeroExpressions[index] = derivedZeroExpression;\r\n    }\r\n    this.activeExpressionTabIndex = 3;\r\n    this.saveTerm();\r\n\r\n  }\r\n\r\n  onDerivedTabChange(event) {\r\n    this.activeExpressionTabIndex = event.index;\r\n    this.derivedZeroExpressionForEdit = [];\r\n    this.deriveddivSector = '';\r\n    this.derivedindustry = '';\r\n    this.filteredDerivedindustry = [];\r\n    // this.divisionCount =0;\r\n    // this.sectorCount = 0;\r\n    this.derivedZeroExpressionForEdit.type = this.derivedZeroTypes[this.activeExpressionTabIndex];\r\n    this.prepareDerivedZeroExpressionForEdit();\r\n  }\r\n\r\n\r\n  getTermExpression(tnList, splitStr) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < tnList.length; i++) {\r\n      var exp = tnList[i].expressionItem;\r\n      if (i === 0) {\r\n        exprStr = this.surroundTextWith(exp, \"{sec:\", \"}\", true);\r\n      } else {\r\n        exprStr = exprStr + splitStr + this.surroundTextWith(exp, \"{sec:\", \"}\", true);\r\n      }\r\n    }\r\n\r\n    return exprStr;\r\n  };\r\n  getExcludeIndustryExpression(derivedZeroExpression) {\r\n    var exp = \"\";\r\n    if (derivedZeroExpression.division) {\r\n\r\n      exp = derivedZeroExpression.division + \"->\" + derivedZeroExpression.sector;\r\n    }\r\n    if (derivedZeroExpression.industry) {\r\n      exp = exp + \" \" + derivedZeroExpression.industry;\r\n    }\r\n\r\n    return exp;\r\n  }\r\n\r\n  getTextBlockExpression(tnList) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < tnList.length; i++) {\r\n      var exp = tnList[i].expressionItem;\r\n      if (i === 0) {\r\n        exprStr = this.surroundTextWith(exp.id, \"{\", \"}\", true);\r\n      } else {\r\n        exprStr = exprStr + '||' + this.surroundTextWith(exp.id, \"{\", \"}\", true);\r\n      }\r\n    }\r\n\r\n    return exprStr;\r\n  }\r\n\r\n  addAnotherItem(isExclusion) {\r\n    var item = { expressionItem: \"\" };\r\n\r\n    if (isExclusion) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList.push(item);\r\n    } else {\r\n      this.derivedZeroExpressionForEdit.depTermNameList.push(item);\r\n    }\r\n\r\n    //console.log(this.derivedZeroExpressionForEdit.formulaList);\r\n  };\r\n  removeDerivedTerm(index, isExclusion) {\r\n\r\n    if (isExclusion) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList.splice(index, 1);\r\n    } else {\r\n      this.derivedZeroExpressionForEdit.depTermNameList.splice(index, 1);\r\n    }\r\n\r\n  }\r\n  prepareDerivedZeroExpressionForEdit() {\r\n\r\n    switch (this.derivedZeroExpressionForEdit.type) {\r\n      case this.derivedZeroTypes[0]:\r\n        {\r\n          this.setTextBlockExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[1]:\r\n        {\r\n          this.setDepTermExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[2]:\r\n        {\r\n          this.setExlTermExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[3]:\r\n        {\r\n          this.derivedRank = false;\r\n          this.divSectorList.forEach(obj => {\r\n            var name = { label: obj, value: obj };\r\n            this.filteredDeriveddivSectors.push(name)\r\n          });\r\n          this.setExcludeEntitiesExpression();\r\n          break;\r\n        }\r\n\r\n    }\r\n  }\r\n  setTextBlockExpression() {\r\n\r\n    // if (!this.derivedZeroExpressionForEdit.textBlockList) {\r\n    this.derivedZeroExpressionForEdit.textBlockList = [];\r\n    if (!this.derivedZeroExpressionForEdit.expression) {\r\n      this.filteredtext = [];\r\n      this.addAnotherTextBlock();\r\n\r\n    } else {\r\n\r\n      this.filteredtext = [];\r\n      var strArray = this.derivedZeroExpressionForEdit.expression.split(\"||\");\r\n      for (var i = 0; i < strArray.length; i++) {\r\n        var itemExpression = strArray[i]\r\n        itemExpression = itemExpression.replace(\"{\", \"\");\r\n        itemExpression = itemExpression.replace(\"}\", \"\");\r\n        var item = { 'expressionItem': itemExpression };\r\n\r\n        this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n        this.filteredtext.push(itemExpression);\r\n      }\r\n      //this.derivedZeroExpressionForEdit.expression = null;\r\n    }\r\n\r\n    // }\r\n  }\r\n  setDepTermExpression() {\r\n\r\n    // if (!this.derivedZeroExpressionForEdit.depTermNameList) {\r\n    this.derivedZeroExpressionForEdit.depTermNameList = [];\r\n    if (!this.derivedZeroExpressionForEdit.expression) {\r\n\r\n      this.addAnotherItem(false);\r\n\r\n    } else {\r\n\r\n      var splitStr = this.derivedZeroExpressionForEdit.allTermsRequired == true ? \"&&\" : \"||\";\r\n      var strArray = this.derivedZeroExpressionForEdit.expression.split(splitStr);\r\n      for (var i = 0; i < strArray.length; i++) {\r\n        var itemExpression = strArray[i]\r\n        itemExpression = itemExpression.replace(\"{sec:\", \"\");\r\n        itemExpression = itemExpression.replace(\"}\", \"\");\r\n        var item = { expressionItem: itemExpression };\r\n        this.derivedZeroExpressionForEdit.depTermNameList.push(item);\r\n      }\r\n      //this.derivedZeroExpressionForEdit.expression = null;\r\n\r\n    }\r\n\r\n    // }\r\n  }\r\n\r\n  setExlTermExpression() {\r\n\r\n    if (!this.derivedZeroExpressionForEdit.excTermNameList) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList = [];\r\n      if (!this.derivedZeroExpressionForEdit.expression) {\r\n\r\n        this.addAnotherItem(true);\r\n\r\n      } else {\r\n\r\n\r\n        var strArray = this.derivedZeroExpressionForEdit.expression.split(\"||\");\r\n        for (var i = 0; i < strArray.length; i++) {\r\n          var itemExpression = strArray[i]\r\n          itemExpression = itemExpression.replace(\"{sec:\", \"\");\r\n          itemExpression = itemExpression.replace(\"}\", \"\");\r\n          var item = { expressionItem: itemExpression };\r\n          this.derivedZeroExpressionForEdit.excTermNameList.push(item);\r\n        }\r\n        // this.derivedZeroExpressionForEdit.expression = null;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  setExcludeEntitiesExpression() {\r\n\r\n    if (this.derivedZeroExpressionForEdit.division && this.derivedZeroExpressionForEdit.sector) {\r\n      var divSec = {\r\n        \"division\": this.derivedZeroExpressionForEdit.division,\r\n        \"sector\": this.derivedZeroExpressionForEdit.sector\r\n      };\r\n      this.filteredDerivedindustry = []\r\n      this.setExcDivSec(this.derivedZeroExpressionForEdit.division, this.derivedZeroExpressionForEdit.sector);\r\n      if (this.derivedZeroExpressionForEdit.sector && this.derivedZeroExpressionForEdit.industry)\r\n        this.deriveddivSector = this.derivedZeroExpressionForEdit.division + ' -> ' + this.derivedZeroExpressionForEdit.sector;\r\n      this.filteredDerivedindustry.forEach(obj => {\r\n        var sic = obj.label.substr(0, 4);\r\n        if (sic === this.derivedZeroExpressionForEdit.industry) {\r\n          this.derivedindustry = obj.label;\r\n        }\r\n      })\r\n      // this.derivedindustry = this.derivedZeroExpressionForEdit.industry + ' - ' + this.derivedZeroExpressionForEdit.sector;\r\n\r\n      if (!this.excludeEntitiesFilter)\r\n        this.excludeEntitiesFilter = {};\r\n      this.excludeEntitiesFilter.sic = this.derivedZeroExpressionForEdit.industry;\r\n    }\r\n    else {\r\n      this.excludeEntitiesFilter = {};\r\n    }\r\n  }\r\n\r\n  setExcDivSec(division, sector) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredDerivedindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    if (this.derivedZeroExpressionForEdit.industry) {\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === this.derivedZeroExpressionForEdit.industry);\r\n      this.industryCount = completeEntities.length\r\n    }\r\n\r\n  }\r\n\r\n  processTermForEntity(rowdata) {\r\n    //console.log(\"Process rule \" + $scope.rule.termId + \" with token \" + $scope.csrfToken + \" for entity: \" + entityId);\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: 'Started processing for ' + this.termName, detail: '' }];\r\n    this.utilService.processTerms(this.termRule.termId, rowdata.entityId, null).subscribe((response) => {\r\n      if (!response.data) {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Term processing for' + this.termName, detail: ' processed successfully' }];\r\n        this.progressSpinner = false;\r\n\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed' + this.termName, detail: '' }];\r\n        this.progressSpinner = false;\r\n\r\n      }\r\n\r\n\r\n    }, function (err) {\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n  yearChange(event) {\r\n    this.startYear = this.range[0];\r\n    this.endYear = this.range[1];\r\n    sessionStorage.setItem('home.range', JSON.stringify(event.values));\r\n\r\n  }\r\n  selectedTreeNode = {};\r\n  showDerivationTree() {\r\n    this.homeService.getTermRule(this.termId).subscribe(\r\n      (response) => {\r\n        this.modalExpTableData = response;\r\n        this.modalExpTableList = response.expressions;\r\n\r\n        this.homeService.getRuleGraph(this.termId).subscribe(\r\n          (response) => {\r\n            this.derivationTreeRes = response;\r\n            response.forEach(item => {\r\n              item.name = item.name.replace(' ( - )', '').replace(' ( + )', '');\r\n            });\r\n\r\n            const newRes = [];\r\n\r\n            if (response.length > 0) {\r\n              newRes.push({\r\n                data: response.find(item => item.parent === null),\r\n                children: []\r\n              })\r\n            }\r\n\r\n            if (newRes && newRes.length > 0) {\r\n              newRes.forEach(eachItem => {\r\n                let result = response.filter(obj => {\r\n                  return obj.parent === eachItem.data.id\r\n                });\r\n                eachItem.data['hasChildren'] = result.length > 0 ? true : false;\r\n                result.forEach(item => {\r\n\r\n                  eachItem.children.push({\r\n                    data: item,\r\n                    children: []\r\n                  })\r\n                });\r\n\r\n                if (eachItem.children.length > 0) {\r\n                  eachItem.children.forEach(child1 => {\r\n                    let result = response.filter(obj => {\r\n                      return obj.parent === child1.data.id\r\n                    });\r\n                    child1.data['hasChildren'] = result.length > 0 ? true : false;\r\n                    result.forEach(newItem => {\r\n                      child1.children.push({\r\n                        data: newItem,\r\n                        children: []\r\n                      })\r\n                    });\r\n\r\n                    if (child1.children.length > 0) {\r\n                      child1.children.forEach(child2 => {\r\n                        let result = response.filter(obj => {\r\n                          return obj.parent === child2.data.id\r\n                        });\r\n                        child2.data['hasChildren'] = result.length > 0 ? true : false;\r\n                        result.forEach(newItem => {\r\n                          child2.children.push({\r\n                            data: newItem,\r\n                            children: []\r\n                          })\r\n                        });\r\n\r\n                        if (child2.children.length > 0) {\r\n                          child2.children.forEach(child3 => {\r\n                            let result = response.filter(obj => {\r\n                              return obj.parent === child3.data.id\r\n                            });\r\n                            child3.data['hasChildren'] = result.length > 0 ? true : false;\r\n                            result.forEach(newItem => {\r\n                              child3.children.push({\r\n                                data: newItem,\r\n                                children: []\r\n                              })\r\n                            });\r\n\r\n                            if (child3.children.length > 0) {\r\n                              child3.children.forEach(child4 => {\r\n                                let result = response.filter(obj => {\r\n                                  return obj.parent === child4.data.id\r\n                                });\r\n                                child4.data['hasChildren'] = result.length > 0 ? true : false;\r\n                                result.forEach(newItem => {\r\n                                  child4.children.push({\r\n                                    data: newItem,\r\n                                    children: []\r\n                                  })\r\n                                });\r\n                              });\r\n                            }\r\n                          });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                  });\r\n                }\r\n              });\r\n            }\r\n\r\n            this.treeData = { data: newRes };\r\n            this.displayTermTreeModal = true;\r\n          });\r\n\r\n      });\r\n  }\r\n\r\n\r\n  nodeUpdated(node: any) {\r\n    console.info(\"app detected node change\");\r\n  }\r\n  nodeSelected(node: any) {\r\n    if (!node.children) {\r\n      this.homeService.getTermRule(node.data.childId).subscribe(\r\n        (response) => {\r\n          this.modalExpTableList = response.expressions;\r\n        });\r\n    }\r\n  }\r\n\r\n  showTermRuleResultnavigateTree(event, data) {\r\n\r\n    if (data !== undefined) {\r\n      event.preventDefault();\r\n      let term = 'LSE';\r\n      if ((data && data.childId)) {\r\n        term = data.childId;\r\n      } else {\r\n        term = data.name;\r\n      }\r\n\r\n      this.selectedTreeNode = data;\r\n      this.homeService.getTermRule(term).subscribe(\r\n        (response) => {\r\n          this.modalExpTableData = response;\r\n          this.modalExpTableList = response.expressions;\r\n        }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  showTermRuleResultnavigate(event, data) {\r\n\r\n    if (data !== undefined) {\r\n      event.preventDefault();\r\n      var term = this.getTermIdFromTermName(data)\r\n      this.homeService.getTermRule(term).subscribe(\r\n        (response) => {\r\n          this.modalExpTableData = response;\r\n          this.modalExpTableList = response.expressions;\r\n        }\r\n      )\r\n    }\r\n  }\r\n  minimizeWidth;\r\n  minimizeModal(i) {\r\n    let minimizeCount = undefined;\r\n    let minimizeItems = 0;;\r\n    this.showTermResultsWindowMinimize[i] = true;\r\n\r\n    this.minimizeArray.forEach((item, index) => {\r\n      if (!item && (minimizeCount === undefined)) {\r\n        minimizeCount = index\r\n      }\r\n      if (item) {\r\n        minimizeItems = minimizeItems + 1\r\n      }\r\n    })\r\n    const defaultWidth = (window.innerWidth / (minimizeItems + 1));\r\n\r\n    for (let j = 0; j < this.entityList.length; j++) {\r\n      if (!this.minimizeArray[j]) {\r\n        this.minimizeArray[j] = this.entityList[i].id;\r\n        break;\r\n      }\r\n    }\r\n    // this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.left = (+(i.toString().slice(i.toString().length - 1, i.toString().length)) * 190) + 'px';\r\n    this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.left = (minimizeCount * 190) + 'px';\r\n    this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.transform = 'translate(0px, 0px)';\r\n    this.minimizeWidth = defaultWidth + 'px';\r\n  }\r\n\r\n  maximizeModal(i) {\r\n    this.showTermResultsWindowMinimize[i] = false;\r\n    const removeIndex = this.minimizeArray.findIndex(item => item === this.entityList[i].id);\r\n    this.minimizeArray[removeIndex] = null;\r\n    this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.left = '0px';\r\n    this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.transform = 'translate(0px, 0px)';\r\n    this.el.nativeElement.getElementsByClassName('modal' + i)[0].style.width = 'auto';\r\n  }\r\n\r\n  close(i) {\r\n    const removeIndex = this.minimizeArray.findIndex(item => item === this.entityList[i].id);\r\n    if (removeIndex > -1) {\r\n      this.minimizeArray[removeIndex] = null;\r\n    }\r\n    this.showTermResultsWindow[i] = false;\r\n    this.showTermResultsWindowMinimize[i] = false;\r\n  }\r\n  // Home page tour\r\n  stepDone() {\r\n    setTimeout(() => {\r\n      this.title = 'Tour Finished!';\r\n      this.tour = false;\r\n      this.termId = '';\r\n      this.displayTerms = false;\r\n      this.displayGetCoverage = false;\r\n      console.log('Step done!');\r\n    }, 3000);\r\n  }\r\n\r\n  startTour() {\r\n    const options = {\r\n      steps: [\r\n        'step1@home',\r\n        'step2@home',\r\n        'step3@home',\r\n        'step4@home',\r\n        'step5@home',\r\n        'step6@home',\r\n        'step7@home',\r\n        'step8@home',\r\n        'step9@home',\r\n        'step10@home',\r\n        'step11@home',\r\n        'step12@home',\r\n        'step13@home',\r\n        'step14@home',\r\n        'step15@home',\r\n        'step16@home',\r\n        'step17@home',\r\n        // 'step14@home',\r\n        // 'step15@home',\r\n        // 'step16@home',\r\n        // 'step17@home',\r\n        'step18@home',\r\n        'step19@home',\r\n        'step20@home',\r\n        'step21@home',\r\n        'step22@home',\r\n        'step23@home',\r\n        'step24@home',\r\n        'step25@home',\r\n\r\n      ],\r\n\r\n      // startWith: 'step3@app',\r\n      // waitingTime: 3000,\r\n      stepDefaultPosition: 'right',\r\n      themeColor: '#345632',\r\n      showPrevButton: true,\r\n      logsEnabled: false\r\n      // customTexts: { prev: of('<<').pipe(delay(2000)), next: '>>'}\r\n    };\r\n    this.joyrideService.startTour(options).subscribe(\r\n      step => {\r\n        console.log('Next:', step);\r\n        if (step.name === 'step13' || step.name === 'step14' || step.name === 'step15' || step.name === 'step16' || step.name === 'step17') {\r\n          this.processnow = true;\r\n        } else {\r\n          this.processnow = false;\r\n        }\r\n        if (step.name === 'step1') {\r\n          this.termId = 'SALE';\r\n          this.displayTerms = true;\r\n          this.displayGetCoverage = true;\r\n        }\r\n      },\r\n      e => {\r\n        console.log('Error', e);\r\n      },\r\n      () => {\r\n        this.stepDone();\r\n        // this.tour = false;\r\n        // this.termId = '';\r\n        //   this.displayTerms = false;\r\n        //   this.displayGetCoverage = false;\r\n        console.log('Tour finished');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'highlight' })\r\nexport class HighlightPipe implements PipeTransform {\r\n    transform(text: string, search): string {\r\n        if (search) {\r\n            const pattern = search\r\n                .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\r\n                .split(' ')\r\n                .filter(t => t.length > 0)\r\n                .join('|');\r\n            const regex = new RegExp(pattern, 'gi');\r\n\r\n            return (search && text) ? text.replace(regex, match => `<b class=\"bg-searched-latter\">${match}</b>`) :\r\n                text;\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n}","import { Directive, ElementRef, OnInit, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appResizable]'\r\n})\r\n\r\nexport class ResizableDirective implements OnInit {\r\n\r\n\r\n    @Input() resizableGrabWidth = 4;\r\n    @Input() resizableMinWidth = 4;\r\n\r\n    dragging = false;\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n        const self = this;\r\n\r\n        const EventListenerMode = { capture: true };\r\n\r\n        function preventGlobalMouseEvents() {\r\n            document.body.style['pointer-events'] = 'none';\r\n        }\r\n\r\n        function restoreGlobalMouseEvents() {\r\n            document.body.style['pointer-events'] = 'auto';\r\n        }\r\n\r\n\r\n        const newWidth = (wid) => {\r\n            const newWidth = Math.max(this.resizableMinWidth, wid);\r\n            el.nativeElement.style.width = (newWidth) + \"px\";\r\n        }\r\n\r\n\r\n        const mouseMoveG = (evt) => {\r\n            if (!this.dragging) {\r\n                return;\r\n            }\r\n            newWidth(evt.clientX - el.nativeElement.offsetLeft)\r\n            evt.stopPropagation();\r\n        };\r\n\r\n        const dragMoveG = (evt) => {\r\n            if (!this.dragging) {\r\n                return;\r\n            }\r\n            const newWidth = Math.max(this.resizableMinWidth, (evt.clientX - el.nativeElement.offsetLeft)) + \"px\";\r\n            el.nativeElement.style.width = (evt.clientX - el.nativeElement.offsetLeft) + \"px\";\r\n            evt.stopPropagation();\r\n        };\r\n\r\n        const mouseUpG = (evt) => {\r\n            if (!this.dragging) {\r\n                return;\r\n            }\r\n            restoreGlobalMouseEvents();\r\n            this.dragging = false;\r\n            evt.stopPropagation();\r\n        };\r\n\r\n        const mouseDown = (evt) => {\r\n            if (this.inDragRegion(evt)) {\r\n                this.dragging = true;\r\n                preventGlobalMouseEvents();\r\n                evt.stopPropagation();\r\n            }\r\n        };\r\n\r\n\r\n        const mouseMove = (evt) => {\r\n            if (this.inDragRegion(evt) || this.dragging) {\r\n                el.nativeElement.style.cursor = \"col-resize\";\r\n            } else {\r\n                el.nativeElement.style.cursor = \"default\";\r\n            }\r\n        }\r\n\r\n\r\n        document.addEventListener('mousemove', mouseMoveG, true);\r\n        document.addEventListener('mouseup', mouseUpG, true);\r\n        el.nativeElement.addEventListener('mousedown', mouseDown, true);\r\n        el.nativeElement.addEventListener('mousemove', mouseMove, true);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.el.nativeElement.style[\"border-right\"] = this.resizableGrabWidth + \"px solid darkgrey\";\r\n    }\r\n\r\n    inDragRegion(evt) {\r\n        return this.el.nativeElement.clientWidth - evt.clientX + this.el.nativeElement.offsetLeft < this.resizableGrabWidth;\r\n    }\r\n\r\n}","module.exports = \".menuItem{\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 20px;\\r\\n  margin-right: 20spx;\\r\\n  font-size: 20px;\\r\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n  color: whitesmoke;\\r\\n  \\r\\n\\r\\n}\\r\\n\\r\\n.dropdownMenuItem{\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n  margin-left: 10px;\\r\\n  margin-right: 10px;\\r\\n  font-size: 20px;\\r\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n  color: whitesmoke;\\r\\n}\\r\\n\\r\\n.welcome{\\r\\nfont-size: 20px;\\r\\nfont-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\ncolor: whitesmoke;\\r\\n}\\r\\n\\r\\n.navbar\\r\\n{\\r\\ncolor: blue;\\r\\n}\\r\\n\\r\\n::ng-deep .logo-name {\\r\\n  margin: 0px;;\\r\\n}\\r\\n\\r\\n::ng-deep .logo-name:hover {\\r\\n  text-decoration: none;\\r\\n\\r\\n}\\r\\n\\r\\n.notifictaion {\\r\\n  height: 20px;\\r\\n  width: 20px;\\r\\n  border-radius: 10px;\\r\\n  border: 1px solid transparent;\\r\\n  background-color: #ffffff;\\r\\n  position: relative;\\r\\n  right: 20px;\\r\\n  color: #000000;\\r\\n  display: inline-block;\\r\\n  text-align: center;\\r\\n  font-size: 14px;\\r\\n  bottom: 9px;\\r\\n  z-index: 5;\\r\\n}\\r\\n\\r\\n.onoffswitch {\\r\\n  display: inline-block;\\r\\n  position: relative; \\r\\n  width: 90px;\\r\\n  margin-top: 8px;\\r\\n    margin-left: 10px;\\r\\n  -webkit-user-select:none; -moz-user-select:none; -ms-user-select: none;\\r\\n}\\r\\n\\r\\n.onoffswitch-checkbox {\\r\\n  position: absolute;\\r\\n  opacity: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.onoffswitch-label {\\r\\n  display: block; overflow: hidden; cursor: pointer;\\r\\n  border: 2px solid #999999; border-radius: 20px;\\r\\n}\\r\\n\\r\\n.onoffswitch-inner {\\r\\n  display: block; width: 200%; margin-left: -100%;\\r\\n  transition: margin 0.3s ease-in 0s;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.onoffswitch-inner:before, .onoffswitch-inner:after {\\r\\n  display: block; float: left; width: 50%; height: 30px; padding: 0; line-height: 30px;\\r\\n  font-size: 14px; color: white; font-family: Trebuchet, Arial, sans-serif; font-weight: bold;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.onoffswitch-inner:before {\\r\\n  content: \\\"ON\\\";\\r\\n  padding-left: 10px;\\r\\n  background-color: #EDEFF0; color: #21579C;\\r\\n}\\r\\n\\r\\n.onoffswitch-inner:after {\\r\\n  content: \\\"OFF\\\";\\r\\n  padding-right: 10px;\\r\\n  background-color: #EEEEEE; color: #999999;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.onoffswitch-switch {\\r\\n  display: block; width: 18px; height: 18px; margin: 6px;\\r\\n  background: #21579C;\\r\\n  position: absolute; top: 2px; bottom: 0;\\r\\n  right: 56px;\\r\\n  border: 2px solid #999999; border-radius: 20px;\\r\\n  transition: all 0.3s ease-in 0s; \\r\\n}\\r\\n\\r\\n.onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {\\r\\n  margin-left: 0;\\r\\n}\\r\\n\\r\\n.onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\\r\\n  right: 0px; \\r\\n}\\r\\n\\r\\n.font-weight-bold {\\r\\n  font-weight: bold !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiw0REFBNEQ7RUFDNUQsaUJBQWlCOzs7QUFHbkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLDREQUE0RDtFQUM1RCxpQkFBaUI7QUFDbkI7O0FBRUE7QUFDQSxlQUFlO0FBQ2YsNERBQTREO0FBQzVELGlCQUFpQjtBQUNqQjs7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxxQkFBcUI7O0FBRXZCOztBQUNBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGNBQWM7RUFDZCxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixXQUFXO0VBQ1gsVUFBVTtBQUNaOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsZUFBZTtJQUNiLGlCQUFpQjtFQUNuQix3QkFBd0IsRUFBRSxxQkFBcUIsRUFBRSxxQkFBcUI7QUFDeEU7O0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLG9CQUFvQjtBQUN0Qjs7QUFDQTtFQUNFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlO0VBQ2pELHlCQUF5QixFQUFFLG1CQUFtQjtBQUNoRDs7QUFDQTtFQUNFLGNBQWMsRUFBRSxXQUFXLEVBQUUsa0JBQWtCO0VBQy9DLGtDQUFrQztFQUNsQyxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSxjQUFjLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLGlCQUFpQjtFQUNwRixlQUFlLEVBQUUsWUFBWSxFQUFFLHlDQUF5QyxFQUFFLGlCQUFpQjtFQUMzRixzQkFBc0I7QUFDeEI7O0FBQ0E7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFFLGNBQWM7QUFDM0M7O0FBQ0E7RUFDRSxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLHlCQUF5QixFQUFFLGNBQWM7RUFDekMsaUJBQWlCO0FBQ25COztBQUNBO0VBQ0UsY0FBYyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsV0FBVztFQUN0RCxtQkFBbUI7RUFDbkIsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLFNBQVM7RUFDdkMsV0FBVztFQUNYLHlCQUF5QixFQUFFLG1CQUFtQjtFQUM5QywrQkFBK0I7QUFDakM7O0FBQ0E7RUFDRSxjQUFjO0FBQ2hCOztBQUNBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsNEJBQTRCO0FBQzlCIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbnVJdGVte1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHNweDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gIFxyXG5cclxufVxyXG5cclxuLmRyb3Bkb3duTWVudUl0ZW17XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG59XHJcblxyXG4ud2VsY29tZXtcclxuZm9udC1zaXplOiAyMHB4O1xyXG5mb250LWZhbWlseTogJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XHJcbmNvbG9yOiB3aGl0ZXNtb2tlO1xyXG59XHJcbi5uYXZiYXJcclxue1xyXG5jb2xvcjogYmx1ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5sb2dvLW5hbWUge1xyXG4gIG1hcmdpbjogMHB4OztcclxufVxyXG5cclxuOjpuZy1kZWVwIC5sb2dvLW5hbWU6aG92ZXIge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbn1cclxuLm5vdGlmaWN0YWlvbiB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcmlnaHQ6IDIwcHg7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgYm90dG9tOiA5cHg7XHJcbiAgei1pbmRleDogNTtcclxufVxyXG5cclxuLm9ub2Zmc3dpdGNoIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlOyBcclxuICB3aWR0aDogOTBweDtcclxuICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAtd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7IC1tb3otdXNlci1zZWxlY3Q6bm9uZTsgLW1zLXVzZXItc2VsZWN0OiBub25lO1xyXG59XHJcbi5vbm9mZnN3aXRjaC1jaGVja2JveCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuLm9ub2Zmc3dpdGNoLWxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jazsgb3ZlcmZsb3c6IGhpZGRlbjsgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICM5OTk5OTk7IGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbn1cclxuLm9ub2Zmc3dpdGNoLWlubmVyIHtcclxuICBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDIwMCU7IG1hcmdpbi1sZWZ0OiAtMTAwJTtcclxuICB0cmFuc2l0aW9uOiBtYXJnaW4gMC4zcyBlYXNlLWluIDBzO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuLm9ub2Zmc3dpdGNoLWlubmVyOmJlZm9yZSwgLm9ub2Zmc3dpdGNoLWlubmVyOmFmdGVyIHtcclxuICBkaXNwbGF5OiBibG9jazsgZmxvYXQ6IGxlZnQ7IHdpZHRoOiA1MCU7IGhlaWdodDogMzBweDsgcGFkZGluZzogMDsgbGluZS1oZWlnaHQ6IDMwcHg7XHJcbiAgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogd2hpdGU7IGZvbnQtZmFtaWx5OiBUcmVidWNoZXQsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogYm9sZDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcbi5vbm9mZnN3aXRjaC1pbm5lcjpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiT05cIjtcclxuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VERUZGMDsgY29sb3I6ICMyMTU3OUM7XHJcbn1cclxuLm9ub2Zmc3dpdGNoLWlubmVyOmFmdGVyIHtcclxuICBjb250ZW50OiBcIk9GRlwiO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsgY29sb3I6ICM5OTk5OTk7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuLm9ub2Zmc3dpdGNoLXN3aXRjaCB7XHJcbiAgZGlzcGxheTogYmxvY2s7IHdpZHRoOiAxOHB4OyBoZWlnaHQ6IDE4cHg7IG1hcmdpbjogNnB4O1xyXG4gIGJhY2tncm91bmQ6ICMyMTU3OUM7XHJcbiAgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDJweDsgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiA1NnB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICM5OTk5OTk7IGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbiAwczsgXHJcbn1cclxuLm9ub2Zmc3dpdGNoLWNoZWNrYm94OmNoZWNrZWQgKyAub25vZmZzd2l0Y2gtbGFiZWwgLm9ub2Zmc3dpdGNoLWlubmVyIHtcclxuICBtYXJnaW4tbGVmdDogMDtcclxufVxyXG4ub25vZmZzd2l0Y2gtY2hlY2tib3g6Y2hlY2tlZCArIC5vbm9mZnN3aXRjaC1sYWJlbCAub25vZmZzd2l0Y2gtc3dpdGNoIHtcclxuICByaWdodDogMHB4OyBcclxufVxyXG5cclxuLmZvbnQtd2VpZ2h0LWJvbGQge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-light mb-2 bg-secondary text-primary\\\" style=\\\"padding: 20px 15px 15px; min-height: 80px;\\\">\\r\\n  <div style=\\\"display: grid;margin-top: 4px; position: absolute; left: 15px\\\">\\r\\n    <div>\\r\\n      <p class=\\\"pull-left logo-name\\\" style=\\\"font-size: 32px; font-weight: bold;\\r\\n      line-height: 24px; color: #ffffff;\\\" title=\\\"MAXDS \\\"><span aria-hidden=\\\"true\\\"></span>\\r\\n        <span (click)=\\\"goToHome()\\\" style=\\\"cursor: pointer;\\\">MAXDS on OS</span></p>\\r\\n    </div>\\r\\n    <div style=\\\"font-size: 14px; font-weight: normal; color: #ffffff;\\\">Multiple Application XBRL Delivery System\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\" position: absolute; left: 280px; \\\">\\r\\n    <ul style=\\\"list-style: none; \\\" class=\\\"pull-left\\\">\\r\\n      <!-- <li style=\\\"display: inline;\\\">\\r\\n      <img class=\\\"pull-left\\\" src=\\\"../assets/images/sec_logo copy.jpg\\\" style=\\\"border-radius: 25px;\\\" height=\\\"50\\\"\\r\\n        width=\\\"50\\\">\\r\\n    </li> -->\\r\\n\\r\\n\\r\\n      <li style=\\\"display: inline;\\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/home\\\" title=\\\" Home\\\">\\r\\n          Home </a>\\r\\n      </li>\\r\\n\\r\\n      <li style=\\\"display: inline;\\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/export\\\" title=\\\"Export\\\">\\r\\n          Export</a>\\r\\n      </li>\\r\\n\\r\\n      <li style=\\\"display: inline; \\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/accuracyTest\\\" title=\\\"Accuracy test\\\">\\r\\n          Accuracy test</a>\\r\\n      </li>\\r\\n      <li style=\\\"display: inline; \\\" >\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/processTerm\\\" title=\\\"Process Terms\\\">\\r\\n          Process Terms</a>\\r\\n      </li>\\r\\n\\r\\n      <li style=\\\"display: inline; \\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/manageTerm\\\" title=\\\"Manage Term Maps\\\">\\r\\n          Manage Term Maps</a>\\r\\n      </li>\\r\\n\\r\\n      <li style=\\\"display: inline; \\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/status\\\" title=\\\"Status\\\">\\r\\n          Status</a>\\r\\n      </li>\\r\\n\\r\\n      <!-- <li style=\\\"display: inline; \\\" *ngIf=\\\"isAdmin\\\"> -->\\r\\n      <li style=\\\"display: inline; \\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" routerLink=\\\"/admin\\\" title=\\\"Administration\\\">\\r\\n          Administration</a>\\r\\n      </li>\\r\\n      <li style=\\\"display: inline; \\\">\\r\\n        <a routerLink=\\\"/submit\\\" class=\\\"pull-left menuItem\\\" title=\\\"Submit Feedback\\\">\\r\\n          Submit Feedback </a>\\r\\n      </li>\\r\\n      <li style=\\\"display: inline;\\\">\\r\\n        <a class=\\\"pull-left menuItem\\\" href=\\\"https://confluence.ad.sec.gov/display/DOS/SEC_MAXDS_User_Guide\\\"\\r\\n          target=\\\"_blank\\\" title=\\\"help\\\">\\r\\n          Help</a>\\r\\n      </li>\\r\\n\\r\\n      <!-- <li style=\\\"display: inline; \\\">\\r\\n      <a routerLink=\\\"/featurehome\\\" class=\\\"pull-left menuItem\\\" title=\\\"Next Home\\\">\\r\\n        Next Home </a>\\r\\n    </li> -->\\r\\n\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-3 p-0\\\" style=\\\"text-align: right; position: absolute; right: 0px;\\\">\\r\\n    <a class=\\\"pull-left menuItem\\\" style=\\\"margin-top: 10px;\\\" href=\\\"javascript:void(0)\\\">\\r\\n      Tour</a>\\r\\n    <span class=\\\"pull-left onoffswitch\\\" joyrideStep=\\\"startTour\\\" stepPosition=\\\"bottom\\\"\\r\\n      title=\\\"MAXDS Tour: {{currentPage}}\\\" [stepContent]=\\\"customContent\\\" [prevTemplate]=\\\"prevButton\\\"\\r\\n      [nextTemplate]=\\\"nextButton\\\" [doneTemplate]=\\\"doneButton\\\" [counterTemplate]=\\\"counter\\\">\\r\\n      <input type=\\\"checkbox\\\" name=\\\"onoffswitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"myonoffswitch\\\"\\r\\n        [(ngModel)]=\\\"startTourCheck\\\" tabindex=\\\"0\\\" (change)=\\\"startTour()\\\">\\r\\n      <label class=\\\"onoffswitch-label\\\" for=\\\"myonoffswitch\\\">\\r\\n        <span class=\\\"onoffswitch-inner\\\"></span>\\r\\n        <span class=\\\"onoffswitch-switch\\\"></span>\\r\\n      </label>\\r\\n    </span>\\r\\n\\r\\n    <label class=\\\"welcome\\\">Hello</label> <label class=\\\"welcome\\\" style=\\\"margin: 2px;\\\">&nbsp;{{userFullName}} </label>\\r\\n\\r\\n    <!-- <span>\\r\\n      <a routerLink=\\\"/profile\\\" title=\\\"Profile\\\" class=\\\"bg-secondary text-white dropdownMenuItem\\\">\\r\\n        <button class=\\\"btn bg-secondary text-white\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"font-size: 30px;\\\"></span>\\r\\n        </button>\\r\\n      </a>\\r\\n    </span>\\r\\n\\r\\n    <span>\\r\\n      <a routerLink=\\\"/logout\\\" title=\\\"Log Off\\\" class=\\\"bg-secondary text-white\\\">\\r\\n        <button class=\\\"btn bg-secondary text-white\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-log-out\\\" style=\\\"font-size: 30px; margin-left: 10px;\\\"></span>\\r\\n        </button>\\r\\n      </a>\\r\\n    </span> -->\\r\\n\\r\\n    <span class=\\\"dropdown\\\">\\r\\n      <button class=\\\"btn bg-secondary text-white dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user\\\" style=\\\"font-size: 30px;\\\"></span>\\r\\n      </button>\\r\\n\\r\\n      <ul class=\\\"dropdown-menu bg-secondary text-white  pull-right\\\">\\r\\n        <li class=\\\"bg-secondary text-white\\\">\\r\\n          <a routerLink=\\\"/profile\\\" title=\\\"Profile\\\" class=\\\"bg-secondary text-white dropdownMenuItem\\\">\\r\\n            Profile</a>\\r\\n          <a routerLink=\\\"/logout\\\" title=\\\"Log Off\\\" class=\\\"bg-secondary text-white dropdownMenuItem\\\"><span\\r\\n              class=\\\"glyphicon glyphicon-log-out\\\"></span>\\r\\n            Logoff</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </span>\\r\\n\\r\\n    <span class=\\\"dropdown\\\" *ngIf=\\\"notifications && (notifications.length > 0)\\\">\\r\\n      <button class=\\\"btn bg-secondary text-white dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-envelope\\\" style=\\\"font-size: 30px; margin-left: 10px;\\\"></span>\\r\\n      </button>\\r\\n\\r\\n      <ul class=\\\"dropdown-menu bg-secondary text-white  pull-right\\\">\\r\\n        <li class=\\\"bg-secondary text-white\\\">\\r\\n          <a (click)=\\\"goToProfile()\\\" href=\\\"javascript:void(0)\\\" *ngFor=\\\"let notification of notifications\\\"\\r\\n            title=\\\"Profile\\\" class=\\\"bg-secondary text-white font-weight-bold\\\">\\r\\n            {{notification.data.preferenceName.split('(')[1].slice(0, notification.data.preferenceName.split('(')[1].length - 1 )}}\\r\\n            has\\r\\n            {{notification.data.preferenceName.split('(')[0].slice(0, notification.data.preferenceName.split('(')[1].length - 1 )}}\\r\\n            of {{notification.data.companyName}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </span>\\r\\n    <div class=\\\"notifictaion\\\" *ngIf=\\\"notifications && (notifications.length > 0)\\\">{{notifications.length}}</div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #customContent>\\r\\n  <h3 class=\\\"popover-title p-10\\\">Welcome to a guided tour of the MAXDS {{currentPage}}</h3>\\r\\n  <div style=\\\"padding: 0px 13px 15px 13px\\\">\\r\\n    <div>\\r\\n      <div>This tour will help guide you through the basic features of the MAXDS {{currentPage}} Page</div>\\r\\n      <div *ngIf=\\\"currentPage === 'home'\\\">\\r\\n        <div>Manage Term Rules – Expressions to Resolve Term Rules and Validate Term Rules</div>\\r\\n        <div>To manage term rule expressions and validations, there are three main panels: list term rules, list term\\r\\n          details & expressions, expression builder.</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"currentPage === 'profile'\\\">\\r\\n        <div>The Profile consists of user preferences saved to perform processing multiple times or share preferences\\r\\n          among other users.</div>\\r\\n        <div>It also provides the ability to add, delete and clear preferences.</div>\\r\\n      </div>\\r\\n\\r\\n      <div>Use the <i class=\\\"glyphicon glyphicon-backward\\\"></i> <b> Prev</b> and <b>Next </b> <i\\r\\n          class=\\\"glyphicon glyphicon-forward\\\"></i> buttons to navigate through the tour. </div>\\r\\n      <div> Please select <b>Next </b> <i class=\\\"glyphicon glyphicon-forward\\\"></i> button to begin the tour.</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #prevButton>\\r\\n  <button class=\\\"btn btn-sm btn-guided-tour\\\" data-role=\\\"prev\\\" aria-label=\\\"Prev\\\" style=\\\"margin-right:10px;\\\"><i\\r\\n      class=\\\"glyphicon glyphicon-backward\\\"></i>&nbsp;Prev</button>\\r\\n</ng-template>\\r\\n<ng-template #nextButton>\\r\\n  <button class=\\\"btn btn-sm btn-guided-tour\\\" data-role=\\\"next\\\" aria-label=\\\"Next\\\">Next&nbsp;<i\\r\\n      class=\\\"glyphicon glyphicon-forward\\\"></i></button>\\r\\n</ng-template>\\r\\n<ng-template #doneButton>\\r\\n  <button class=\\\"btn btn-sm btn-warning\\\" data-role=\\\"end\\\" aria-label=\\\"End tour\\\">End tour</button>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, Input, OnDestroy, HostListener } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { LoginService } from 'app/services/login.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UtilService } from '../utils/utilService';\r\nimport { CommonService } from 'app/services/common.service';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { JoyrideService } from 'ngx-joyride';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  @HostListener('document:click', ['$event.target'])\r\n  public onClick(targetElement) {\r\n    if (targetElement.classList.contains('joyride-backdrop')) {\r\n      this.joyrideService.closeTour();\r\n    }\r\n  }\r\n\r\n  showmenu: boolean;\r\n  userFullName: String;\r\n  firstName: string[];\r\n  isAdmin: boolean;\r\n  notifications: any;\r\n  currentUser: String;\r\n  currentUserSubscription: Subscription;\r\n  errorMessage: boolean = false;\r\n  startTourCheck = false;\r\n  subscription: any;\r\n  steps = ['startTour']\r\n  appStep = [\r\n    'termRuleSelection@home',\r\n    'termName@home',\r\n    'termCode@home',\r\n    'difinition@home',\r\n    'IncludeInAccuracyTest@home',\r\n    'periodType@home',\r\n    'type@home',\r\n    'financialStatement@home',\r\n    'priorityGroup@home',\r\n    'addTerm@home',\r\n    'saveTerm@home',\r\n    'processTerm@home',\r\n    'removeTerm@home',\r\n    // 'expLabel@home',\r\n\r\n    'companyName@export',\r\n    'goToPeer@export',\r\n    'division@export',\r\n    'sector@export',\r\n    'industry@export',\r\n    'filerCategory@export',\r\n    'term@export',\r\n    'selectAllTerms@export',\r\n    'deselectAllTerms@export',\r\n    'annual@export',\r\n    'selectYear@export',\r\n    'overrideSelected@export',\r\n    'includeValidationInfo@export',\r\n    'termResult@export',\r\n    'coverageStats@export',\r\n    'quarterly@export',\r\n\r\n\r\n    'searchCompany@accuracyTest',\r\n    'year@accuracyTest',\r\n    'runTest@accuracyTest',\r\n\r\n    'refreshData@profile',\r\n    'selectUnselect@profile',\r\n    'processPreference@profile',\r\n    'createPreference@profile',\r\n    'deletePreference@profile',\r\n    'clearPreference@profile',\r\n    'sharePreference@profile',\r\n    'listOfSharedProfile@profile',\r\n    'accept@profile',\r\n    'delete@profile',\r\n\r\n    'groupName@manageTerm',\r\n    'newGroupStep@manageTerm',\r\n    'newRowStep@manageTerm',\r\n    'searchTermMap@manageTerm',\r\n    'exportTermMap@manageTerm',\r\n\r\n    'refreshStatus@status',\r\n    'cancelProcessing@status',\r\n\r\n    'type@submit',\r\n    'category@submit',\r\n    'name@submit',\r\n    'email@submit',\r\n    'phone@submit',\r\n    'message@submit',\r\n    'sendFeedback@submit'\r\n  ]\r\n  currentPage = '';\r\n  constructor(private login: LoginService, private location: Location, private activatedRoute: ActivatedRoute, private router: Router, private joyrideService: JoyrideService, private utilService: UtilService, private commonService: CommonService, private profileService: ProfileService) {\r\n    //this.autoLogin();\r\n    this.currentUserSubscription = this.login.currentUser.subscribe(user => {\r\n      this.currentUser = user;\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.steps = ['startTour'];\r\n    const locationPath = this.location.path();\r\n    this.currentPage = locationPath.replace('/', '');\r\n    const stepForCurrentRoute = this.appStep.filter((item) => {\r\n      if (locationPath !== '/profile') {\r\n        return item.includes(locationPath.replace('/', '@'));\r\n      } else {\r\n        if (item === 'listOfSharedProfile@profile' || item === 'accept@profile' || item === 'delete@profile') {\r\n          if (this.notifications && this.notifications.length > 0) {\r\n            return item.includes(locationPath.replace('/', '@'));\r\n          }\r\n        } else {\r\n          return item.includes(locationPath.replace('/', '@'));\r\n        }\r\n      }\r\n    });\r\n    // const stepForOtherRoute = this.appStep.filter((item) => {\r\n    //   return !item.includes(locationPath.replace('/', '@'));\r\n    // });\r\n    this.steps = this.steps.concat(stepForCurrentRoute);\r\n    // this.steps = this.steps.concat(stepForOtherRoute);\r\n\r\n    this.router.events.subscribe((event) => {\r\n      this.steps = ['startTour']\r\n      if (event instanceof NavigationEnd) {\r\n        this.currentPage = event.url.replace('/', '');\r\n        const stepForCurrentRoute = this.appStep.filter((item) => {\r\n          if (event.url !== '/profile') {\r\n            return item.includes(event.url.replace('/', '@'));\r\n          } else {\r\n            if (item === 'listOfSharedProfile@profile' || item === 'accept@profile' || item === 'delete@profile') {\r\n              if (this.notifications && this.notifications.length > 0) {\r\n                return item.includes(event.url.replace('/', '@'));\r\n              }\r\n            } else {\r\n              return item.includes(event.url.replace('/', '@'));\r\n            }\r\n          }\r\n        });\r\n        // const stepForOtherRoute = this.appStep.filter((item) => {\r\n        //   return !item.includes(event.url.replace('/', '@'));\r\n        // });\r\n        this.steps = this.steps.concat(stepForCurrentRoute);\r\n        // this.steps = this.steps.concat(stepForOtherRoute);\r\n      }\r\n    });\r\n\r\n    this.login.currentUser;\r\n    if (localStorage.getItem(\"userFullName\")) {\r\n      if (this.currentUser == null) {\r\n        this.userFullName = this.login.fullname;\r\n      } else {\r\n        this.userFullName = this.currentUser;\r\n      }\r\n      this.firstName = this.userFullName.split(\" \");\r\n      this.userFullName = this.firstName[1];\r\n      this.getAllSharedProfiles();\r\n    } else {\r\n      this.autoLogin();\r\n    }\r\n    this.subscription = CommonService.sharedPreferenceNotification.subscribe(item => {\r\n      this.notifications = item;\r\n    });\r\n\r\n  }\r\n  startTour() {\r\n    CommonService.setTourGuideStart(true);\r\n    this.startTourCheck = true;\r\n    const options = {\r\n      steps: this.steps,\r\n      // startWith: 'step3@app',\r\n      // waitingTime: 3000,\r\n      stepDefaultPosition: 'bottom',\r\n      themeColor: 'transparent',\r\n      showPrevButton: true,\r\n      logsEnabled: false,\r\n      showCounter: false\r\n      // customTexts: { prev: of('<<').pipe(delay(2000)), next: '>>'}\r\n    };\r\n    this.joyrideService.startTour(options).subscribe(\r\n      step => {\r\n        if (step.route === 'export') {\r\n          if (step.name === 'companyName') {\r\n            CommonService.setExportTabIndex(0);\r\n          }\r\n\r\n          if (step.name === 'term') {\r\n            CommonService.setExportTabIndex(1);\r\n          }\r\n          if (step.name === 'annual') {\r\n            CommonService.setExportTabIndex(2);\r\n          }\r\n\r\n          if (step.name === 'filerCategory') {\r\n            CommonService.setExportTabIndex(0);\r\n          }\r\n          if (step.name === 'deselectAllTerms') {\r\n            CommonService.setExportTabIndex(1);\r\n          }\r\n          if (step.name === 'quarterly') {\r\n            CommonService.setExportTabIndex(2);\r\n          }\r\n        }\r\n      },\r\n      e => {\r\n        console.log('Error', e);\r\n      },\r\n      () => {\r\n        // this.stepDone();\r\n        this.startTourCheck = false;\r\n        console.log('Tour finished');\r\n        CommonService.setTourGuideStart(false);\r\n      }\r\n    );\r\n  }\r\n  logout() {\r\n    this.login.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to ensure no memory leaks\r\n    this.currentUserSubscription.unsubscribe();\r\n    this.subscription.unsubscribe();\r\n    this.logout();\r\n  }\r\n  autoLogin() {\r\n    this.utilService.autoLogin().subscribe((response) => {\r\n      // this.app.showmenu = true;\r\n      if (response.resultObject != null) {\r\n        localStorage.removeItem('error')\r\n        localStorage.removeItem('user');\r\n        this.userFullName = response.resultObject.password;\r\n        localStorage.setItem('userid', response.resultObject.userid);\r\n        this.utilService.getUserRolesList().subscribe((res) => {\r\n          if(res.length === 0) {\r\n            localStorage.setItem('error', 'true');\r\n            localStorage.setItem('user', 'null');\r\n            this.errorMessage = true;\r\n            return this.router.navigate(['/login']);\r\n          }\r\n          this.isAdmin = res.includes('admin');\r\n          var admin = this.isAdmin ? 'true' : null;\r\n          localStorage.setItem(\"isAdmin\", admin);\r\n        })\r\n      } else {\r\n        localStorage.setItem('error', 'true');\r\n        localStorage.setItem('user', 'null');\r\n        this.errorMessage = true;\r\n        return this.router.navigate(['/login']);\r\n\r\n      }\r\n\r\n      if (response.status) {\r\n        this.getAllSharedProfiles();\r\n        this.router.navigate(['/home'], {\r\n          state:\r\n          {\r\n            loggedUsername: response.username,\r\n\r\n          }\r\n        })\r\n        this.router.getCurrentNavigation\r\n\r\n      } else {\r\n        console.log(\"error\")\r\n\r\n        this.router.navigate(['/login'], {})\r\n\r\n      }\r\n\r\n    },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  goToProfile() {\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  getAllSharedProfiles() {\r\n    this.profileService.getAllSharedProfiles().subscribe((response) => {\r\n      let preferencesList = [];\r\n      response.forEach(preferences => {\r\n        const pname: any[] = preferences.companyName.split(\"$\");\r\n        preferencesList.push(\r\n          this.getRootRecords(preferences, pname)\r\n        );\r\n      });\r\n      CommonService.emitsharedPreferenceNotificationEvent(preferencesList);\r\n\r\n    },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n  getRootRecords(preferences, companyNames) {\r\n    const entityName: string = companyNames[0];\r\n    return {\r\n      \"data\": {\r\n        processId: preferences.processId, companyName: entityName, preferenceName: preferences.preferenceName,\r\n        code: preferences.code, userid: preferences.userid, termName: preferences.termName, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n        researchLink: preferences.researchLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n      },\r\n      \"children\": this.getChildRecord(preferences, companyNames)\r\n    }\r\n  }\r\n  getChildRecord(preferences, companyNames) {\r\n    const childrens: any[] = []\r\n    for (let i = 1; i < companyNames.length; i++) {\r\n      childrens.push({\r\n        \"data\": {\r\n          processId: preferences.processId, companyName: companyNames[i], preferenceName: preferences.preferenceName,\r\n          code: preferences.code, userid: preferences.userid, termName: preferences.termName, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n          researchLink: preferences.researchLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n        }\r\n      })\r\n    }\r\n    return childrens;\r\n  }\r\n\r\n  goToHome() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n        <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\"\\r\\n                strokeWidth=\\\"8\\\" fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n        <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n<div *ngIf=\\\"processnow\\\" style=\\\"border-style: solid;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column1\\\">\\r\\n\\r\\n                        <label>\\r\\n                                Division -> Sector:</label>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\"\\r\\n                                [(ngModel)]=\\\"divSector\\\" [style]=\\\"{'width':'800px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                (onChange)=\\\"divSectorChange($event)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                                filter=\\\"true\\\"></p-dropdown>\\r\\n                        &nbsp; {{divisionCount}}\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"height: 5px\\\"></div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column1\\\">\\r\\n                        <label>Industry: </label>\\r\\n                </div>\\r\\n                <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                                [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange($event)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                                [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'800px'}\\\"></p-dropdown>\\r\\n                        &nbsp; {{sectorCount}}\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"height: 5px\\\"></div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column1\\\">\\r\\n                        <label>Filer Category:</label>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column2\\\">\\r\\n\\r\\n                        <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                                placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\"\\r\\n                                (onChange)=\\\"processfilCatChange($event)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                                filter=\\\"true\\\" [style]=\\\"{'width':'800px'}\\\"></p-dropdown>&nbsp; {{categoryCount}}\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column1\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column2\\\">\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Process Now\\\" class=\\\" ui-button-rounded ui-button-success\\\"\\r\\n                                [disabled]=\\\"enableTermButton\\\" (click)=\\\"processNow()\\\"></button>\\r\\n                </div>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"height:70%\\\">\\r\\n\\r\\n        <div class=\\\"exprcolumn\\\" style=\\\"width: 20%;\\\">\\r\\n                <!-- <p-sidebar [(visible)]=\\\"display\\\" [dismissible] =\\\"false\\\" [showCloseIcon]=\\\"false\\\" autoZIndex=\\\"false\\\" [baseZIndex]=\\\"10000\\\" [style]=\\\"{width:'30em','overflow': 'scroll','height': '500px'}\\\" [modal]=\\\"false\\\"> -->\\r\\n                <p-tree [value]=\\\"termTree\\\" [filter]=\\\"true\\\"\\r\\n                        [style]=\\\"{width:'27em','text-align':'left','max-height':'800px', 'overflow':'auto'}\\\"\\r\\n                        filterMode=\\\"strict\\\" (onNodeSelect)=\\\"termTreeSelection($event)\\\" selectionMode=\\\"single\\\"\\r\\n                        [(selection)]=\\\"selectedTerm\\\" (onNodeUnselect)=\\\"termTreeunselect($event)\\\"></p-tree>\\r\\n                <!-- </p-sidebar> -->\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"exprcolumn\\\" style=\\\"float: left; width: 80%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                        <div class=\\\"exprcolumn\\\" style=\\\"float: left; width: 50%;\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                &nbsp;\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <button pButton type=\\\"button\\\" label=\\\"Add Term\\\" class=\\\"ui-button-rounded\\\"\\r\\n                                                        (click)=\\\"addTerm()\\\"></button>\\r\\n                                                <button pButton type=\\\"button\\\" label=\\\"Save Term\\\"\\r\\n                                                        class=\\\"ui-button-rounded\\\" [disabled]=\\\"enableTermButton\\\"\\r\\n                                                        (click)=\\\"saveTerm()\\\"></button>\\r\\n                                                <button pButton type=\\\"button\\\" label=\\\"Process Term\\\"\\r\\n                                                        class=\\\"ui-button-rounded\\\" [disabled]=\\\"enableTermButton\\\"\\r\\n                                                        (click)=\\\"processTermnow()\\\"></button>\\r\\n                                                <button pButton type=\\\"button\\\" label=\\\"Remove Term\\\"\\r\\n                                                        class=\\\"ui-button-rounded\\\" [disabled]=\\\"enableTermButton\\\"\\r\\n                                                        (click)=\\\"removeTerm()\\\"></button>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                        &nbsp;\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Term Name</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <input id=\\\"termNameinput\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                        [(ngModel)]=\\\"termName\\\">\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Term Code</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <input id=\\\"termCodeinput\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                        [(ngModel)]=\\\"termCode\\\" (ngModelChange)=\\\"termCodeChange($event)\\\"\\r\\n                                                        [disabled]=\\\"enableTermCode\\\">\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Definition</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <textarea rows=\\\"5\\\" cols=\\\"30\\\" [(ngModel)]=\\\"definition\\\"\\r\\n                                                        pInputTextarea></textarea>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <p-checkbox [(ngModel)]=\\\"incAccuTest\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <label>Included in Accuracy Test</label>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Period Type</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n\\r\\n                                                <p-dropdown [options]=\\\"periodTypeList\\\" placeholder=\\\"Period Type\\\"\\r\\n                                                        [(ngModel)]=\\\"periodType\\\" optionLabel=\\\"name\\\"\\r\\n                                                        [style]=\\\"{'width':'200px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                        style=\\\"text-align: center\\\" filter=\\\"true\\\"></p-dropdown>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Type</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <p-dropdown [options]=\\\"typeList\\\" placeholder=\\\"Type\\\" [(ngModel)]=\\\"type\\\"\\r\\n                                                        optionLabel=\\\"name\\\" [style]=\\\"{'width':'200px'}\\\"\\r\\n                                                        dropdownIcon=\\\"pi pi-chevron-down\\\" style=\\\"text-align: center\\\"\\r\\n                                                        filter=\\\"true\\\"></p-dropdown>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Financial Statement</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <p-dropdown [options]=\\\"trmRulFinStatmntList\\\"\\r\\n                                                        placeholder=\\\"Financial Statement\\\" [(ngModel)]=\\\"finStatement\\\"\\r\\n                                                        optionLabel=\\\"financialStatement\\\" [style]=\\\"{'width':'200px'}\\\"\\r\\n                                                        dropdownIcon=\\\"pi pi-chevron-down\\\" style=\\\"text-align: center\\\"\\r\\n                                                        filter=\\\"true\\\"></p-dropdown>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Priority Group</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <p-dropdown [options]=\\\"trmRulPriorGrpList\\\" placeholder=\\\"Priority Group\\\"\\r\\n                                                        [(ngModel)]=\\\"priorgroup\\\" optionLabel=\\\"name\\\"\\r\\n                                                        [style]=\\\"{'width':'200px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                        style=\\\"text-align: center\\\" filter=\\\"true\\\"></p-dropdown>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Processing Order </label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column\\\">\\r\\n                                                <input id=\\\"processingOrder\\\" type=\\\"text\\\" size=\\\"6\\\" pInputText\\r\\n                                                        [(ngModel)]=\\\"processingOrder\\\" [disabled]=\\\"true\\\">\\r\\n\\r\\n                                        </div>\\r\\n                                </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"exprcolumn\\\" style=\\\"width: 50%\\\" *ngIf=\\\"displayTerms\\\">\\r\\n                                <div>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Expressions\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                                                (click)=\\\"onExpressionButtonClick('expressions')\\\"></button>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Validations\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                                                (click)=\\\"onExpressionButtonClick('validations')\\\"></button>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Industry Override Expressios\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                                                (click)=\\\"onExpressionButtonClick('industry')\\\"\\r\\n                                                icon=\\\"pi pi-check\\\"></button>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Derived Zero Expressions\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                                                (click)=\\\"onExpressionButtonClick('derived')\\\"\\r\\n                                                icon=\\\"pi pi-check\\\"></button>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                        &nbsp;\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"{{expLabel}}\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-warning\\\"\\r\\n                                                (click)=\\\"expressionClick()\\\"></button>\\r\\n                                        <p-dropdown *ngIf=\\\"indOvrdExprDrop\\\" [options]=\\\"indovrDrpList\\\"\\r\\n                                                [(ngModel)]=\\\"selIndOvrdExpr\\\" optionLabel=\\\"name\\\"\\r\\n                                                (onChange)=\\\"industryChange()\\\"></p-dropdown>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                        &nbsp;\\r\\n                                </div>\\r\\n                                <p-table #expressionTable [columns]=\\\"expressioncols\\\" [value]=\\\"expTableList\\\"\\r\\n                                        [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [responsive]=\\\"true\\\"\\r\\n                                        [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                                        [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\"\\r\\n                                        dataKey=\\\"termId\\\" p-dataTable scrollHeight=\\\"100px\\\" [scrollable]=\\\"true\\\"\\r\\n                                        scrollHeight=\\\"300px\\\">\\r\\n                                        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                                                <colgroup>\\r\\n                                                        <col *ngFor=\\\"let col of columns\\\">\\r\\n                                                </colgroup>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                                <tr>\\r\\n                                                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn\\r\\n                                                                pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                                                <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                                                        {{col.header}}\\r\\n                                                                        <p-sortIcon [field]=\\\"col.field\\\"\\r\\n                                                                                ariaLabel=\\\"Activate to sort\\\"\\r\\n                                                                                ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                                                                ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\r\\n                                                                        </p-sortIcon>\\r\\n                                                                </div>\\r\\n                                                        </th>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\"\\r\\n                                                                pResizableColumn pReorderableColumn>\\r\\n                                                                <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                                                                        <input *ngSwitchCase=\\\"col.field\\\" pInputText\\r\\n                                                                                type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                                                                                [value]=\\\"expressionTable.filters[col.field] ? expressionTable.filters[col.field].value : ''\\\"\\r\\n                                                                                (input)=\\\"expressionTable.filter($event.target.value, col.field, 'contains');\\\"\\r\\n                                                                                style=\\\"width: 60px\\\">\\r\\n                                                                </div>\\r\\n                                                        </th>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n\\r\\n                                        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\"\\r\\n                                                let-rowIndex=\\\"rowIndex\\\">\\r\\n                                                <tr style=\\\"height:34px\\\">\\r\\n                                                        <td *ngFor=\\\"let col of columns \\\" class=\\\"ui-resizable-column\\\"\\r\\n                                                                style=\\\"word-wrap:break-word\\\">\\r\\n                                                                <div *ngIf=\\\"col.field === 'rank'\\\">\\r\\n\\r\\n                                                                        <a href=\\\"#\\\" (click)=\\\"moveRankBy(rowIndex, -1)\\\"\\r\\n                                                                                *ngIf=\\\"rowIndex > 0\\\"\\r\\n                                                                                title=\\\"Move row up\\\">\\r\\n                                                                                <i class=\\\"fa fa-arrow-up\\\"\\r\\n                                                                                        aria-hidden=\\\"true\\\"></i>\\r\\n                                                                        </a><br>\\r\\n                                                                        {{rowData[col.field]}}<br>\\r\\n                                                                        <a href=\\\"#\\\" (click)=\\\"moveRankBy(rowIndex, 1)\\\"\\r\\n                                                                                *ngIf=\\\"expTableList.length - rowIndex > 1\\\"\\r\\n                                                                                title=\\\"Move row down\\\">\\r\\n                                                                                <i class=\\\"fa fa-arrow-down\\\"\\r\\n                                                                                        aria-hidden=\\\"true\\\"></i>\\r\\n                                                                        </a>\\r\\n\\r\\n                                                                </div>\\r\\n                                                                <div\\r\\n                                                                        *ngIf=\\\"col.field !== 'rank' && col.field !== 'options' && col.field !== 'expression'\\\">\\r\\n                                                                        {{rowData[col.field]}}\\r\\n                                                                </div>\\r\\n                                                                <div *ngIf=\\\"col.field === 'expression'\\\">\\r\\n                                                                        <div *ngIf=\\\"rowData['type'] !== 'Formula'\\\">\\r\\n                                                                                {{rowData[col.field]}}\\r\\n                                                                        </div>\\r\\n\\r\\n                                                                        <div *ngIf=\\\"rowData['type'] === 'Formula'\\\">\\r\\n                                                                                <p style=\\\"display:inline\\\"\\r\\n                                                                                        *ngFor=\\\"let formula of rowData['formulaList']\\\">\\r\\n                                                                                        <a href=\\\"#\\\"\\r\\n                                                                                                (click)=\\\"showTermResultnavigate($event,formula.termName)\\\">{{formula.termName}}\\r\\n                                                                                        </a>\\r\\n                                                                                        {{getFormulaSuffix(formula)}}\\r\\n                                                                                </p>\\r\\n                                                                                <!-- {{rowData[col.field]}} -->\\r\\n                                                                                <button type=\\\"button\\\"\\r\\n                                                                                        class=\\\"glyphicon  glyphicon-eye-open\\\"\\r\\n                                                                                        ng-click=\\\"showDerivationTree()\\\"></button>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n\\r\\n                                                                <div *ngIf=\\\"col.field === 'options'\\\">\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"onExpressionEdit(rowData)\\\"\\r\\n                                                                                (keydown.enter)=\\\"onExpressionEdit(rowData)\\\"\\r\\n                                                                                icon=\\\"pi pi-pencil\\\"\\r\\n                                                                                styleClass=\\\"ui-button-info\\\"\\r\\n                                                                                pTooltip=\\\"Edit Expression\\\"></button>\\r\\n                                                                        &nbsp;&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"deleteWithRank(rowIndex)\\\"\\r\\n                                                                                (keydown.enter)=\\\"deleteWithRank(rowIndex)\\\"\\r\\n                                                                                icon=\\\"pi pi-trash\\\"\\r\\n                                                                                styleClass=\\\"ui-button-info\\\"\\r\\n                                                                                pTooltip=\\\"Delete Expression\\\"></button>\\r\\n                                                                </div>\\r\\n                                                        </td>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n                                                <tr style=\\\"height:34px\\\">\\r\\n                                                        <td *ngFor=\\\"let col of columns\\\"\\r\\n                                                                pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n                                                                <div class=\\\"loading-text\\\"></div>\\r\\n                                                        </td>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"summary\\\">\\r\\n                                                Total number of Records: {{expressionTable.totalRecords}}\\r\\n                                        </ng-template>\\r\\n                                </p-table>\\r\\n\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"displayTerms\\\" style=\\\"text-align: center\\\">\\r\\n                        <label style=\\\"background-color: #E2E8EC;width: 100%\\\"> Coverage and Term Results</label>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                        <div class=\\\"exprcolumn\\\" style=\\\"width: 70%; padding: 20px\\\" *ngIf=\\\"displayTerms\\\">\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <p-radioButton name=\\\"filterRadio\\\" value=\\\"company\\\"\\r\\n                                                        [(ngModel)]=\\\"filterRadio\\\"></p-radioButton>\\r\\n                                                <label>Search by Company: </label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column2\\\">\\r\\n                                                <p-autoComplete [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\" [size]=\\\"50\\\"\\r\\n                                                        [suggestions]=\\\"filteredCompany\\\"\\r\\n                                                        (completeMethod)=\\\"searchCompany($event)\\\"\\r\\n                                                        placeholder=\\\"Search Company\\\" [size]=\\\"50\\\" [dropdown]=\\\"true\\\">\\r\\n                                                </p-autoComplete>\\r\\n\\r\\n                                                <button pButton type=\\\"button\\\" label=\\\"Go To Peer Goup\\\"\\r\\n                                                        class=\\\"ui-button-rounded\\\" (click)=\\\"goToPeer($event)\\\"></button>\\r\\n                                                        <button type=\\\"button\\\" pButton   (click)=\\\"resetCoverage()\\\" label=\\\"Clear All\\\"  class=\\\"ui-button-rounded\\\"  pTooltip=\\\"Clear All\\\"></button>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <p-radioButton name=\\\"filterRadio\\\" value=\\\"group\\\"\\r\\n                                                        [(ngModel)]=\\\"filterRadio\\\"></p-radioButton>\\r\\n                                                <label>Search by Group:\\r\\n                                                        Division -> Sector:</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column2\\\">\\r\\n                                                <p-dropdown [options]=\\\"filtereddivSector\\\"\\r\\n                                                        placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                                                        [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                        (onChange)=\\\"divSectorChange($event)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                                                        [itemSize]=\\\"31\\\" filter=\\\"true\\\"></p-dropdown>\\r\\n                                                &nbsp; {{divisionCount}}\\r\\n\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Industry: </label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column2\\\">\\r\\n                                                <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\"\\r\\n                                                        placeholder=\\\"Select Industry\\\" [showClear]=\\\"true\\\"\\r\\n                                                        (onChange)=\\\"processIndustryChange($event)\\\"\\r\\n                                                        [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\"\\r\\n                                                        [style]=\\\"{'width':'400px'}\\\"></p-dropdown>\\r\\n                                                &nbsp; {{industryCount}}\\r\\n\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"column1\\\">\\r\\n                                                <label>Filer Category:</label>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"column2\\\">\\r\\n                                                <p-dropdown [options]=\\\"filteredfilerCategory\\\"\\r\\n                                                        [(ngModel)]=\\\"filerCategory\\\" placeholder=\\\"Select Filer Category\\\"\\r\\n                                                        [showClear]=\\\"true\\\" (onChange)=\\\"processfilCatChange($event)\\\"\\r\\n                                                        [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\"\\r\\n                                                        [style]=\\\"{'width':'400px'}\\\"></p-dropdown>&nbsp;\\r\\n                                                {{categoryCount}}\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Show Resolved\\\"\\r\\n                                        class=\\\"ui-button-rounded\\\"\\r\\n                                                (click)=\\\"showResolved(true)\\\"></button>\\r\\n                                        <p-dropdown [options]=\\\"resolvedRanks\\\" [(ngModel)]=\\\"selectResolvedRank\\\"\\r\\n                                                placeholder=\\\"Show Resolved By Rank\\\" (onChange)=\\\"showResolved(true)\\\">\\r\\n                                        </p-dropdown>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Show Not Resolved\\\"\\r\\n                                        class=\\\"ui-button-rounded\\\"\\r\\n                                                (click)=\\\"showResolved(false)\\\"></button>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                <div class=\\\"column1\\\">\\r\\n                                                <p-checkbox [(ngModel)]=\\\"quaterly\\\" binary=\\\"true\\\" label=\\\"Quarterly?\\\">\\r\\n                                                </p-checkbox>\\r\\n                                </div>\\r\\n                                <div class=\\\"column2\\\" style=\\\"width:50%\\\">\\r\\n                                       <h3 style=\\\"text-align: center\\\"> {{range[0]}} - {{range[1]}} </h3>\\r\\n                                 <p-slider [(ngModel)]=\\\"range\\\" [min]=\\\"minYear\\\" [max]=\\\"maxYear\\\" [step]=\\\"1\\\" [range]=\\\"true\\\" [style]=\\\"{'width':'50em'}\\\" (onChange)=\\\"yearChange($event)\\\"></p-slider>\\r\\n                                 <!-- <p-slider [ext-tooltip]=\\\"range[0]\\\" stickTo=\\\".ui-slider-handle\\\" tooltipPosition=\\\"top\\\" [(ngModel)]=\\\"range\\\" class=\\\"slider\\\" [step]=\\\"2016\\\" [min]=\\\"2020\\\" [max]=\\\"range[1]\\\" ></p-slider> -->\\r\\n                                </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"exprcolumn\\\" style=\\\"width: 30%; padding: 20px\\\">\\r\\n                                <div style=\\\"float: right; padding-left: 150px\\\" *ngIf=\\\"displayGetCoverage\\\">\\r\\n                                        <p-chart type=\\\"doughnut\\\" [data]=\\\"chart\\\" height=\\\"300\\\"></p-chart>\\r\\n                                        <button pButton type=\\\"button\\\" label=\\\"Get Coverage\\\"\\r\\n                                                class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                                                (click)=\\\"showResolved(true)\\\"></button>\\r\\n                                </div>\\r\\n                        </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"displayTerms\\\">\\r\\n                        <div class=\\\"exprcolumn\\\" style=\\\"width: 100%; padding: 20px\\\">\\r\\n                                <p-table #entityTable [columns]=\\\"entitycols\\\" [value]=\\\"entityList\\\" [paginator]=\\\"true\\\"\\r\\n                                        [rows]=\\\"10\\\" [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\r\\n                                        [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\"\\r\\n                                        [(selection)]=\\\"cik\\\" dataKey=\\\"cik\\\" (onRowSelect)=\\\"onRowClick($event)\\\"\\r\\n                                        (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable scrollHeight=\\\"100px\\\"\\r\\n                                        [scrollable]=\\\"true\\\" scrollHeight=\\\"200px\\\">\\r\\n                                        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                                                <colgroup>\\r\\n                                                        <col *ngFor=\\\"let col of columns\\\">\\r\\n                                                </colgroup>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                                <tr>\\r\\n                                                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn\\r\\n                                                                pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                                                <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                                                                        {{col.header}}\\r\\n                                                                        <p-sortIcon [field]=\\\"col.field\\\"\\r\\n                                                                                ariaLabel=\\\"Activate to sort\\\"\\r\\n                                                                                ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                                                                ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\r\\n                                                                        </p-sortIcon>\\r\\n                                                                </div>\\r\\n                                                        </th>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                                                                <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                                                                        <input *ngSwitchCase=\\\"col.field\\\" pInputText\\r\\n                                                                                type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                                                                                [value]=\\\"entityTable.filters[col.field] ? entityTable.filters[col.field].value : ''\\\"\\r\\n                                                                                (input)=\\\"entityTable.filter($event.target.value, col.field, 'contains'); onRowUnClick();onFilter($event.target.value, col.field, 'contains')\\\"\\r\\n                                                                                style=\\\"width: 60px\\\">\\r\\n                                                                </div>\\r\\n                                                        </th>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n\\r\\n                                        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                                                <tr style=\\\"height:34px\\\">\\r\\n                                                        <td *ngFor=\\\"let col of columns\\\">\\r\\n                                                                <div\\r\\n                                                                        *ngIf=\\\"col.field !== 'viewResultLink' && col.field !== 'researchLink' && col.field !== 'processTermLink' && col.field !== 'fsqvLink'\\\">\\r\\n                                                                        {{rowData[col.field]}}\\r\\n                                                                </div>\\r\\n                                                                <div *ngIf=\\\"col.field === 'viewResultLink'\\\">\\r\\n                                                                        <a style=\\\"color:blue;\\\"\\r\\n                                                                                (click)=\\\"showTermResults(rowData)\\\"\\r\\n                                                                                href=\\\"#/termresults\\\">View</a>\\r\\n                                                                </div>\\r\\n                                                                <div *ngIf=\\\"col.field === 'researchLink'\\\">\\r\\n                                                                        <a style=\\\"color:blue;\\\" target=\\\"_blank\\\"\\r\\n                                                                                href=\\\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&type=&dateb=&owner=exclude&count=40&search_text=&CIK={{rowData.cik}}\\\">Research</a>\\r\\n                                                                </div>\\r\\n                                                             <!--  (click)=\\\"openFSQVLink(rowData)\\\" -->\\r\\n                                                                <div *ngIf=\\\"col.field === 'fsqvLink'\\\">\\r\\n                                                                      <a style=\\\"color: blue;\\\" target=\\\"_blank\\\"\\r\\n                                                                                href=\\\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&type=&dateb=&owner=exclude&count=40&search_text=&CIK={{rowData.cik}}\\\">FSQV</a>\\r\\n                                                                </div>\\r\\n                                                                <div *ngIf=\\\"col.field === 'processTermLink'\\\">\\r\\n                                                                        <a style=\\\"color:blue;\\\"\\r\\n                                                                                (click)=\\\"processTermForEntity(rowData)\\\"\\r\\n                                                                                href=\\\"#/home\\\">Process</a>\\r\\n                                                                </div>\\r\\n                                                        </td>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n                                                <tr style=\\\"height:34px\\\">\\r\\n                                                        <td *ngFor=\\\"let col of columns\\\"\\r\\n                                                                pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n                                                                <div class=\\\"loading-text\\\"></div>\\r\\n                                                        </td>\\r\\n                                                </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"summary\\\">\\r\\n                                                Total number of Records: {{entityTable.totalRecords}}\\r\\n                                        </ng-template>\\r\\n                                </p-table>\\r\\n                        </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<p-dialog header=\\\"Term Expression Builder\\\" [(visible)]=\\\"editExpression\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '95vw'}\\\"\\r\\n        [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\" [draggable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Name:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n                        <label>\\r\\n                                Definition:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea cols=\\\"150\\\" [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Code:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n        </div>\\r\\n        <div>\\r\\n                <p-tabView [activeIndex]=\\\"index\\\" (onChange)=\\\"onTabChange($event)\\\">\\r\\n                        <p-tabPanel header=\\\"Concept Match\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <label>\\r\\n                                                Concept Name:\\r\\n                                        </label>\\r\\n                                        <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\"\\r\\n                                                [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"170\\\"\\r\\n                                                placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                                                (ngModelChange)=\\\"getconceptNameDefinition()\\\"></p-autoComplete>\\r\\n                                        <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                                                {{conceptNameDefinition}}\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <p-checkbox label=\\\"Use Positive Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Use Negative Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Reverse Negative Facts\\\"\\r\\n                                                        [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                Axis:\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\"\\r\\n                                                                placeholder=\\\"specify axis name\\\">\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <label>\\r\\n                                                                Members Exclusion (Virtual Parent):\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                <textarea pInputTextarea\\r\\n                                                                        [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                                                                        cols=\\\"150\\\"\\r\\n                                                                        placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n                                                        </label>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Concept Match w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <label>\\r\\n                                                Concept Name:\\r\\n                                        </label>\\r\\n                                        <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\"\\r\\n                                                [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"170\\\"\\r\\n                                                placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                                                (ngModelChange)=\\\"getconceptNameDefinition()\\\"></p-autoComplete>\\r\\n                                        <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                                                {{conceptNameDefinition}}\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <p-checkbox name=\\\"useMaxAxisCount\\\" value=\\\"useMaxAxisCount\\\"\\r\\n                                                        label=\\\"Max # Axes/Members:\\\" [(ngModel)]=\\\"useMaxAxisCount\\\"\\r\\n                                                        inputId=\\\"useMaxAxisCount\\\"></p-checkbox>&nbsp;\\r\\n                                                <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"maxAxisCount\\\" name=\\\"maxAxisCount\\\"\\r\\n                                                        [(ngModel)]=\\\"maxAxisCount\\\">\\r\\n                                        </div>\\r\\n                                        <div *ngFor=\\\"let expressionSet of expressionSets; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n                                                <div class=\\\"row\\\">\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn\\\">\\r\\n                                                                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\"> <label>\\r\\n                                                                                        Axes:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"axisOption{{i}}\\\"\\r\\n                                                                                        value=\\\"ExactMatch\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                                                                                        id=\\\"axisFullNameOption\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionAxisTypeChanged(i); expressionSet.disableAxes=false;expressionSet.disableAxesInc=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <input type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisName\\\"\\r\\n                                                                                        placeholder=\\\"specify axis name\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxes\\\">\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"axisOption{{i}}\\\"\\r\\n                                                                                        id=\\\"axisPartialNameOption\\\"\\r\\n                                                                                        value=\\\"InclusionExclusionList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionAxisTypeChanged(i);expressionSet.disableAxesInc=false;expressionSet.disableAxes=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Inclusions(axis name must\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        id=\\\"axisInclusionList\\\"\\r\\n                                                                                        name=\\\"axisInclusionList\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxesInc\\\"\\r\\n                                                                                        placeholder=\\\"Enter Inclusion Axes\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisInclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.axisInclusionList = buildListFromString(expressionSet.axisInclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Exclusions (axis name must NOT\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        id=\\\"axisExclusions\\\"\\r\\n                                                                                        name=\\\"axisExclusions\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxesInc\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisExclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.axisExclusionList = buildListFromString(expressionSet.axisExclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"conceptcolumn\\\">\\r\\n                                                                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Members:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOption{{i}}\\\"\\r\\n                                                                                        id=\\\"anyMemberOption\\\" value=\\\"Any\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i)\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Any Members:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOption{{i}}\\\"\\r\\n                                                                                        value=\\\"ExactMatch\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i); expressionSet.disableMember=false;expressionSet.disableMemInc=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <input type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberName\\\"\\r\\n                                                                                        placeholder=\\\"specify member name\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMember\\\">\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOption{{i}}\\\"\\r\\n                                                                                        value=\\\"InclusionExclusionList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        inputId=\\\"partialMemberOption\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i);expressionSet.disableMember=true; expressionSet.disableMemInc=false\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Inclusions(member name must\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberInclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Members\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.memberInclusionList = buildListFromString(expressionSet.memberInclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Exclusions (member name must NOT\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberExclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Members\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.memberExclusionList = buildListFromString(expressionSet.memberExclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div style=\\\"float: center;\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\"\\r\\n                                                                (click)=\\\"removeSet(i)\\\" label=\\\"Remove Set\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                        (click)=\\\"AddExpressionSet()\\\" label=\\\"Add New Set\\\"\\r\\n                                                        class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Extended Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn\\\" style=\\\"width: 30%\\\">\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name Contains:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name does not Contain:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameDoesNotContains\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Name Does Not Contain\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Balance Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"ExtendedGroup\\\"\\r\\n                                                                                value=\\\"debit\\\" label=\\\"Debit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup\\\"\\r\\n                                                                                value=\\\"credit\\\" label=\\\"Credit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"na\\\"\\r\\n                                                                                label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup\\\" value=\\\"none\\\"\\r\\n                                                                                label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Period Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"perTypeGroup\\\"\\r\\n                                                                                value=\\\"instant\\\" label=\\\"Instant\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"perTypeGroup\\\"\\r\\n                                                                                value=\\\"duration\\\" label=\\\"duration\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\"\\r\\n                                                                                binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                                                                        </p-checkbox>\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"conceptcolumn\\\"\\r\\n                                                        style=\\\"background-color: #ccc; width: 65%; height: 80%;\\\">\\r\\n                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\" style=\\\"width: 100%\\\">\\r\\n                                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n\\r\\n                                                                                        <label>\\r\\n                                                                                                Division ->\\r\\n                                                                                                Sector:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filtereddivSector\\\"\\r\\n                                                                                                placeholder=\\\"Select Division Sector\\\"\\r\\n                                                                                                [(ngModel)]=\\\"divSector\\\"\\r\\n                                                                                                [style]=\\\"{'width':'500px'}\\\"\\r\\n                                                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                                                (onChange)=\\\"divSectorChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{divisionCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Industry: </label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredindustry\\\"\\r\\n                                                                                                [(ngModel)]=\\\"industry\\\"\\r\\n                                                                                                placeholder=\\\"Select Industry\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processIndustryChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'500px'}\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{sectorCount}}\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Filer Category:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredfilerCategory\\\"\\r\\n                                                                                                [(ngModel)]=\\\"filerCategory\\\"\\r\\n                                                                                                placeholder=\\\"Select Filer Category\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processfilCatChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'500px'}\\\">\\r\\n                                                                                        </p-dropdown>&nbsp;\\r\\n                                                                                        {{categoryCount}}\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div>\\r\\n                                                                        <p-table #expressionTable\\r\\n                                                                                [columns]=\\\"expressioncols\\\"\\r\\n                                                                                [value]=\\\"expTableList\\\"\\r\\n                                                                                [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                                                                [responsive]=\\\"true\\\"\\r\\n                                                                                [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\r\\n                                                                                [resizableColumns]=\\\"true\\\"\\r\\n                                                                                [reorderableColumns]=\\\"true\\\"\\r\\n                                                                                selectionMode=\\\"single\\\"\\r\\n                                                                                [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                                                                                (onRowSelect)=\\\"onRowClick($event)\\\"\\r\\n                                                                                (onRowUnselect)=\\\"onRowUnClick($event)\\\"\\r\\n                                                                                p-dataTable scrollHeight=\\\"100px\\\"\\r\\n                                                                                [scrollable]=\\\"true\\\"\\r\\n                                                                                scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                                                                        </p-table>\\r\\n                                                                </div>\\r\\n                                                                <div style=\\\"float: left; padding: 10px;\\\">\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Resolve\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Include\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Exclude\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Extended Check w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn\\\" style=\\\"width: 30%\\\">\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name Contains:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name does not Contain:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameDoesNotContains\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Name Does Not Contain\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Balance Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"balType\\\"\\r\\n                                                                                value=\\\"debit\\\" label=\\\"Debit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType\\\" value=\\\"credit\\\"\\r\\n                                                                                label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType\\\" value=\\\"na\\\"\\r\\n                                                                                label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType\\\" value=\\\"none\\\"\\r\\n                                                                                label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Period Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"radioGroup1\\\"\\r\\n                                                                                value=\\\"instant\\\" label=\\\"Instant\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"radioGroup1\\\"\\r\\n                                                                                value=\\\"duration\\\" label=\\\"duration\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\"\\r\\n                                                                                binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                                                                        </p-checkbox>\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Axes:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea [(ngModel)]=\\\"axes\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Enter Axes\\\"\\r\\n                                                                                (onChange)=\\\"updateAxes(axes)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Members:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"axesMembers\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Enter Members\\\"\\r\\n                                                                                (onChange)=\\\"updateAxesMembers(axesMembers)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"conceptcolumn\\\"\\r\\n                                                        style=\\\"background-color: #ccc; width: 65%; height: 80%;\\\">\\r\\n                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\" style=\\\"width: 100%\\\">\\r\\n                                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n\\r\\n                                                                                        <label>\\r\\n                                                                                                Division ->\\r\\n                                                                                                Sector:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filtereddivSector\\\"\\r\\n                                                                                                placeholder=\\\"Select Division Sector\\\"\\r\\n                                                                                                [(ngModel)]=\\\"divSector\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\"\\r\\n                                                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                                                (onChange)=\\\"divSectorChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{divisionCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Industry: </label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredindustry\\\"\\r\\n                                                                                                [(ngModel)]=\\\"industry\\\"\\r\\n                                                                                                placeholder=\\\"Select Industry\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processIndustryChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{sectorCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Filer Category:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredfilerCategory\\\"\\r\\n                                                                                                [(ngModel)]=\\\"filerCategory\\\"\\r\\n                                                                                                placeholder=\\\"Select Filer Category\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processfilCatChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>&nbsp;\\r\\n                                                                                        {{categoryCount}}\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div>\\r\\n                                                                        <p-table #expressionTable\\r\\n                                                                                [columns]=\\\"expressioncols\\\"\\r\\n                                                                                [value]=\\\"expTableList\\\"\\r\\n                                                                                [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                                                                [responsive]=\\\"true\\\"\\r\\n                                                                                [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\r\\n                                                                                [resizableColumns]=\\\"true\\\"\\r\\n                                                                                [reorderableColumns]=\\\"true\\\"\\r\\n                                                                                selectionMode=\\\"single\\\"\\r\\n                                                                                [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                                                                                (onRowSelect)=\\\"onRowClick($event)\\\"\\r\\n                                                                                (onRowUnselect)=\\\"onRowUnClick($event)\\\"\\r\\n                                                                                p-dataTable scrollHeight=\\\"100px\\\"\\r\\n                                                                                [scrollable]=\\\"true\\\"\\r\\n                                                                                scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                                                                        </p-table>\\r\\n                                                                </div>\\r\\n                                                                <div style=\\\"float: left; padding: 10px;\\\">\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Resolve\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Include\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Exclude\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Formula\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\"\\r\\n                                [style]=\\\"{height: '500px'}\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Term Name:\\r\\n                                                                                </label>\\r\\n                                                                                <p-autoComplete\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.termName\\\"\\r\\n                                                                                        name=\\\"formulaTermName\\\"\\r\\n                                                                                        [size]=\\\"50\\\"\\r\\n                                                                                        [suggestions]=\\\"formulaFilteredTerms\\\"\\r\\n                                                                                        (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                                                                                        placeholder=\\\"Search Term Name\\\"\\r\\n                                                                                        [dropdown]=\\\"true\\\">\\r\\n                                                                                </p-autoComplete>&nbsp;\\r\\n                                                                                <p-checkbox\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.nullable\\\"\\r\\n                                                                                        binary=\\\"true\\\"></p-checkbox>\\r\\n                                                                                &nbsp;\\r\\n                                                                                <label>\\r\\n                                                                                        Allow Null? Operators:\\r\\n                                                                                </label>\\r\\n                                                                                <p-dropdown\\r\\n                                                                                        [options]=\\\"formulaOperatorsList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.operation\\\"\\r\\n                                                                                        optionLabel=\\\"name\\\"\\r\\n                                                                                        [showClear]=\\\"true\\\"></p-dropdown>\\r\\n                                                                                &nbsp;\\r\\n                                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                                        (click)=\\\"deleteFormula(i)\\\"\\r\\n                                                                                        (keydown.enter)=\\\"deleteFormula(i)\\\"\\r\\n                                                                                        icon=\\\"pi pi-trash\\\"\\r\\n                                                                                        styleClass=\\\"ui-button-info\\\"\\r\\n                                                                                        pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                                (click)=\\\"addAnotherFormula()\\\"\\r\\n                                                                label=\\\"Add + Another Term to Formula\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Concept Match Multiple\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <div *ngFor=\\\"let conceptSet of conceptMatchMultipleList; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"column\\\">\\r\\n                                                                <label>\\r\\n                                                                        Concept Name:\\r\\n                                                                </label>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"column\\\">\\r\\n                                                                <p-autoComplete [(ngModel)]=\\\"conceptMatchMultiple[i]\\\"\\r\\n                                                                        [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                                        (completeMethod)=\\\"filterConceptMatch($event)\\\"\\r\\n                                                                        [size]=\\\"80\\\" field=\\\"id\\\"\\r\\n                                                                        placeholder=\\\"Enter Concept Name\\\"\\r\\n                                                                        [minLength]=\\\"3\\\"></p-autoComplete>\\r\\n                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                        (click)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                                                                        (keydown.enter)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                                                                        icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                                                                        pTooltip=\\\"Delete Concept\\\"></button>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <button type=\\\"button\\\" pButton (click)=\\\"addAnotherConcept()\\\"\\r\\n                                                        label=\\\"Add + Another Concept\\\"\\r\\n                                                        class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <p-checkbox label=\\\"Use Positive Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Use Negative Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Reverse Negative Facts\\\"\\r\\n                                                        [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                Axis:\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\"\\r\\n                                                                placeholder=\\\"specify axis name\\\">\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <label>\\r\\n                                                                Members Exclusion (Virtual Parent):\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                <textarea pInputTextarea\\r\\n                                                                        [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                                                                        cols=\\\"150\\\"\\r\\n                                                                        placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n                                                        </label>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                </p-tabView>\\r\\n        </div>\\r\\n        <p-footer>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"editExpression=false; saveExpression()\\\"\\r\\n                        label=\\\"Save Expression\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"editExpression=false\\\" label=\\\"Cancel\\\"\\r\\n                        class=\\\"ui-button-secondary\\\"></button>\\r\\n        </p-footer>\\r\\n</p-dialog>\\r\\n<p-dialog header=\\\"Term Validation Builder\\\" [(visible)]=\\\"addEditValidation\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '95vw'}\\\"\\r\\n        [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\" [draggable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n        <div style=\\\"padding-left: 20px\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                                <label>\\r\\n                                        Term Name:\\r\\n                                </label>\\r\\n                                <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n                                <label>\\r\\n                                        Definition:\\r\\n                                </label>\\r\\n                                <textarea pInputTextarea cols=\\\"150\\\" [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"column\\\">\\r\\n                                <label>\\r\\n                                        Term Code:\\r\\n                                </label>\\r\\n                                <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n                                <div class=\\\"conceptcolumn\\\" style=\\\"width: 100%\\\">\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <label>\\r\\n                                                                Term Name:\\r\\n                                                        </label>\\r\\n                                                        <p-autoComplete [(ngModel)]=\\\"formulaSet.termName\\\"\\r\\n                                                                name=\\\"formulaTermName\\\" [size]=\\\"100\\\"\\r\\n                                                                [suggestions]=\\\"formulaFilteredTerms\\\"\\r\\n                                                                (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                                                                placeholder=\\\"Search Term Name\\\" [dropdown]=\\\"true\\\">\\r\\n                                                        </p-autoComplete>&nbsp;\\r\\n                                                        <p-checkbox [(ngModel)]=\\\"formulaSet.nullable\\\" binary=\\\"true\\\">\\r\\n                                                        </p-checkbox>&nbsp;\\r\\n                                                        <label>\\r\\n                                                                Allow Null? Operators:\\r\\n                                                        </label>\\r\\n                                                        <p-dropdown [options]=\\\"formulaOperatorsList\\\"\\r\\n                                                                [(ngModel)]=\\\"formulaSet.operation\\\" optionLabel=\\\"name\\\"\\r\\n                                                                [showClear]=\\\"true\\\"></p-dropdown>&nbsp;\\r\\n                                                        <button type=\\\"button\\\" pButton (click)=\\\"deleteFormula(i)\\\"\\r\\n                                                                (keydown.enter)=\\\"deleteFormula(i)\\\" icon=\\\"pi pi-trash\\\"\\r\\n                                                                styleClass=\\\"ui-button-info\\\"\\r\\n                                                                pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherFormula()\\\"\\r\\n                                        label=\\\"Add + Another Term to Formula\\\"\\r\\n                                        class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                        <p-checkbox [(ngModel)]=\\\"showExpression\\\" binary=\\\"true\\\"\\r\\n                                (ngModelChange)=\\\"getValidationExpression()\\\"></p-checkbox>&nbsp;\\r\\n                        <label>\\r\\n                                Show Expression ?\\r\\n                        </label>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"width: 100%\\\" *ngIf=\\\"showExpression\\\">\\r\\n                        <label> Rank : {{validationRank}}\\r\\n                        </label>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"width: 100%\\\" *ngIf=\\\"showExpression\\\">\\r\\n                        <label> Expression : {{validationExpression}}\\r\\n                        </label>\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n        <p-footer>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                        (click)=\\\"addEditValidation=false; saveRuleWithValidation()\\\" label=\\\"Save Validation\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditValidation=false\\\" label=\\\"Cancel\\\"\\r\\n                        class=\\\"ui-button-secondary\\\"></button>\\r\\n        </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Term Override Expression Builder\\\" [(visible)]=\\\"addEditIndustry\\\" [modal]=\\\"true\\\"\\r\\n        [style]=\\\"{width: '95vw'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n        [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Name:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n                        <label>\\r\\n                                Definition:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea cols=\\\"150\\\" [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Code:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Companies/Industries to override:\\r\\n                        </label>\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Override Name:\\r\\n                        </label>\\r\\n                </div>\\r\\n                <div class=\\\"column2\\\">\\r\\n                        <!-- <p-dropdown [options]=\\\"indovrDrpList\\\" [(ngModel)]=\\\"overrideName\\\" placeholder=\\\"Enter Override Name\\\" optionLabel=\\\"name\\\"  [style]=\\\"{'width':'400px'}\\\" [showClear]=\\\"true\\\"></p-dropdown> -->\\r\\n                        <p-autoComplete [(ngModel)]=\\\"overrideName\\\" [suggestions]=\\\"companyovrRideList\\\"\\r\\n                                (completeMethod)=\\\"getOverRides($event)\\\" (onSelect)=\\\"getCurrentOverrideDetails()\\\"\\r\\n                                field=\\\"name\\\"></p-autoComplete>\\r\\n                        <!-- <input id=\\\"typeahead-http\\\" type=\\\"text\\\" class=\\\"form-control mx-sm-3\\\"  [selectItem]=\\\"getCurrentOverrideDetails()\\\"\\r\\n                        [class.is-invalid]=\\\"searchFailed\\\" [(ngModel)]=\\\"overrideName\\\" [ngbTypeahead]=\\\"termRule.overrides\\\" placeholder=\\\"Enter Override Name\\\" /> -->\\r\\n                </div>\\r\\n                <div class=\\\"column\\\">\\r\\n                        <p-checkbox [(ngModel)]=\\\"mergeBaseExpressions\\\" binary=\\\"true\\\" label=\\\" Merge Base Expressions?\\\">\\r\\n                        </p-checkbox>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div> -->\\r\\n        <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n        <div *ngFor=\\\"let overrides of entityOverrides; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                                <label>\\r\\n                                        Company:\\r\\n                                </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"column\\\">\\r\\n                                <p-autoComplete [(ngModel)]=\\\"overrides.entityname\\\" name=\\\"overridecompanyName\\\"\\r\\n                                        [size]=\\\"50\\\" [suggestions]=\\\"filteredCompany\\\"\\r\\n                                        (completeMethod)=\\\"searchCompany($event)\\\" placeholder=\\\"Search Company\\\"\\r\\n                                        [dropdown]=\\\"true\\\">\\r\\n                                </p-autoComplete>\\r\\n                        </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n\\r\\n                                <label>\\r\\n                                        Division -> Sector:</label>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"column\\\">\\r\\n                                <p-autoComplete [(ngModel)]=\\\"overrides.divisionSector\\\" name=\\\"overrideDivSec\\\" [size]=\\\"50\\\"\\r\\n                                        [suggestions]=\\\"filtereddivSector\\\"\\r\\n                                        (completeMethod)=\\\"searchDivisionSector($event)\\\"\\r\\n                                        placeholder=\\\"Search Division Sector\\\" [dropdown]=\\\"true\\\">\\r\\n                                </p-autoComplete> &nbsp;&nbsp;\\r\\n                                <button type=\\\"button\\\" pButton (click)=\\\"removeOverride(i)\\\"\\r\\n                                        (keydown.enter)=\\\"removeOverride(i)\\\" icon=\\\"pi pi-trash\\\"\\r\\n                                        styleClass=\\\"ui-button-info\\\" pTooltip=\\\"Delete Override\\\"></button>\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"addAnotherIndustryOverride()\\\"\\r\\n                                label=\\\"Add + Another Company/Industry\\\"\\r\\n                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                </div>\\r\\n        </div>\\r\\n        <div>\\r\\n                <p-tabView [activeIndex]=\\\"index\\\" (onChange)=\\\"onTabChange($event)\\\">\\r\\n                        <p-tabPanel header=\\\"Concept Match\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <label>\\r\\n                                                Concept Name:\\r\\n                                        </label>\\r\\n                                        <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\"\\r\\n                                                [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"170\\\"\\r\\n                                                placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                                                (ngModelChange)=\\\"getconceptNameDefinition()\\\"></p-autoComplete>\\r\\n                                        <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                                                {{conceptNameDefinition}}\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <p-checkbox label=\\\"Use Positive Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Use Negative Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Reverse Negative Facts\\\"\\r\\n                                                        [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                Axis:\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\"\\r\\n                                                                placeholder=\\\"specify axis name\\\">\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <label>\\r\\n                                                                Members Exclusion (Virtual Parent):\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                <textarea pInputTextarea\\r\\n                                                                        [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                                                                        cols=\\\"150\\\"\\r\\n                                                                        placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n                                                        </label>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Concept Match w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <label>\\r\\n                                                Concept Name:\\r\\n                                        </label>\\r\\n                                        <p-autoComplete required=\\\"true\\\" [(ngModel)]=\\\"concMatch\\\"\\r\\n                                                [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                (completeMethod)=\\\"filterConceptMatch($event)\\\" field=\\\"id\\\" [size]=\\\"170\\\"\\r\\n                                                placeholder=\\\"Concept Match\\\" [minLength]=\\\"3\\\"\\r\\n                                                (ngModelChange)=\\\"getconceptNameDefinition()\\\"></p-autoComplete>\\r\\n                                        <div class=\\\"padding-5\\\" style=\\\"background-color: #ccc; text-align: left\\\">\\r\\n                                                {{conceptNameDefinition}}\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <p-checkbox name=\\\"useMaxAxisCount\\\" value=\\\"useMaxAxisCount\\\"\\r\\n                                                        label=\\\"Max # Axes/Members:\\\" [(ngModel)]=\\\"useMaxAxisCount\\\"\\r\\n                                                        inputId=\\\"useMaxAxisCount\\\"></p-checkbox>&nbsp;\\r\\n                                                <input type=\\\"number\\\" min=\\\"0\\\" id=\\\"maxAxisCount\\\" name=\\\"maxAxisCount\\\"\\r\\n                                                        [(ngModel)]=\\\"maxAxisCount\\\">\\r\\n                                        </div>\\r\\n                                        <div *ngFor=\\\"let expressionSet of expressionSets; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n                                                <div class=\\\"row\\\">\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn\\\">\\r\\n                                                                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\"> <label>\\r\\n                                                                                        Axes:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"axisOptions{{i}}\\\"\\r\\n                                                                                        value=\\\"ExactMatch\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                                                                                        id=\\\"axsFullNameOption\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionAxisTypeChanged(i); expressionSet.disableAxes=false;expressionSet.disableAxesInc=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <input type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisName\\\"\\r\\n                                                                                        placeholder=\\\"specify axis name\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxes\\\">\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"axisOptions{{i}}\\\"\\r\\n                                                                                        id=\\\"axisPartialNameOption\\\"\\r\\n                                                                                        value=\\\"InclusionExclusionList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionAxisTypeChanged(i);expressionSet.disableAxesInc=false;expressionSet.disableAxes=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Inclusions(axis name must\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        id=\\\"axisInclusionList\\\"\\r\\n                                                                                        name=\\\"axisInclusionList\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxesInc\\\"\\r\\n                                                                                        placeholder=\\\"Enter Inclusion Axes\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisInclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.axisInclusionList = buildListFromString(expressionSet.axisInclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Exclusions (axis name must NOT\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        id=\\\"axisExclusions\\\"\\r\\n                                                                                        name=\\\"axisExclusions\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableAxesInc\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.axisExclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Axes\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.axisExclusionList = buildListFromString(expressionSet.axisExclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"conceptcolumn\\\">\\r\\n                                                                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Members:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOptions{{i}}\\\"\\r\\n                                                                                        id=\\\"anyMemberOption\\\" value=\\\"Any\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i)\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Any Members:\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOptions{{i}}\\\"\\r\\n                                                                                        value=\\\"ExactMatch\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i); expressionSet.disableMember=false;expressionSet.disableMemInc=true\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <input type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberName\\\"\\r\\n                                                                                        placeholder=\\\"specify member name\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMember\\\">\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                                <p-radioButton name=\\\"memberOptions{{i}}\\\"\\r\\n                                                                                        value=\\\"InclusionExclusionList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberType\\\"\\r\\n                                                                                        inputId=\\\"partialMemberOption\\\"\\r\\n                                                                                        (onClick)=\\\"OnExpressionMemberTypeChanged(i);expressionSet.disableMember=true; expressionSet.disableMemInc=false\\\">\\r\\n                                                                                </p-radioButton>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Inclusions(member name must\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberInclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Members\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.memberInclusionList = buildListFromString(expressionSet.memberInclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Exclusions (member name must NOT\\r\\n                                                                                        contain the list of words):\\r\\n                                                                                </label>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\">\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn2\\\">\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                                <textarea pInputTextarea\\r\\n                                                                                        [(ngModel)]=\\\"expressionSet.memberExclusionListAsString\\\"\\r\\n                                                                                        cols=\\\"50\\\"\\r\\n                                                                                        placeholder=\\\"Enter Exclusion Members\\\"\\r\\n                                                                                        [disabled]=\\\"expressionSet.disableMemInc\\\"\\r\\n                                                                                        (onChange)=\\\"expressionSet.memberExclusionList = buildListFromString(expressionSet.memberExclusionListAsString)\\\"></textarea>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div style=\\\"float: center;\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\"\\r\\n                                                                (click)=\\\"removeSet(i)\\\" label=\\\"Remove Set\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div>\\r\\n                                                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                        (click)=\\\"AddExpressionSet()\\\" label=\\\"Add New Set\\\"\\r\\n                                                        class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Extended Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn\\\" style=\\\"width: 30%\\\">\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name Contains:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name does not Contain:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameDoesNotContains\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Name Does Not Contain\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Balance Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"ExtendedGroup1\\\"\\r\\n                                                                                value=\\\"debit\\\" label=\\\"Debit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup1\\\"\\r\\n                                                                                value=\\\"credit\\\" label=\\\"Credit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup1\\\" value=\\\"na\\\"\\r\\n                                                                                label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"ExtendedGroup1\\\"\\r\\n                                                                                value=\\\"none\\\" label=\\\"Ignore\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Period Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"perTypeGroup1\\\"\\r\\n                                                                                value=\\\"instant\\\" label=\\\"Instant\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"perTypeGroup1\\\"\\r\\n                                                                                value=\\\"duration\\\" label=\\\"duration\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\"\\r\\n                                                                                binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                                                                        </p-checkbox>\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"conceptcolumn\\\"\\r\\n                                                        style=\\\"background-color: #ccc; width: 65%; height: 80%;\\\">\\r\\n                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\" style=\\\"width: 100%\\\">\\r\\n                                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n\\r\\n                                                                                        <label>\\r\\n                                                                                                Division ->\\r\\n                                                                                                Sector:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filtereddivSector\\\"\\r\\n                                                                                                placeholder=\\\"Select Division Sector\\\"\\r\\n                                                                                                [(ngModel)]=\\\"divSector\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\"\\r\\n                                                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                                                (onChange)=\\\"divSectorChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{divisionCount}}\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Industry: </label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredindustry\\\"\\r\\n                                                                                                [(ngModel)]=\\\"industry\\\"\\r\\n                                                                                                placeholder=\\\"Select Industry\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processIndustryChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{sectorCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Filer Category:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredfilerCategory\\\"\\r\\n                                                                                                [(ngModel)]=\\\"filerCategory\\\"\\r\\n                                                                                                placeholder=\\\"Select Filer Category\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processfilCatChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>&nbsp;\\r\\n                                                                                        {{categoryCount}}\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div>\\r\\n                                                                        <p-table #expressionTable\\r\\n                                                                                [columns]=\\\"expressioncols\\\"\\r\\n                                                                                [value]=\\\"expTableList\\\"\\r\\n                                                                                [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                                                                [responsive]=\\\"true\\\"\\r\\n                                                                                [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\r\\n                                                                                [resizableColumns]=\\\"true\\\"\\r\\n                                                                                [reorderableColumns]=\\\"true\\\"\\r\\n                                                                                selectionMode=\\\"single\\\"\\r\\n                                                                                [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                                                                                (onRowSelect)=\\\"onRowClick($event)\\\"\\r\\n                                                                                (onRowUnselect)=\\\"onRowUnClick($event)\\\"\\r\\n                                                                                p-dataTable scrollHeight=\\\"100px\\\"\\r\\n                                                                                [scrollable]=\\\"true\\\"\\r\\n                                                                                scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                                                                        </p-table>\\r\\n                                                                </div>\\r\\n                                                                <div style=\\\"float: left; padding: 10px;\\\">\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Resolve\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Include\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Exclude\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Extended Check w/ Dim\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn\\\" style=\\\"width: 30%\\\">\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name Contains:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameContains\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Name Contains\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameContains(nameContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Element Name does not Contain:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"nameDoesNotContains\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Name Does Not Contain\\\"\\r\\n                                                                                (ngModelChange)=\\\"updateNameNotContains(nameDoesNotContains)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Balance Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"balType1\\\"\\r\\n                                                                                value=\\\"debit\\\" label=\\\"Debit\\\"\\r\\n                                                                                [(ngModel)]=\\\"balType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType1\\\" value=\\\"credit\\\"\\r\\n                                                                                label=\\\"Credit\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType1\\\" value=\\\"na\\\"\\r\\n                                                                                label=\\\"NA\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"balType1\\\" value=\\\"none\\\"\\r\\n                                                                                label=\\\"Ignore\\\" [(ngModel)]=\\\"balType\\\">\\r\\n                                                                        </p-radioButton> &nbsp;\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Period Type:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-radioButton name=\\\"radioGroup2\\\"\\r\\n                                                                                value=\\\"instant\\\" label=\\\"Instant\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n                                                                        <p-radioButton name=\\\"radioGroup2\\\"\\r\\n                                                                                value=\\\"duration\\\" label=\\\"duration\\\"\\r\\n                                                                                [(ngModel)]=\\\"perType\\\"></p-radioButton>\\r\\n                                                                        &nbsp;\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        &nbsp; <p-checkbox [(ngModel)]=\\\"isShareItemType\\\"\\r\\n                                                                                binary=\\\"true\\\" label=\\\"Share Item Type? \\\">\\r\\n                                                                        </p-checkbox>\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Axes:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea [(ngModel)]=\\\"axes\\\"\\r\\n                                                                                cols=\\\"40\\\" rows=\\\"5\\\"\\r\\n                                                                                placeholder=\\\"Enter Axes\\\"\\r\\n                                                                                (onChange)=\\\"updateAxes(axes)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <label>\\r\\n                                                                                Members:\\r\\n                                                                        </label>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\">\\r\\n                                                                        <textarea pInputTextarea\\r\\n                                                                                [(ngModel)]=\\\"axesMembers\\\" cols=\\\"40\\\"\\r\\n                                                                                rows=\\\"5\\\" placeholder=\\\"Enter Members\\\"\\r\\n                                                                                (onChange)=\\\"updateAxesMembers(axesMembers)\\\"></textarea>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"conceptcolumn\\\"\\r\\n                                                        style=\\\"background-color: #ccc; width: 65%; height: 80%;\\\">\\r\\n                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"conceptcolumn3\\\" style=\\\"width: 100%\\\">\\r\\n                                                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n\\r\\n                                                                                        <label>\\r\\n                                                                                                Division ->\\r\\n                                                                                                Sector:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filtereddivSector\\\"\\r\\n                                                                                                placeholder=\\\"Select Division Sector\\\"\\r\\n                                                                                                [(ngModel)]=\\\"divSector\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\"\\r\\n                                                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                                                (onChange)=\\\"divSectorChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{divisionCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Industry: </label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredindustry\\\"\\r\\n                                                                                                [(ngModel)]=\\\"industry\\\"\\r\\n                                                                                                placeholder=\\\"Select Industry\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processIndustryChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>\\r\\n                                                                                        &nbsp; {{sectorCount}}\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"column1\\\">\\r\\n                                                                                        <label>Filer Category:</label>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"column2\\\">\\r\\n                                                                                        <p-dropdown\\r\\n                                                                                                [options]=\\\"filteredfilerCategory\\\"\\r\\n                                                                                                [(ngModel)]=\\\"filerCategory\\\"\\r\\n                                                                                                placeholder=\\\"Select Filer Category\\\"\\r\\n                                                                                                [showClear]=\\\"true\\\"\\r\\n                                                                                                (onChange)=\\\"processfilCatChange($event)\\\"\\r\\n                                                                                                [virtualScroll]=\\\"true\\\"\\r\\n                                                                                                [itemSize]=\\\"31\\\"\\r\\n                                                                                                filter=\\\"true\\\"\\r\\n                                                                                                [style]=\\\"{'width':'800px'}\\\">\\r\\n                                                                                        </p-dropdown>&nbsp;\\r\\n                                                                                        {{categoryCount}}\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                                <div>\\r\\n                                                                        <p-table #expressionTable\\r\\n                                                                                [columns]=\\\"expressioncols\\\"\\r\\n                                                                                [value]=\\\"expTableList\\\"\\r\\n                                                                                [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                                                                                [responsive]=\\\"true\\\"\\r\\n                                                                                [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\r\\n                                                                                [resizableColumns]=\\\"true\\\"\\r\\n                                                                                [reorderableColumns]=\\\"true\\\"\\r\\n                                                                                selectionMode=\\\"single\\\"\\r\\n                                                                                [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n                                                                                (onRowSelect)=\\\"onRowClick($event)\\\"\\r\\n                                                                                (onRowUnselect)=\\\"onRowUnClick($event)\\\"\\r\\n                                                                                p-dataTable scrollHeight=\\\"100px\\\"\\r\\n                                                                                [scrollable]=\\\"true\\\"\\r\\n                                                                                scrollHeight=\\\"200px\\\">\\r\\n\\r\\n                                                                        </p-table>\\r\\n                                                                </div>\\r\\n                                                                <div style=\\\"float: left; padding: 10px;\\\">\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Resolve\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Include\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                        <button type=\\\"button\\\" pButton\\r\\n                                                                                (click)=\\\"editExpression=false\\\"\\r\\n                                                                                label=\\\"Exclude\\\"\\r\\n                                                                                class=\\\"ui-button-rounded ui-button-info\\\"></button>&nbsp;\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Formula\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\"\\r\\n                                [style]=\\\"{height: '500px'}\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div *ngFor=\\\"let formulaSet of formulaSets; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n\\r\\n                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n\\r\\n                                                                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                                                <label>\\r\\n                                                                                        Term Name:\\r\\n                                                                                </label>\\r\\n                                                                                <p-autoComplete\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.termName\\\"\\r\\n                                                                                        name=\\\"formulaTermName\\\"\\r\\n                                                                                        [size]=\\\"50\\\"\\r\\n                                                                                        [suggestions]=\\\"formulaFilteredTerms\\\"\\r\\n                                                                                        (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                                                                                        placeholder=\\\"Search Term Name\\\"\\r\\n                                                                                        [dropdown]=\\\"true\\\">\\r\\n                                                                                </p-autoComplete>&nbsp;\\r\\n                                                                                <p-checkbox\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.nullable\\\"\\r\\n                                                                                        binary=\\\"true\\\"></p-checkbox>\\r\\n                                                                                &nbsp;\\r\\n                                                                                <label>\\r\\n                                                                                        Allow Null? Operators:\\r\\n                                                                                </label>\\r\\n                                                                                <p-dropdown\\r\\n                                                                                        [options]=\\\"formulaOperatorsList\\\"\\r\\n                                                                                        [(ngModel)]=\\\"formulaSet.operation\\\"\\r\\n                                                                                        optionLabel=\\\"name\\\"\\r\\n                                                                                        [showClear]=\\\"true\\\"></p-dropdown>\\r\\n                                                                                &nbsp;\\r\\n                                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                                        (click)=\\\"deleteFormula(i)\\\"\\r\\n                                                                                        (keydown.enter)=\\\"deleteFormula(i)\\\"\\r\\n                                                                                        icon=\\\"pi pi-trash\\\"\\r\\n                                                                                        styleClass=\\\"ui-button-info\\\"\\r\\n                                                                                        pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                                (click)=\\\"addAnotherFormula()\\\"\\r\\n                                                                label=\\\"Add + Another Term to Formula\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Concept Match Multiple\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <div *ngFor=\\\"let conceptSet of conceptMatchMultipleList; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"column\\\">\\r\\n                                                                <label>\\r\\n                                                                        Concept Name:\\r\\n                                                                </label>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"column\\\">\\r\\n                                                                <p-autoComplete [(ngModel)]=\\\"conceptMatchMultiple[i]\\\"\\r\\n                                                                        [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                                        (completeMethod)=\\\"filterConceptMatch($event)\\\"\\r\\n                                                                        [size]=\\\"80\\\" field=\\\"id\\\"\\r\\n                                                                        placeholder=\\\"Enter Concept Name\\\"\\r\\n                                                                        [minLength]=\\\"3\\\"></p-autoComplete>\\r\\n                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                        (click)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                                                                        (keydown.enter)=\\\"deleteConceptMatchMultipleItem(i)\\\"\\r\\n                                                                        icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                                                                        pTooltip=\\\"Delete Concept\\\"></button>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <button type=\\\"button\\\" pButton (click)=\\\"addAnotherConcept()\\\"\\r\\n                                                        label=\\\"Add + Another Concept\\\"\\r\\n                                                        class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <p-checkbox label=\\\"Use Positive Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"usePositiveFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Use Negative Facts Only\\\"\\r\\n                                                        [(ngModel)]=\\\"useNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <p-checkbox label=\\\"Reverse Negative Facts\\\"\\r\\n                                                        [(ngModel)]=\\\"revNegativeFacts\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                Axis:\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <input type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"axis\\\"\\r\\n                                                                placeholder=\\\"specify axis name\\\">\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <label>\\r\\n                                                                Members Exclusion (Virtual Parent):\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"column\\\">\\r\\n                                                        <label>\\r\\n                                                                <textarea pInputTextarea\\r\\n                                                                        [(ngModel)]=\\\"virtualFactMemberExclusions\\\"\\r\\n                                                                        cols=\\\"150\\\"\\r\\n                                                                        placeholder=\\\"Enter Exclusion Members\\\"></textarea>\\r\\n                                                        </label>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                </p-tabView>\\r\\n        </div>\\r\\n        <p-footer>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                        (click)=\\\"addEditIndustry=false; editExpression=false; saveExpression()\\\"\\r\\n                        label=\\\"Save Expression\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditIndustry=false; editExpression=false;\\\"\\r\\n                        label=\\\"Cancel\\\" class=\\\"ui-button-secondary\\\"></button>\\r\\n        </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Term Derived Zero Expression Builder\\\" [(visible)]=\\\"addEditDerived\\\" [modal]=\\\"true\\\"\\r\\n        [style]=\\\"{width: '95vw'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n        [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\" [blockScroll]=\\\"true\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Name:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termName\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n                        <label>\\r\\n                                Definition:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea cols=\\\"150\\\" [(ngModel)]=\\\"definition\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"column\\\">\\r\\n                        <label>\\r\\n                                Term Code:\\r\\n                        </label>\\r\\n                        <textarea pInputTextarea [(ngModel)]=\\\"termCode\\\" cols=\\\"30\\\" disabled></textarea>\\r\\n\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"height: 5px;\\\"></div>\\r\\n\\r\\n        <div>\\r\\n                <p-tabView [activeIndex]=\\\"activeExpressionTabIndex\\\" (onChange)=\\\"onDerivedTabChange($event)\\\">\\r\\n                        <p-tabPanel header=\\\"Text Block Check\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <div *ngFor=\\\"let item of derivedZeroExpressionForEdit.textBlockList; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <label>\\r\\n                                                                        Text Block:\\r\\n                                                                </label>\\r\\n                                                                <label>\\r\\n                                                                        {{filteredtext[i]}}\\r\\n                                                                </label>\\r\\n\\r\\n                                                                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\"\\r\\n                                                                        name=\\\"textblock\\\" [size]=\\\"100\\\" field=\\\"id\\\"\\r\\n                                                                        [suggestions]=\\\"filteredconcMat\\\"\\r\\n                                                                        (completeMethod)=\\\"filterConceptMatch($event)\\\"\\r\\n                                                                        placeholder=\\\"Search Term Name\\\">\\r\\n                                                                </p-autoComplete>\\r\\n                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                        (click)=\\\"removeTextBlock(i)\\\"\\r\\n                                                                        (keydown.enter)=\\\"removeTextBlock(i)\\\"\\r\\n                                                                        icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                                                                        pTooltip=\\\"Delete Term Name\\\"></button>\\r\\n\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                                (click)=\\\"addAnotherTextBlock()\\\"\\r\\n                                                                label=\\\"Add + Another Text Block\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Dependent Terms\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <p-checkbox\\r\\n                                                                [(ngModel)]=\\\"derivedZeroExpressionForEdit.allTermsRequired\\\"\\r\\n                                                                binary=\\\"true\\\" label=\\\"Dependent on all terms?\\\">\\r\\n                                                        </p-checkbox>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div *ngFor=\\\"let item of derivedZeroExpressionForEdit.depTermNameList; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <label>\\r\\n                                                                        Term Name:\\r\\n                                                                </label>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn2\\\" style=\\\"width: 70%\\\">\\r\\n                                                                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\"\\r\\n                                                                        name=\\\"formulaTermName\\\" [size]=\\\"100\\\"\\r\\n                                                                        [suggestions]=\\\"formulaFilteredTerms\\\"\\r\\n                                                                        (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                                                                        placeholder=\\\"Search Term Name\\\"\\r\\n                                                                        [dropdown]=\\\"true\\\">\\r\\n                                                                </p-autoComplete>\\r\\n                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                        (click)=\\\"removeDerivedTerm(i)\\\"\\r\\n                                                                        (keydown.enter)=\\\"removeDerivedTerm(i, false)\\\"\\r\\n                                                                        icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                                                                        pTooltip=\\\"Delete Term Entry\\\"></button>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                                (click)=\\\"addAnotherItem(false)\\\"\\r\\n                                                                label=\\\"Add + Another Term\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Exclusive Terms\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"padding-left: 20px\\\">\\r\\n\\r\\n                                        <div *ngFor=\\\"let item of derivedZeroExpressionForEdit.excTermNameList; let i = index\\\"\\r\\n                                                [attr.data-index]=\\\"i\\\">\\r\\n                                                <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                                <label>\\r\\n                                                                        Term Name:\\r\\n                                                                </label>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div class=\\\"conceptcolumn2\\\" style=\\\"width: 70%\\\">\\r\\n                                                                <p-autoComplete [(ngModel)]=\\\"item.expressionItem\\\"\\r\\n                                                                        name=\\\"formulaTermName\\\" [size]=\\\"100\\\"\\r\\n                                                                        [suggestions]=\\\"formulaFilteredTerms\\\"\\r\\n                                                                        (completeMethod)=\\\"searchTermNames($event)\\\"\\r\\n                                                                        placeholder=\\\"Search Term Name\\\"\\r\\n                                                                        [dropdown]=\\\"true\\\">\\r\\n                                                                </p-autoComplete>\\r\\n                                                                <button type=\\\"button\\\" pButton\\r\\n                                                                        (click)=\\\"removeDerivedTerm(i)\\\"\\r\\n                                                                        (keydown.enter)=\\\"removeDerivedTerm(i, true)\\\"\\r\\n                                                                        icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                                                                        pTooltip=\\\"Delete Term Entry\\\"></button>\\r\\n                                                        </div>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\" style=\\\"width: 100%\\\">\\r\\n                                                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                                                                (click)=\\\"addAnotherItem(true)\\\"\\r\\n                                                                label=\\\"Add + Another Term\\\"\\r\\n                                                                class=\\\"ui-button-rounded ui-button-success\\\"></button>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                        <p-tabPanel header=\\\"Exclusive Division->Sector\\\" leftIcon=\\\"pi pi-user\\\" rightIcon=\\\"pi pi-star\\\">\\r\\n                                <div style=\\\"width: 90%; padding-left: 20px\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\">\\r\\n                                                        <label>Division -> Sector:</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <p-dropdown [options]=\\\"filteredDeriveddivSectors\\\"\\r\\n                                                                placeholder=\\\"Select Division Sector\\\"\\r\\n                                                                [(ngModel)]=\\\"deriveddivSector\\\"\\r\\n                                                                [style]=\\\"{'width':'800px'}\\\"\\r\\n                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                (onChange)=\\\"derivedDivisionSeleted($event)\\\"\\r\\n                                                                [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                                                        </p-dropdown>\\r\\n                                                        <label>\\r\\n                                                                {{divisionCount}}\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"conceptcolumn1\\\">\\r\\n                                                        <label>Industry: </label>\\r\\n\\r\\n                                                </div>\\r\\n                                                <div class=\\\"column2\\\">\\r\\n                                                        <p-dropdown [options]=\\\"filteredDerivedindustry\\\"\\r\\n                                                                placeholder=\\\"Select Industry\\\"\\r\\n                                                                [(ngModel)]=\\\"derivedindustry\\\"\\r\\n                                                                [style]=\\\"{'width':'800px'}\\\"\\r\\n                                                                dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                                                                (onChange)=\\\"industryChanged($event)\\\" filter=\\\"true\\\">\\r\\n                                                        </p-dropdown>\\r\\n                                                        <label>\\r\\n                                                                {{sectorCount}}\\r\\n                                                        </label>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                        </p-tabPanel>\\r\\n                </p-tabView>\\r\\n        </div>\\r\\n        <p-footer>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\"\\r\\n                        (click)=\\\"addEditDerived=false; saveNewDerivedExpression()\\\"\\r\\n                        label=\\\"Save Derived Expression\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"addEditDerived=false; \\\" label=\\\"Cancel\\\"\\r\\n                        class=\\\"ui-button-secondary\\\"></button>\\r\\n        </p-footer>\\r\\n</p-dialog>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { HomeService } from './homeService';\r\nimport { Home } from '../domain/home';\r\nimport { UtilService } from '../utils/utilService';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { MappedEntity } from '../domain/mappedEntity';\r\nimport { TermRule } from '../domain/termRule';\r\nimport { EditExpression } from '../domain/editExpression';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Messages, Message } from 'primeng/primeng';\r\nimport { AppComponent } from 'app/app.component';\r\nimport { HeaderComponent } from 'app/header/header.component';\r\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\r\nimport { Keepalive } from '@ng-idle/keepalive';\r\nimport { LoginService } from 'app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'home-page',\r\n  templateUrl: './home.html',\r\n  styleUrls: [`../app.component.css`],\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  private termRuleByStatList: any = [];\r\n  private trmRulFinStatmntList: any = [];\r\n  private trmRulPriorGrpList: any = [];\r\n  private periodTypeList: any = [{ name: \"instant\" }, { name: \"duration\" }, { name: \"na\" }];\r\n  private typeList: any = [{ name: \"decimal\" }, { name: \"integer\" }, { name: \"monetary\" }, { name: \"perShare\" }, { name: \"ratio\" }, { name: \"shares\" }, { name: \"na\" }];\r\n  private expressionTypes = [\"ConceptMatch\", \"ConceptMatchWithDim\", \"ExtendedCheck\", \"ExtendedCheckWithDim\", \"Formula\", \"ConceptMatchMultiple\"];\r\n  private rulePeriodTypes = [\"instant\", \"duration\", \"na\"];\r\n  private balanceTypes = [\"debit\", \"credit\", \"na\", \"none\"];\r\n  private ruleTypes = [\"decimal\", \"integer\", \"monetary\", \"perShare\", \"ratio\", \"shares\", \"na\"];\r\n  private derivedZeroTypes = [\"NoteBlockExistsCheck\", \"DependentTermCheck\", \"ExclusiveTermCheck\", \"IndustryExclusionCheck\"];\r\n  private termRulesList: any;\r\n  private populateList: any[] = [];\r\n  private uncategorizedPopulateList: any[] = [];\r\n  private termRulesPriorityGroupList;\r\n  private userRolesList;\r\n  private userDisplayName;\r\n  private display: true;\r\n  msgs: Message[] = [];\r\n  expressioncols: any;\r\n  entitycols: any;\r\n  selectedItem: any;\r\n  termTree: TreeNode[] = [];\r\n  selectedTerm: TreeNode;\r\n  termName: string;\r\n  termCode: string;\r\n  definition: string;\r\n  incAccuTest: boolean;\r\n  periodType: any;\r\n  type: any;\r\n  finStatement: any;\r\n  priorgroup: any;\r\n  processOrder: string;\r\n  processingOrder: string;\r\n  expTableList: any[] = [];\r\n  expressionList: any[] = [];\r\n  validationList: any[] = [];\r\n  indOvrrideList: any[] = [];\r\n  dervdZroExpList: any[] = [];\r\n  expLabel: string;\r\n  indOvrdExprDrop: boolean;\r\n  indovrDrpList: any[];\r\n  companyovrRideList: any[];\r\n  selIndOvrdExpr: any;\r\n  chart: any;\r\n  companyList: any[];\r\n  completeCompanyList: any[];\r\n  completeEntities: any[] = [];\r\n  filteredCompany: any[];\r\n  companyName: string;\r\n  termId: string;\r\n  divSectorList: any[];\r\n  filtereddivSector: any[];\r\n  divSector: string;\r\n  division: string;\r\n  sector: string;\r\n  sectorList: any[];\r\n  filteredsector: any[];\r\n  industryList: any[];\r\n  filteredindustry: any[];\r\n  industry: string;\r\n  filerCategoryList: any[];\r\n  filteredfilerCategory: any[];\r\n  filerCategory: string = null;\r\n  quaterly: boolean = true;\r\n  filterRadio: string;\r\n  newTerm: boolean;\r\n  errorMsg: string = '';\r\n  entityList: any[];\r\n  chartData: any;\r\n  resolvedRanks: any[];\r\n  selectResolvedRank: string;\r\n  chartUrl: string = '/api/TermRulesStatisticsForCriteria'\r\n  termRule: TermRule;\r\n  company: string;\r\n  isAdminUser: boolean = true;\r\n  index: number = 0;\r\n  filteredconcMat: any[];\r\n  conceptNameDefinition: string = \"\";\r\n  concMatch: any;\r\n  divisionCount: number;\r\n  industryCount: number;\r\n  categoryCount: number;\r\n\r\n  usePositiveFacts: boolean;\r\n  useNegativeFacts: boolean;\r\n  revNegativeFacts: boolean;\r\n  axis: string;\r\n  virtualFactMemberExclusions: any[];\r\n  maxAxisCount: number;\r\n  useMaxAxisCount: string;\r\n  expressionSets: any[];\r\n  conceptMatchMultipleList: any[];\r\n  conceptMatchMultiple: any[];\r\n\r\n  exprStr = \"isExtended\";\r\n  containsWords: any[] = [];\r\n  doesNotContainsWords: any[] = [];\r\n  nameDoesNotContains: any[] = [];\r\n  balType: string;\r\n  perType: string;\r\n  isShareItemType: boolean;\r\n  axes: any;\r\n  axesMembers: any;\r\n  nameContains: any[] = [];\r\n  extendedEntitiesLookup: any[] = [];\r\n  namedAxisList: any[];\r\n  namedMemberList: any[];\r\n  formulaSets: any[];\r\n  formulaTermName: string;\r\n  formulaAllowNull: boolean;\r\n  formulaOperator: string;\r\n  formulaOperatorsList: any[] = [{ name: \"\" }, { name: \"+\" }, { name: \"-\" }, { name: \"*\" }, { name: \"/\" }];\r\n  formulaFilteredTerms: any[];\r\n  termRuleLists: any[] = [];\r\n  overrideForEdit: any;\r\n  validationExpression: any;\r\n  validationRank: any;\r\n  addvalidation: boolean;\r\n\r\n  entityOverrides: any[];\r\n  overrideName: any;\r\n  mergeBaseExpressions: boolean;\r\n  overridecompanyName: any;\r\n  overrideDivSec: any;\r\n\r\n  derivedZeroExpressionForEdit: any = {};\r\n  activeExpressionTabIndex = 0;\r\n  excludeEntitiesFilter: any = {};\r\n  filteredDeriveddivSectors: any = [];\r\n  deriveddivSector: string = '';\r\n  derivedindustry: string = '';\r\n  filteredDerivedindustry: any[] = [];\r\n  derivedRank: boolean = true;\r\n\r\n  // this are for enabling and disabling purpos\r\n  displayTerms: boolean = false;\r\n  processnow: boolean = false;\r\n  displayGetCoverage: boolean = false;\r\n  showError: boolean;\r\n  progressSpinner: boolean;\r\n  enableTermButton: boolean;\r\n  enableTermCode: boolean;\r\n  editExpression: boolean;\r\n  addExpression: boolean;\r\n  isOverrideExpressionForEdit: boolean;\r\n  disableAxes: boolean;\r\n  disableMember: boolean;\r\n  disableMemInc: boolean;\r\n  disableAxesInc: boolean;\r\n  showExpression: boolean;\r\n  addEditValidation: boolean;\r\n  addEditIndustry: boolean;\r\n  addEditDerived: boolean;\r\n  filteredtext: any[] = [];\r\n  expressionForEdit: any;\r\n\r\n  expressionName: string;\r\n  startYear: number = (new Date()).getFullYear()-4;\r\n  endYear: number = (new Date()).getFullYear();\r\n\r\n  range: number[] = [(new Date()).getFullYear()-4, (new Date()).getFullYear()];\r\n  minYear:number =  (new Date()).getFullYear()-4;\r\n  maxYear: number = (new Date()).getFullYear();\r\n\r\n  timedOut = false;\r\n  lastPing?: Date = null;\r\n\r\n\r\n  constructor(private homeService: HomeService, private app: AppComponent, private router: Router, private home: Home, private utilService: UtilService, private mappedEntity: MappedEntity, private rule: TermRule,\r\n    private confirmationService: ConfirmationService, private editForExpression: EditExpression, private idle: Idle, private keepalive: Keepalive, private login: LoginService) {\r\n\r\n    this.app.showmenu = true;\r\n\r\n    this.chart = {};\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n\r\n\r\n    idle.setIdle(1800);\r\n    idle.setTimeout(5);\r\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n    idle.onIdleEnd.subscribe(() => {\r\n      this.reset();\r\n    });\r\n\r\n    idle.onTimeout.subscribe(() => {\r\n      this.timedOut = true;\r\n      this.login.logout();\r\n      this.router.navigate(['/login']);\r\n    });\r\n\r\n    idle.onTimeoutWarning.subscribe((countdown) => {\r\n    });\r\n    if (this.login.currentUserValue) {\r\n          this.router.navigate(['/home']);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    keepalive.interval(15);\r\n    keepalive.onPing.subscribe(() => this.lastPing = new Date());\r\n    this.resetPage();\r\n  }\r\n\r\n  resetPage() {\r\n    this.idle.watch();\r\n    this.timedOut = false;\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.termRule = new TermRule;\r\n    //this.expressionForEdit = null;\r\n    this.expressionName = 'Expression';\r\n    this.display = true;\r\n    this.errorMsg = '';\r\n    this.progressSpinner = false;\r\n    this.refresh();\r\n    console.log('homeComponent : calling ngOnInit...');\r\n\r\n    this.expressioncols = this.home.homeCols();\r\n    this.getRuleList();\r\n    this.getTermRuleOptions();\r\n    this.getUserRole();\r\n    this.utilService.getCompanyList().subscribe((response) => { this.companyList = response; });\r\n    this.utilService.getDivSectorList().subscribe((response) => {\r\n      this.divSectorList = response;\r\n      this.filtereddivSector = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filtereddivSector.push(name)\r\n      });\r\n    })\r\n    this.utilService.getIndustryList().subscribe((response) => { this.industryList = response; })\r\n    this.utilService.getFilerCategoryList().subscribe((response) => {\r\n      this.filerCategoryList = response;\r\n      this.filteredfilerCategory = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filteredfilerCategory.push(name)\r\n      });\r\n    })\r\n    this.utilService.getCompleteCompanyList().subscribe((response) => { this.completeCompanyList = response });\r\n\r\n    this.addTerm();\r\n  }\r\n  // This method gets all pre options on home page\r\n  getTermRuleOptions() {\r\n    this.trmRulFinStatmntList;\r\n    this.getPriorityGrpList();\r\n  }\r\n\r\n  getUserRole() {\r\n    this.utilService.getUserRolesList().subscribe(\r\n      (response) => {\r\n        this.isAdminUser = response.includes('admin');\r\n      },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  // This method gets all the term rule in home page\r\n  getRuleList() {\r\n    this.homeService.getTermRuleCategoryList().subscribe(\r\n      (response) => {\r\n        this.trmRulFinStatmntList = response;\r\n        this.trmRulFinStatmntList[this.trmRulFinStatmntList.length] = ({ \"financialStatement\": \"Uncategorized\" });\r\n      },\r\n      (error) => console.log(error)\r\n    )\r\n    this.utilService.getTermRuleList().subscribe(\r\n      (response) => {\r\n        this.termRulesList = response;\r\n        this.termRulesList = this.termRulesList.sort((a,b) => {\r\n          if(a.termId < b.termId) { return -1; }\r\n          if(a.termId > b.termId) { return 1; }\r\n          return 0;\r\n         });\r\n        for (var i = 0; i < this.trmRulFinStatmntList.length; i++) {\r\n          this.populateList = [];\r\n          for (var j = 0; j < this.termRulesList.length; j++) {\r\n            if (this.trmRulFinStatmntList[i].financialStatement === this.termRulesList[j].financialStatement) {\r\n              this.populateList.push(this.termRulesList[j]);\r\n            }\r\n          }\r\n          let home = new Home();\r\n          home.label = this.trmRulFinStatmntList[i].financialStatement;\r\n          this.populateList.forEach(obj => {\r\n            home.children.push({ \"label\": obj.termId + ' - ' + obj.name, \"leaf\": true, \"key\": obj.termId });\r\n            this.termRuleLists.push(obj.name);\r\n          }\r\n          )\r\n          home.leaf = false;\r\n          this.termTree.push(home);\r\n\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  termCodeChange($event) {\r\n    console.log(this.termCode);\r\n    if (this.termCode != \"\" && this.termCode) {\r\n      this.enableTermButton = false;\r\n    } else {\r\n      this.enableTermButton = true;\r\n    }\r\n  }\r\n  termTreeSelection($event) {\r\n    this.processnow = false;\r\n    this.indovrDrpList = [];\r\n    this.selIndOvrdExpr = null;\r\n    this.indOvrdExprDrop = false;\r\n    if ($event.node.key !== undefined) {\r\n      console.log('selected: ' + $event.node.key);\r\n      this.termId = $event.node.key;\r\n      this.displayTerms = true;\r\n      this.displayGetCoverage = false;\r\n      this.enableTermButton = false;\r\n      this.entitycols = this.home.homeEntityCols();\r\n      this.expressionName = 'Expression'\r\n      this.getTermBasedOnId($event.node.key);\r\n      if (this.entityList) {\r\n        this.showResolved(true);\r\n      } else\r\n        this.divisionCount = this.completeCompanyList.length;\r\n      console.log(this.selectedTerm)\r\n    }\r\n  }\r\n\r\n  getPriorityGrpList() {\r\n    this.homeService.getTermRulesPriorityGroupList().subscribe(\r\n      (response) => {\r\n        this.trmRulPriorGrpList = response;\r\n      }\r\n    )\r\n  }\r\n  onTabChange(event) {\r\n    this.index = event.index;\r\n    this.expressionForEdit.type = this.expressionTypes[this.index];\r\n  }\r\n\r\n  onExpressionEdit(rowdata: any) {\r\n    //this.reset();\r\n    //this.expressionList = rowdata.expression;\r\n    if (this.expressionName === 'Expression') {\r\n      this.expressionsEdit(rowdata);\r\n    }\r\n    if (this.expressionName === 'Validation') {\r\n      this.showExpression = false;\r\n      this.validationEdit(rowdata);\r\n    }\r\n    if (this.expressionName === 'Industry') {\r\n      this.isOverrideExpressionForEdit = true;\r\n      this.entityOverrides = [];\r\n      this.addAnotherIndustryOverride();\r\n      this.industryEdit(rowdata);\r\n      this.expressionSets = [];\r\n      this.formulaSets = [];\r\n      this.AddExpressionSet();\r\n      this.expressionsEdit(rowdata);\r\n      this.editExpression = false;\r\n    }\r\n    if (this.expressionName === 'Derived') {\r\n      this.derivedZeroExpressionForEdit = this.termRule.derivedZeroExpressions[rowdata.rank - 1];\r\n      if (rowdata.type == 'NoteBlockExistsCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'NoteBlockExistsCheck'\r\n        this.activeExpressionTabIndex = 0;\r\n      }\r\n      if (rowdata.type == 'DependentTermCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'DependentTermCheck'\r\n        this.activeExpressionTabIndex = 1;\r\n      }\r\n      if (rowdata.type == 'ExclusiveTermCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'ExclusiveTermCheck'\r\n        this.activeExpressionTabIndex = 2;\r\n      }\r\n      if (rowdata.type == 'IndustryExclusionCheck') {\r\n        this.derivedZeroExpressionForEdit.type = 'IndustryExclusionCheck'\r\n        this.activeExpressionTabIndex = 3;\r\n      }\r\n\r\n      this.addEditDerived = true;\r\n      this.prepareDerivedZeroExpressionForEdit();\r\n    }\r\n  }\r\n  industryEdit(rowdata: any) {\r\n    this.addEditIndustry = true;\r\n    this.editOverrideExpression(rowdata);\r\n  }\r\n\r\n  validationEdit(rowdata: any) {\r\n    this.addEditValidation = true;\r\n    this.addvalidation = false;\r\n    this.formulaFilteredTerms = this.termRuleLists;\r\n    this.validationRank = rowdata.rank;\r\n    if (rowdata.expression) {\r\n      this.convertExpressionToFormula(rowdata.expression);\r\n    } else {\r\n      this.formulaSets = [];\r\n      this.formulaOperatorsList;\r\n      this.addAnotherFormula();\r\n    }\r\n  }\r\n  getconceptNameDefinition() {\r\n    if (this.concMatch.id) {\r\n      this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n        this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  expressionsEdit(rowdata: any) {\r\n    this.index = 0;\r\n    this.conceptNameDefinition = \"\";\r\n    this.conceptMatchMultipleList = [];\r\n    this.conceptMatchMultiple = [];\r\n    // this.addAnotherConcept();\r\n    this.concMatch = {};\r\n    //this.expressionForEdit =new EditExpression;\r\n    this.expressionForEdit = rowdata;\r\n    if (rowdata.type == 'ConceptMatch') {\r\n      this.index = 0;\r\n    }\r\n    if (rowdata.type == 'ConceptMatchWithDim') {\r\n      this.index = 1;\r\n    }\r\n    if (rowdata.type == 'ExtendedCheck') {\r\n      this.index = 2;\r\n    }\r\n    if (rowdata.type == 'ExtendedCheckWithDim') {\r\n      this.index = 3;\r\n    }\r\n    if (rowdata.type == 'Formula') {\r\n      this.index = 4;\r\n    }\r\n    if (rowdata.type == 'ConceptMatchMultiple') {\r\n      this.index = 5;\r\n    }\r\n\r\n    this.conceptMatchExpression(rowdata);\r\n    this.conceptMatchWithDim(rowdata);\r\n    this.editExtendedCheck(rowdata);\r\n    this.editExtendedCheckWithDim(rowdata);\r\n    this.editFormula(rowdata);\r\n    this.editConceptMultiple(rowdata);\r\n    this.editExpression = true;\r\n  }\r\n  reset() {\r\n    this.concMatch = {};\r\n    this.usePositiveFacts = false;\r\n    this.useNegativeFacts = false;\r\n    this.revNegativeFacts = false;\r\n    this.axis = null\r\n    this.virtualFactMemberExclusions = [];\r\n    this.axes = null\r\n    this.useMaxAxisCount = null;\r\n    this.maxAxisCount = 0;\r\n    this.expressionSets = [];\r\n    this.nameContains = [];\r\n    this.nameDoesNotContains = [];\r\n    this.balType = null;\r\n    this.perType = null;\r\n    this.isShareItemType = false;\r\n    this.divSector = null;\r\n    this.industry = null;\r\n    this.filerCategory = null;\r\n    this.editExpression = false;\r\n    this.axes = null;\r\n    this.axesMembers = null;\r\n    this.formulaSets = [];\r\n    this.conceptMatchMultipleList = [];\r\n    this.overrideName = null;\r\n    this.mergeBaseExpressions = true;\r\n    this.entityOverrides = [];\r\n\r\n  }\r\n\r\n  conceptMatchExpression(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatch') {\r\n      if (rowdata.type === 'ConceptMatch') {\r\n        this.concMatch = rowdata.expression.replace(\"{\", \"\");\r\n        this.concMatch = { 'id': this.concMatch.replace('}', \"\") };\r\n        this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n          this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n        });\r\n      }\r\n      this.usePositiveFacts = rowdata.usePositiveValuesOnly;\r\n      this.useNegativeFacts = rowdata.useNegativeValuesOnly;\r\n      this.revNegativeFacts = rowdata.reverseNegativeValues;\r\n      this.axis = rowdata.virtualFactAxis;\r\n      this.virtualFactMemberExclusions = rowdata.virtualFactMemberExclusionList;\r\n    }\r\n  }\r\n  conceptMatchWithDim(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatchWithDim') {\r\n      if (rowdata.type === 'ConceptMatchWithDim') {\r\n        this.concMatch = rowdata.expression.replace(\"{\", \"\");\r\n        this.concMatch = { 'id': this.concMatch.replace('}', \"\") };\r\n        this.utilService.getTaxonomyElement(this.concMatch.id).subscribe((response) => {\r\n          this.conceptNameDefinition = response.elementDefaultLabel + \"\\n\" + response.elementDefinitionUS;\r\n        });\r\n      }\r\n      this.useMaxAxisCount = rowdata.useMaxAxisCount;\r\n      this.maxAxisCount = rowdata.maxAxisCount;\r\n      if (!rowdata.dimensionExpressionSets && rowdata.dimensionExpressionSets == null) {\r\n        this.expressionSets = [];\r\n        this.AddExpressionSet();\r\n      } else {\r\n        //this.expressionSets = rowdata.dimensionExpressionSets;\r\n        this.expressionSets = [];\r\n        rowdata.dimensionExpressionSets.forEach(expSet => {\r\n          expSet.axisInclusionListAsString = this.arrayToExpression(expSet.axisInclusionList, \"\\n\", false, false);\r\n          expSet.axisExclusionListAsString = this.arrayToExpression(expSet.axisExclusionList, \"\\n\", false, false);\r\n          expSet.memberInclusionListAsString = this.arrayToExpression(expSet.memberInclusionList, \"\\n\", false, false);\r\n          expSet.memberExclusionListAsString = this.arrayToExpression(expSet.memberExclusionList, \"\\n\", false, false);\r\n          if (expSet.memberInclusionListAsString || expSet.memberExclusionListAsString) {\r\n            expSet.disableMember = true;\r\n            expSet.disableMemInc = false;\r\n          }\r\n          if (expSet.axisExclusionListAsString || expSet.axisInclusionListAsString) {\r\n            expSet.disableAxes = true;\r\n            expSet.disableAxesInc = false;\r\n          }\r\n          this.expressionSets.push(expSet);\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n  editExtendedCheck(rowdata: any) {\r\n    if (rowdata.type === 'ExtendedCheck') {\r\n      this.nameContains = this.splitTextToArray(rowdata.containsWords, \"\\n\")\r\n      this.nameDoesNotContains = this.splitTextToArray(rowdata.doesNotContainsWords, \"\\n\")\r\n      this.balType = rowdata.balType;\r\n      this.perType = rowdata.perType;\r\n      this.isShareItemType = rowdata.isShareItemType;\r\n\r\n    }\r\n\r\n  }\r\n  editExtendedCheckWithDim(rowdata: any) {\r\n    if (rowdata.type === 'ExtendedCheckWithDim') {\r\n      this.nameContains = this.splitTextToArray(rowdata.containsWords, \"\\n\")\r\n      this.nameDoesNotContains = this.splitTextToArray(rowdata.doesNotContainsWords, \"\\n\")\r\n      this.balType = rowdata.balType;\r\n      this.perType = rowdata.perType;\r\n      this.isShareItemType = rowdata.isShareItemType;\r\n      this.axes = this.arrayToExpression(rowdata.NamedAxisList, \"\\n\", false, false);\r\n      this.axesMembers = this.arrayToExpression(rowdata.NamedMemberList, \"\\n\", false, false);\r\n    }\r\n  }\r\n  editFormula(rowdata: any) {\r\n    this.formulaSets = [];\r\n    this.formulaFilteredTerms = this.termRuleLists;\r\n    if (rowdata.type === 'Formula') {\r\n\r\n      if (rowdata.formulaList) {\r\n        rowdata.formulaList.forEach(obj => {\r\n          var formula = { termName: obj.termName, nullable: obj.nullable, operation: { name: obj.operation } };\r\n          this.formulaSets.push(formula);\r\n        })\r\n      }\r\n    } else {\r\n\r\n      this.formulaOperatorsList;\r\n      this.addAnotherFormula();\r\n    }\r\n\r\n\r\n  }\r\n  editConceptMultiple(rowdata: any) {\r\n    if (rowdata.type === 'ConceptMatchMultiple') {\r\n      this.conceptMatchMultiple = [];\r\n      this.conceptMatchMultipleList = [];\r\n      if (!rowdata.conceptMatchMultipleList) {\r\n        this.addAnotherConcept();\r\n      }\r\n      else {\r\n        rowdata.conceptMatchMultipleList.forEach(obj => {\r\n          this.conceptMatchMultipleList.push(obj);\r\n          this.conceptMatchMultiple.push({ id: obj });\r\n        })\r\n      }\r\n    }\r\n  }\r\n  addAnotherFormula() {\r\n    var formula = { termName: \"\", nullable: false, operation: \"\" };\r\n    this.formulaSets.push(formula);\r\n  }\r\n\r\n  AddExpressionSet() {\r\n    var termExpressionSet: any = {};\r\n    termExpressionSet.axisType = \"ExactMatch\";\r\n    termExpressionSet.memberType = \"ExactMatch\";\r\n    termExpressionSet.disableAxes = false;\r\n    termExpressionSet.disableMember = false;\r\n    termExpressionSet.disableAxesInc = true;\r\n    termExpressionSet.disableMemInc = true;\r\n    termExpressionSet.axisInclusionListAsString = \"\";\r\n    termExpressionSet.axisExclusionListAsString = \"\";\r\n    termExpressionSet.axisInclusionList = [];\r\n    termExpressionSet.axisExclusionList = [];\r\n    termExpressionSet.memberName = \"\";\r\n    termExpressionSet.axisName = \"\";\r\n    termExpressionSet.memberInclusionListAsString = \"\";\r\n    termExpressionSet.memberExclusionListAsString = \"\";\r\n    termExpressionSet.memberInclusionList = [];\r\n    termExpressionSet.memberExclusionList = [];\r\n    this.expressionSets.push(termExpressionSet);\r\n  }\r\n  removeSet(index) {\r\n    this.expressionSets.splice(index, 1);\r\n  };\r\n\r\n  addAnotherConcept() {\r\n\r\n    if (!this.conceptMatchMultipleList) {\r\n      this.conceptMatchMultipleList = [];\r\n    }\r\n    var conceptExpression = \"\";\r\n    this.conceptMatchMultipleList.push(conceptExpression);\r\n  };\r\n  deleteConceptMatchMultipleItem(index) {\r\n    this.conceptMatchMultipleList.splice(index, 1);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  getTermBasedOnId(id: string) {\r\n    this.showError = false;\r\n    this.homeService.getTermRule(id).subscribe(\r\n      (response) => {\r\n        this.termRule = response;\r\n        this.definition = response.description\r\n        this.termCode = response.termId;\r\n        if (this.termCode != \"\") {\r\n          this.enableTermCode = true;\r\n        } else {\r\n          this.enableTermCode = false;\r\n        }\r\n        this.termName = response.name;\r\n        this.periodType = { name: response.periodType };\r\n        this.type = { name: response.type };\r\n        this.incAccuTest = response.includeInAccuracyTests;\r\n        this.finStatement = { financialStatement: response.financialStatement };\r\n        this.priorgroup = { name: response.priorityGroup };\r\n        this.processingOrder = response.order;\r\n        this.expTableList = response.expressions;\r\n        this.expLabel = 'Add Expression';\r\n        this.expressionList = []\r\n        this.expressionList = response.expressions;\r\n        this.validationList = [];\r\n        if (response.validationExpressions)\r\n          response.validationExpressions.forEach(obj => {\r\n            obj.type = 'V';\r\n            this.validationList.push(obj);\r\n          })\r\n        // this.validationList = response.validationExpressions;\r\n        this.indOvrrideList = [];\r\n        this.indOvrrideList = response.overrides;\r\n        this.dervdZroExpList = [];\r\n        this.dervdZroExpList = response.derivedZeroExpressions;\r\n      }\r\n    )\r\n\r\n  }\r\n  onExpressionButtonClick(type: string) {\r\n    this.indovrDrpList = [];\r\n    this.indOvrdExprDrop = false;\r\n    this.selIndOvrdExpr = null;\r\n    if (type == 'expressions') {\r\n      this.expTableList = this.expressionList;\r\n      this.expLabel = 'Add Expression';\r\n      this.expressionName = 'Expression'\r\n      return;\r\n    }\r\n    if (type == 'validations') {\r\n      this.expTableList = this.validationList;\r\n      this.expressionName = 'Validation'\r\n      this.expLabel = 'Add Validations';\r\n      return;\r\n    }\r\n    if (type == 'industry') {\r\n      this.expTableList = [];\r\n      if (this.indOvrrideList[0] != null) {\r\n        this.indOvrrideList.forEach(obj => {\r\n          this.expTableList = this.indOvrrideList[0].expressions;\r\n          this.indovrDrpList.push({ \"name\": obj.name });\r\n        })\r\n        this.selIndOvrdExpr = this.indovrDrpList[0].name;\r\n        this.indOvrdExprDrop = true;\r\n      }\r\n      this.expressionName = 'Industry'\r\n      this.expLabel = 'Add Industry Override Expressions';\r\n      return;\r\n    }\r\n    if (type == 'derived') {\r\n      this.expTableList = this.dervdZroExpList;\r\n      this.expressionName = 'Derived'\r\n      this.expLabel = 'Add Derived Zero Expressions';\r\n      return;\r\n    }\r\n  }\r\n  industryChange() {\r\n    this.selIndOvrdExpr;\r\n    this.indOvrrideList.forEach(obj => {\r\n      if (this.selIndOvrdExpr.name == obj.name) {\r\n        this.expTableList = obj.expressions;\r\n      }\r\n    })\r\n  }\r\n  expressionClick() {\r\n    this.reset();\r\n    if (this.expLabel === 'Add Expression') {\r\n      this.expressionName = 'Expression'\r\n      this.addingExpression();\r\n    }\r\n    if (this.expLabel === 'Add Validations') {\r\n      this.expressionName = 'Validation'\r\n      this.addValidations();\r\n    }\r\n    if (this.expLabel === 'Add Industry Override Expressions') {\r\n      this.expressionName = 'Industry'\r\n      this.entityOverrides = [];\r\n      this.addAnotherIndustryOverride();\r\n      this.addOverrideExpression();\r\n      this.addEditIndustry = true;\r\n\r\n    }\r\n    if (this.expLabel === 'Add Derived Zero Expressions') {\r\n      this.expressionName = 'Derived'\r\n      this.addDerivedZeroExpression();\r\n\r\n    }\r\n  }\r\n  deleteFormula(index) {\r\n    this.formulaSets.splice(index, 1);\r\n  }\r\n\r\n  goToPeer(event) {\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n    this.company = null;\r\n    if (this.companyName != undefined && this.companyName.length > 15) {\r\n      this.company = this.companyName.substr(0, this.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n        this.division = peer[0].division;\r\n        this.sector = peer[0].sector;\r\n        this.divSector = peer[0].division + ' -> ' + peer[0].sector;\r\n        this.divSectorChange(this.divSector)\r\n        this.industry = peer[0].sic + '-' + peer[0].industry;\r\n        this.processIndustryChange(this.industry);\r\n        this.filerCategory = peer[0].filerCategory;\r\n        this.processfilCatChange(this.filerCategory);\r\n        this.filterRadio = 'group';\r\n    } else {\r\n      window.scroll(0, 0);\r\n      this.errorMsg = 'Please Select Company';\r\n      this.showError = true;\r\n\r\n    }\r\n\r\n  }\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i];\r\n      if ((cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.toLowerCase().includes(event.query.toLowerCase()))) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchIndustry(event) {\r\n    this.filteredindustry = [];\r\n    for (let i = 0; i < this.industryList.length; i++) {\r\n      let cname: string = this.industryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredindustry.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchDivisionSector(event) {\r\n    this.filtereddivSector = [];\r\n    for (let i = 0; i < this.divSectorList.length; i++) {\r\n      let cname: string = this.divSectorList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filtereddivSector.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  derivedDivisionSeleted(event) {\r\n    this.deriveddivSector;\r\n    console.log(event.value);\r\n    if (event.value) {\r\n      var division = event.value.substr(0, event.value.indexOf('->') - 1);\r\n      var sector = event.value.substr(event.value.indexOf('->') + 3, event.value.length);\r\n      this.setExcDivSec(division, sector);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  industryChanged(event) {\r\n    console.log(event.value);\r\n    var sic = event.value.substr(0, 4)\r\n    var completeEntities = this.completeEntities.filter(obj => obj.sic === sic);\r\n    this.industryCount = completeEntities.length\r\n    this.categoryCount = completeEntities.length;\r\n  }\r\n\r\n\r\n  searchFilerCategory(event) {\r\n    this.filteredfilerCategory = [];\r\n    for (let i = 0; i < this.filerCategoryList.length; i++) {\r\n      let cname: string = this.filerCategoryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredfilerCategory.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchTermNames(event) {\r\n    this.formulaFilteredTerms = [];\r\n    for (let i = 0; i < this.termRuleLists.length; i++) {\r\n      let cname: string = this.termRuleLists[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.formulaFilteredTerms.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  resetCoverage()  {\r\n    this.companyName = undefined;\r\n    this.divSector = undefined;\r\n    this.filterRadio = undefined;\r\n    this.division = undefined;\r\n    this.sector = undefined;\r\n    this.industry = undefined;\r\n    this.divisionCount = this.completeCompanyList.length;\r\n    this.industryCount = null;\r\n    this.categoryCount = null;\r\n    this.startYear = (new Date()).getFullYear()-4;\r\n    this.endYear = (new Date()).getFullYear();\r\n    this.filerCategory = undefined;\r\n    this.entityList = [];\r\n    this.chart = {};\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n\r\n  }\r\n  showResolved(isShow) {\r\n    let mp = new MappedEntity();\r\n    let url = '/api/UnMappedEntitiesForCriteria';\r\n    if (isShow) {\r\n      url = '/api/MappedEntitiesForCriteria';\r\n    } else {\r\n      this.selectResolvedRank = undefined;\r\n    }\r\n\r\n\r\n    //url = '/api/UnMappedEntitiesForCriteria';\r\n    mp.termRuleId = this.termId;\r\n    this.showError = false;\r\n    if (this.filterRadio !== 'group' && this.companyName != undefined && this.companyName.length > 15) {\r\n      var selectionData = this.companyName\r\n      selectionData = selectionData.substring((selectionData.indexOf(\"(\") + 1), selectionData.indexOf(\")\"))\r\n      var entities = this.completeCompanyList.filter(obj => obj.entityId === selectionData);\r\n      var company = entities.length == 1 ? entities[0] : null;\r\n      if(!company) {\r\n        this.errorMsg = 'Please select a company, division->Sector or Filer Category before getting coverage statistics.';\r\n        this.showError = true;\r\n        window.scroll(0, 0);\r\n        return;\r\n      } else {\r\n        mp.entityId = company.entityId;\r\n      }\r\n    } if (this.filterRadio === 'group' && (this.divSector === undefined)) {\r\n      this.errorMsg = 'Please select a company, division->Sector or Filer Category before getting coverage statistics.';\r\n      this.showError = true;\r\n      window.scroll(0, 0);\r\n      return;\r\n    }\r\n    this.displayGetCoverage = true;\r\n\r\n    if (this.filterRadio === 'group' && this.division != undefined && this.sector != undefined) {\r\n      mp.division = this.division;\r\n      mp.sector = this.sector;\r\n    } if (this.filterRadio === 'group' && this.divSector != '' && this.divSector != undefined) {\r\n      mp.division = this.divSector.substr(0, this.divSector.indexOf('->') - 1);\r\n      mp.sector = this.divSector.substr(this.divSector.indexOf('->') + 3, this.divSector.length);\r\n      mp.entityId = 'NULL';\r\n\r\n      mp.filerCategory = this.filerCategory;\r\n      mp.rankId = 0;\r\n      mp.minYear = this.startYear;\r\n      mp.maxYear = this.endYear;\r\n    } else {\r\n\r\n      mp.division = \"settoinvalid\";\r\n      mp.sector = \"settoinvalid\";\r\n    } if (this.industry != undefined) {\r\n      mp.sic = this.industry.substr(0, 4);\r\n      mp.includeQuarterly = true;\r\n    } else {\r\n      mp.sic = 'NULL';\r\n      mp.filerCategory = 'NULL';\r\n      mp.includeQuarterly = this.quaterly;\r\n    }\r\n    if (this.selectResolvedRank) {\r\n      mp.rankId = Number(this.selectResolvedRank);\r\n    }\r\n    this.homeService.getMappedEntityList(mp, this.chartUrl).subscribe(\r\n      (response) => {\r\n        this.chartData = response;\r\n        this.resolvedRanks = [];\r\n        this.chartData.resultsByRank.forEach(obj => {\r\n          var name = { label: obj, value: obj };\r\n          var ranks = { label: 'Rank ' + obj.rankId + ' (' + obj.nonDistinctMappedEntityCount + ')', value: obj.rankId };\r\n          this.resolvedRanks.push(ranks);\r\n        })\r\n        this.getChartData(this.chartData);\r\n      })\r\n    this.homeService.getMappedEntityList(mp, url).subscribe(\r\n      (response) => {\r\n        this.entityList = response;\r\n        if (response.length === 0) {\r\n          this.homeService.getMappedEntityList(mp, '/api/UnMappedEntitiesForCriteria').subscribe(\r\n            (response) => {\r\n              this.entityList = response;\r\n              this.entityList.forEach(obj => {\r\n                obj.show = false;\r\n              })\r\n\r\n            })\r\n        } else {\r\n          this.entityList.forEach(obj => {\r\n            obj.show = true;\r\n          })\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  showNotResolved() {\r\n    this.displayGetCoverage = true;\r\n  }\r\n\r\n  getChartData(data: any) {\r\n    this.showError = false;\r\n    this.chart = {\r\n      labels: ['Unresolved', 'Resolved'],\r\n      datasets: [\r\n        {\r\n          data: [data.unMappedEntityCount, data.mappedEntityCount],\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\"\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\"\r\n          ]\r\n        }]\r\n    };\r\n  }\r\n  getFormulaSuffix(formula) {\r\n\r\n    if (formula.nullable && formula.nullable === true) {\r\n      return \"=0 \" + formula.operation;\r\n    }\r\n    return formula.operation;\r\n  }\r\n\r\n  showTermResultnavigate(event, data) {\r\n    console.log(data)\r\n\r\n    if (data !== undefined) {\r\n      console.log('selected: ' + data);\r\n      event.preventDefault();\r\n      var term = this.getTermIdFromTermName(data)\r\n      this.termId = term;\r\n      this.displayTerms = true;\r\n      this.displayGetCoverage = false;\r\n      this.entitycols = this.home.homeEntityCols();\r\n      this.getTermBasedOnId(term);\r\n      console.log(term)\r\n    }\r\n  }\r\n\r\n  showTermResults(data) {\r\n    this.router.navigate(['/termresults'],\r\n      {\r\n        state:\r\n        {\r\n          termName: this.termCode,\r\n          entityId: data.entityId,\r\n          companyName: data.companyName\r\n        }\r\n      })\r\n  }\r\n\r\n  getTermIdOrEntityName(inputValue: string): string {\r\n    let outputValue: string = inputValue.substring((inputValue.indexOf(\"(\") + 1), inputValue.indexOf(\")\"));\r\n    return outputValue;\r\n  }\r\n\r\n  getTermIdFromTermName(termName) {\r\n\r\n    for (var i = 0; i < this.termRulesList.length; i++) {\r\n      var termRule = this.termRulesList[i];\r\n      if (termRule.name === termName) {\r\n        return termRule.termId;\r\n      }\r\n\r\n    }\r\n    return \"LSE\";\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  moveRankBy(index, amount) {\r\n    this.msgs = [];\r\n    let e1 = Object.assign(this.expressionList[index])\r\n    let e2 = Object.assign(this.expressionList[index + amount])\r\n\r\n\r\n    console.log(\"e1:\" + e1);\r\n    console.log(\"e2:\" + e2);\r\n\r\n    console.log(e1.rank + \" will be moved to \" + e2.rank);\r\n    e2.rank = index + 1;\r\n    e1.rank = index + amount + 1;\r\n    this.expressionList[index] = e2;\r\n    this.expressionList[index + amount] = e1;\r\n\r\n    //utilService.saveTerm(\"Expression Rank \" + e2.rank + \" moved to \" + e1.rank);\r\n    // updateExpressionTableParams(rule);\r\n\r\n  };\r\n\r\n  addTerm() {\r\n    this.showError = false;\r\n    this.msgs = [];\r\n    this.newTerm = true;\r\n    this.refresh();\r\n    this.definition = '';\r\n    this.termCode = '';\r\n    this.termName = '';\r\n    this.periodType = { name: '' };\r\n    this.type = { name: '' };\r\n    this.incAccuTest = false;\r\n    this.finStatement = { financialStatement: '' };\r\n    this.priorgroup = { name: '' };\r\n    this.processingOrder = '';\r\n    this.termRule = this.rule;\r\n\r\n  }\r\n  processTermnow() {\r\n    this.refresh();\r\n    this.processnow = true;\r\n    if (this.divisionCount === 0) {\r\n      this.divisionCount = this.completeCompanyList.length;\r\n    }\r\n    this.enableTermCode = true;\r\n    this.displayTerms = true;\r\n    this.displayGetCoverage = true;\r\n    if (this.termCode != '') {\r\n      this.enableTermButton = false;\r\n    }\r\n\r\n  }\r\n\r\n  divSectorChange(event) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    event = event.value ? event.value : event;\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    this.industryCount = this.completeEntities.length;\r\n    this.categoryCount = this.completeEntities.length;;\r\n    // if(this.derivedZeroExpressionForEdit.industry) {\r\n    //   var completeEntities = this.completeEntities.filter(obj => obj.sic === this.derivedZeroExpressionForEdit.industry);\r\n    //   this.sectorCount = completeEntities.length\r\n    // }\r\n  }\r\n  processIndustryChange(event) {\r\n    event = event.value ? event.value : event;\r\n    event = event.substring(0, 4);\r\n    var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n    this.industryCount = completeEntities.length;\r\n    this.categoryCount = completeEntities.length;\r\n  }\r\n\r\n  processfilCatChange(event) {\r\n    event = event.value ? event.value : event;\r\n    var completeEntities = this.completeEntities.filter(obj =>\r\n      obj.filerCategory === event && obj.sic === this.industry.substr(0, 4));\r\n    this.industryCount = completeEntities.length\r\n    this.categoryCount = completeEntities.length;\r\n  }\r\n\r\n\r\n  processNow() {\r\n    this.refresh();\r\n    if (this.companyName && this.divSector && this.division && this.sector) {\r\n      this.processTermRule();\r\n      window.scroll(0, 0);\r\n      return;\r\n    } else {\r\n\r\n      this.confirmationService.confirm({\r\n        message: 'Are you sure you want to process all entities for the selected term?',\r\n        header: 'Processing Term Rule ' + this.termId,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          //this.msgs = [{severity:'info', summary:'Process Term', detail:'Process Term'}];\r\n          this.processTermRule();\r\n\r\n        },\r\n        reject: () => {\r\n          //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n        }\r\n      });\r\n    }\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  removeTerm() {\r\n    this.refresh();\r\n    this.confirmationService.confirm({\r\n      message: 'Term Rule will be removed, are you sure?',\r\n      header: 'Remove Rule ' + this.termId,\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n\r\n        this.utilService.removeTerm(this.termId).subscribe((response) => {\r\n          if (response.errorMessage) {\r\n            this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: response.errorMessage }];\r\n          } else {\r\n            this.msgs = [{ severity: 'info', summary: '', detail: 'Term Rule Removed' }];\r\n          }\r\n          console.log(\"Remove Term  completed \")\r\n          this.selectedTerm = null;\r\n          this.termTree = [];\r\n          this.getRuleList();\r\n        },\r\n          (error) => console.log(error)\r\n        )\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n  }\r\n\r\n  saveTerm() {\r\n    this.showError = false;\r\n    if (!this.newTerm && this.termRule.termId != '') {\r\n      this.termRule.expressions = this.expressionList;\r\n    }\r\n    this.termRule.termId = this.termCode;\r\n    this.termRule.name = this.termName\r\n    this.termRule.description = this.definition;\r\n    this.termRule.includeInAccuracyTests = this.incAccuTest;\r\n    if (this.periodType.name === '') {\r\n      this.termRule.periodType = null;\r\n    } else {\r\n      this.termRule.periodType = this.periodType.name;\r\n\r\n    }\r\n    if (this.type.name === '') {\r\n      this.termRule.type = null;\r\n    } else {\r\n      this.termRule.type = this.type.name;\r\n\r\n    }\r\n    if (this.finStatement.financialStatement === '') {\r\n      this.termRule.financialStatement = null;\r\n    } else {\r\n      this.termRule.financialStatement = this.finStatement.financialStatement;\r\n\r\n    }\r\n    if (this.priorgroup.name === '') {\r\n      this.termRule.priorityGroup = null;\r\n    } else {\r\n      this.termRule.priorityGroup = this.priorgroup.name;\r\n\r\n    }\r\n\r\n    this.utilService.saveTerm(this.termRule).subscribe((response) => {\r\n      console.log(\"Save Term  completed \")\r\n      this.msgs = [{ severity: 'info', summary: 'Term', detail: this.termRule.termId + ' saved successfully' }];\r\n      this.termTree = [];\r\n      this.getRuleList();\r\n      //return;\r\n    },\r\n      (error) => {\r\n        console.log(error)\r\n        this.msgs = [{ severity: 'danger', summary: 'Term Rule Save Failed' }];\r\n        return;\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n  refresh() {\r\n    this.processnow = false;\r\n    this.msgs = [];\r\n    // this.displayTerms = false;\r\n    // this.displayGetCoverage = false;\r\n    this.showError = false;\r\n    this.enableTermButton = true;\r\n    this.enableTermCode = false;\r\n\r\n  }\r\n  processTermRule() {\r\n    console.log(\"process Rule : \" + JSON.stringify(this.termId));\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: 'Started processing for ' + this.termName, detail: '' }];\r\n    if (this.divSector && this.filerCategory && this.industry) {\r\n      var sic = \"NULL\";\r\n      if (this.industry) {\r\n        sic = this.industry.substr(0, this.industry.indexOf('-'));\r\n      }\r\n      var filerCategory = \"NULL\";\r\n      if (this.filerCategory) {\r\n        filerCategory = this.filerCategory;\r\n      }\r\n      var division = \"NULL\";\r\n      var sector = \"NULL\";\r\n      if (this.divSector) {\r\n        division = this.divSector.substr(0, this.divSector.indexOf('->') - 1);\r\n        sector = this.divSector.substr(this.divSector.indexOf('->') + 3, this.divSector.length);\r\n\r\n      }\r\n      this.utilService.processTermForCriteria(this.termCode, division, sector, sic, filerCategory).subscribe((response) => {\r\n        if (!response.data) {\r\n          window.scroll(0, 0);\r\n          this.msgs = [{ severity: 'info', summary: 'Term processing for' + this.termName, detail: ' processed successfully' }];\r\n          this.progressSpinner = false;\r\n\r\n        } else {\r\n          window.scroll(0, 0);\r\n          this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed' + this.termName, detail: '' }];\r\n          this.progressSpinner = false;\r\n\r\n        }\r\n\r\n\r\n      }, function (err) {\r\n\r\n      }\r\n      );\r\n    } else {\r\n\r\n      if (this.isAdminUser) {\r\n        //we can allow admin users to process all entities for a given term....\r\n        this.processTermRuleAdmin();\r\n        return;\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Please select a division->Sector or Filer Category before processing Term Rule.', detail: '' }];\r\n        this.progressSpinner = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    // adminProcessAllTermsClicked('#processTermForCriteria');\r\n\r\n\r\n  };\r\n\r\n  processTermRuleAdmin() {\r\n    this.utilService.processTerm(this.termRule).subscribe((response) => {\r\n      if (!response.data) {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Term processing for ' + this.termName, detail: 'processed successfully' }];\r\n        this.progressSpinner = false;\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed for ' + this.termName, detail: ' ' }];\r\n        this.progressSpinner = false;\r\n      }\r\n    }, function (err) {\r\n    }\r\n    );\r\n\r\n  }\r\n\r\n  filterConceptMatch(event) {\r\n    this.conceptMatch(event.query.toLowerCase())\r\n  }\r\n\r\n  conceptMatch(q: string) {\r\n    this.utilService.getTaxonomyElements(q, false).subscribe((response) => {\r\n      this.filteredconcMat = response;\r\n    })\r\n  }\r\n\r\n  OnExpressionAxisTypeChanged(index) {\r\n    var expSet = this.expressionSets[index];\r\n    if (this.expressionSets[index].axisType === \"ExactMatch\") {\r\n      this.expressionSets[index].axisInclusionListAsString = \"\";\r\n      this.expressionSets[index].axisExclusionListAsString = \"\";\r\n      this.expressionSets[index].axisInclusionList = [];\r\n      this.expressionSets[index].axisExclusionList = [];\r\n    } else {\r\n      this.expressionSets[index].axisName = \"\";\r\n    }\r\n    //this.expressionSets[index] = expSet;\r\n  };\r\n\r\n  OnExpressionMemberTypeChanged(index) {\r\n\r\n    var expSet = this.expressionSets[index];\r\n\r\n    if (this.expressionSets[index].memberType === \"Any\") {\r\n      this.expressionSets[index].memberName = \"\";\r\n      this.expressionSets[index].memberInclusionListAsString = \"\";\r\n      this.expressionSets[index].memberExclusionListAsString = \"\";\r\n      this.expressionSets[index].memberInclusionList = [];\r\n      this.expressionSets[index].memberExclusionList = [];\r\n    } else if (this.expressionSets[index].memberType === \"ExactMatch\") {\r\n      this.expressionSets[index].memberInclusionListAsString = \"\";\r\n      this.expressionSets[index].memberExclusionListAsString = \"\";\r\n      this.expressionSets[index].memberInclusionList = [];\r\n      this.expressionSets[index].memberExclusionList = [];\r\n    } else {\r\n      this.expressionSets[index].memberName = \"\";\r\n    }\r\n  };\r\n\r\n  buildListFromString(listAsString) {\r\n    return this.splitTextToArray(listAsString, \"\\n\");\r\n  };\r\n\r\n  splitTextToArray(textData, spliter) {\r\n    //console.log(\"TextArea to array : \" + textData + \", splitter : \" + spliter);\r\n    var strArray = [];\r\n    if (!textData) {\r\n      return strArray;\r\n    }\r\n    strArray = textData.toString().split(spliter);\r\n    //console.log(\"TextArea to array : result array: \" + JSON.stringify(strArray));\r\n    return strArray;\r\n  }\r\n\r\n  updateNameContains(nameContains) {\r\n    this.containsWords = this.splitTextToArray(nameContains, \"\\n\");\r\n\r\n  };\r\n\r\n  updateNameNotContains(nameNotContains) {\r\n    this.doesNotContainsWords = this.splitTextToArray(nameNotContains, \"\\n\");\r\n  };\r\n\r\n  resolve() {\r\n    // this.updateExpressionForEditFromTextArea();\r\n    var expressionObject: any = {};\r\n    expressionObject.type = this.expressionForEdit.type;\r\n    switch (this.expressionForEdit.type) {\r\n      case this.expressionTypes[2]:\r\n        {\r\n          expressionObject.expression = getExtendedCheckExpression(this.expressionForEdit);\r\n\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n          //extended check with dimension\r\n          expressionObject.expression = getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = getDimensionExpression(this.expressionForEdit);\r\n          expressionObject.axisExpression = dim.axisExpression;\r\n          expressionObject.memberExpression = dim.memberExpression;\r\n          break;\r\n        }\r\n    };\r\n    var getDimensionExpression = function (expression) {\r\n      var dim: any = {};\r\n      dim.memberExpression = this.arrayToExpression(expression.NamedMemberList, \" || \", \"{\", \"}\");\r\n      dim.axisExpression = this.arrayToExpression(expression.NamedAxisList, \" || \", \"{\", \"}\");\r\n      return dim;\r\n    };\r\n\r\n    var getExtendedCheckExpression = (expression) => {\r\n      var nameContainsExpr = this.arrayToExpression(expression.containsWords, \" && \", 'nameContains(', ')');\r\n      if (nameContainsExpr.indexOf('nameContains') >= 0) {\r\n        this.exprStr = this.exprStr + \" && \" + nameContainsExpr;\r\n      }\r\n      //console.log(\"name contains expression:  \" + this.exprStr);\r\n\r\n      var notContainsExpr = this.arrayToExpression(expression.doesNotContainsWords, \" && \", 'nameNotContains(', ')');\r\n\r\n      if (notContainsExpr.indexOf('nameNotContains') >= 0) {\r\n        this.exprStr = this.exprStr + \" && \" + notContainsExpr;\r\n      }\r\n\r\n      //console.log(\"name not contains expression:  \" + this.exprStr);\r\n\r\n      if (expression.balType === this.balanceTypes[0]) {\r\n        this.exprStr = this.exprStr + \" && isDebit\";\r\n      }\r\n      if (expression.balType === this.balanceTypes[1]) {\r\n        this.exprStr = this.exprStr + \" && isCredit\";\r\n      }\r\n      if (expression.balType === this.balanceTypes[2]) {\r\n        this.exprStr = this.exprStr + \" && isNA\";\r\n      }\r\n      if (expression.perType === this.rulePeriodTypes[0]) {\r\n        this.exprStr = this.exprStr + \" && isInstant\";\r\n      }\r\n      if (expression.perType === this.rulePeriodTypes[1]) {\r\n        this.exprStr = this.exprStr + \" && isDuration\";\r\n      }\r\n      if (expression.isShareItemType) {\r\n        this.exprStr = this.exprStr + \" && isShareItemType\";\r\n      }\r\n\r\n      // return exprStr;\r\n    };\r\n\r\n    //console.log(\"resolve - : \" + JSON.stringify( expressionObject));\r\n\r\n    this.getExtendedEntityLookup(this.filteredCompany, expressionObject);\r\n  };\r\n\r\n  getExtendedEntityLookup(companiesFilter, expression) {\r\n    //console.log(\"extended entity lookup call with : \" + JSON.stringify(companiesFilter) + \", expression:\" + JSON.stringify(expression) + \",TOKEN: \" + this.csrfToken);\r\n\r\n    var query: any = {};\r\n    query.sic = companiesFilter.sic;\r\n    query.division = companiesFilter.divisionSector.division;\r\n    query.sector = companiesFilter.divisionSector.sector;\r\n    query.filerCategory = companiesFilter.filerCategory;\r\n    query.expression = expression;\r\n\r\n    this.utilService.extendedEntityLookup(query).subscribe((response) => {\r\n      this.extendedEntitiesLookup = response.data\r\n    })\r\n  };\r\n\r\n  updateAxes(axes) {\r\n    //console.log(\"updateAxes: \" + this.axes + \" - \" + axes);\r\n    this.namedAxisList = this.splitTextToArray(axes, '\\n');\r\n  };\r\n\r\n  updateAxesMembers(axesMembers) {\r\n    this.namedMemberList = this.splitTextToArray(axesMembers, \"\\n\");\r\n  };\r\n\r\n\r\n  arrayToExpression(arrayData, splitter, prefix, suffix) {\r\n    if (!prefix) {\r\n      prefix = \"\";\r\n    }\r\n    if (!suffix) {\r\n      suffix = \"\";\r\n    }\r\n    //console.log(\"arrayToExpression with spliter: \" + splitter + \",prefix: \" + prefix + \", suffix: \" + suffix);\r\n    var textData: any[];\r\n    if (!arrayData) {\r\n      return textData;\r\n    }\r\n    for (var i = 0; i < arrayData.length; i++) {\r\n      //\r\n      var elem = arrayData[i].trim();\r\n      //console.log(\"word from array : \" + elem);\r\n      if (elem.length > 0) {\r\n        if (i === 0) {\r\n          textData = this.surroundTextWith(elem, prefix, suffix, false);\r\n        } else {\r\n          textData = textData + splitter + this.surroundTextWith(elem, prefix, suffix, false);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    //console.log(\"arrayToExpression converted expression : \" + textData);\r\n    return textData;\r\n  };\r\n\r\n  surroundTextWith(str, prefix, suffix, check) {\r\n    //console.log(\"surround text \" + str + \" with \" + prefix + \" and \"+ suffix);\r\n    if (!check) {\r\n      str = prefix + str + suffix;\r\n    } else {\r\n      var patt1 = new RegExp(\"^\" + prefix);\r\n      var patt2 = new RegExp(suffix + \"$\");\r\n      if (!patt1.test(str)) {\r\n        str = prefix + str;\r\n      }\r\n      if (!patt2.test(str)) {\r\n        str = str + suffix;\r\n      }\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  addingExpression() {\r\n    this.expressionForEdit = {};\r\n    this.conceptMatchMultipleList = [];\r\n    this.conceptMatchMultiple = [];\r\n    this.concMatch = {};\r\n    this.index = 0;\r\n    this.isOverrideExpressionForEdit = false;\r\n    this.expressionForEdit.expression = \"\";\r\n\r\n    // this.expressionForEdit.type = this.expressionTypes[0];\r\n    this.expressionForEdit.type = this.expressionTypes[this.index];\r\n    this.expressionForEdit.NamedAxisList = [];\r\n    this.expressionForEdit.useVirtualParentNew = true;\r\n    this.expressionForEdit.useMaxAxisCount = false;\r\n    this.expressionForEdit.maxAxisCount = 2;\r\n    this.expressionForEdit.NamedMemberList = [];\r\n    this.expressionForEdit.dimensionExpressionSets = [];\r\n    this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    this.expressionForEdit.containsWords = [];\r\n    this.expressionForEdit.doesNotContainsWords = [];\r\n    this.conceptNameDefinition = \"\";\r\n    this.formulaSets = [];\r\n    this.expressionSets = [];\r\n    this.AddExpressionSet();\r\n    this.addAnotherConcept();\r\n    this.addAnotherFormula();\r\n    this.editExpression = true;\r\n  };\r\n\r\n  saveExpression() {\r\n    this.saveValues(this.expressionForEdit);\r\n\r\n    if (!!this.formulaSets) {\r\n      for (var i = 0; i < this.formulaSets.length; i++) {\r\n        var formula = this.formulaSets[i];\r\n        if (this.formulaSets.length == 1 && formula.termName == \"\" && formula.nullable == false && formula.operation == \"\") {\r\n          break;\r\n        }\r\n        if (!formula.termName) {\r\n          this.errorMsg = 'Incomplete Formula\", \"Please complete Term Rule selection';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return;\r\n        } else {\r\n          if (i !== (this.formulaSets.length - 1) && !formula.operation) {\r\n            this.errorMsg = 'Incomplete Formula\", \"Please complete missing operation';\r\n            this.showError = true;\r\n            window.scroll(0, 0);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.expressionForEdit.type === this.expressionTypes[1]) {\r\n      if (this.validateDimensionalExpressions() === false)\r\n        return;\r\n    }\r\n\r\n    if (this.isOverrideExpressionForEdit) {\r\n      var overrideName = this.overrideName.name ? this.overrideName.name : this.overrideName;\r\n      if (!overrideName) {\r\n        this.errorMsg = 'Incomplete override information, Please provide an override name for the expression being added.';\r\n        this.showError = true;\r\n        window.scroll(0, 0);\r\n        return;\r\n      }\r\n      //verify that override name is populated...\r\n    }\r\n    switch (this.expressionForEdit.type) {\r\n\r\n      case this.expressionTypes[0]:\r\n        {\r\n          this.expressionForEdit.expression = this.getExpression();\r\n          this.expressionForEdit.conceptName = this.expressionForEdit.expression;\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[1]:\r\n        {\r\n          this.expressionForEdit.expression = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          this.expressionForEdit.conceptName = this.expressionForEdit.expression;\r\n\r\n\r\n          //cleanup old code...\r\n          this.expressionForEdit.axisExpression = null;\r\n          this.expressionForEdit.memberExpression = null;\r\n          this.expressionForEdit.NamedAxisList = null;\r\n          this.expressionForEdit.NamedMemberList = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[2]:\r\n        {\r\n          this.expressionForEdit.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n\r\n          //extended check with dimension\r\n          this.expressionForEdit.expression = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          this.expressionForEdit.axisExpression = dim.axisExpression;\r\n          this.expressionForEdit.memberExpression = dim.memberExpression;\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[4]:\r\n        {\r\n          //formula\r\n          this.expressionForEdit.expression = this.getFormulaExpression(this.expressionForEdit);\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n      case this.expressionTypes[5]:\r\n        {\r\n          //conceptmatchmultiple\r\n          this.expressionForEdit.expression = this.expressionForEdit.conceptMatchMultipleList.join(\"||\");\r\n          this.expressionForEdit.dimensionExpressionSets = null;\r\n          this.expressionSets = null;\r\n          break;\r\n        }\r\n\r\n    }\r\n    if (this.isOverrideExpressionForEdit) {\r\n      this.updateOverrideFromUIToRule();\r\n    } else {\r\n      if (!this.expressionForEdit.rank) {\r\n        this.expressionForEdit.rank = this.termRule.expressions.length + 1;\r\n        this.termRule.expressions.push(this.expressionForEdit);\r\n      } else {\r\n        var index = this.expressionForEdit.rank - 1;\r\n        this.termRule.expressions[index] = this.expressionForEdit;\r\n      }\r\n    }\r\n    // this.activeExpressionTabIndex = this.isOverrideExpressionForEdit ? 2 : 0;\r\n    this.saveTerm();\r\n    this.addEditIndustry = false;\r\n    this.editExpression = false;\r\n    this.addEditDerived = false;\r\n    window.scroll(0, 0);\r\n    this.msgs = [{ severity: 'info', summary: 'Saved Expression successfully' }];\r\n\r\n  }\r\n\r\n  getExpression() {\r\n    var exprStr = \"\";\r\n    switch (this.expressionForEdit.type) {\r\n      case this.expressionTypes[0]:\r\n        {\r\n          exprStr = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          break;\r\n        }\r\n      case this.expressionTypes[1]:\r\n        {\r\n          exprStr = this.surroundTextWith(this.concMatch.id, \"{\", \"}\", true);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          exprStr = exprStr + \", axisExpression:\" + dim.axisExpression + \", memberExpression:\" + dim.memberExpression;\r\n\r\n\r\n          break;\r\n        }\r\n      case this.expressionTypes[2]:\r\n        {\r\n          exprStr = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          break;\r\n        }\r\n      case this.expressionTypes[3]:\r\n        {\r\n          exprStr = this.getExtendedCheckExpression(this.expressionForEdit);\r\n          var dim = this.getDimensionExpression(this.expressionForEdit);\r\n          exprStr = exprStr + \", axisExpression:\" + dim.axisExpression + \", memberExpression:\" + dim.memberExpression;\r\n          break;\r\n        }\r\n      case this.expressionTypes[4]:\r\n        {\r\n\r\n          exprStr = this.getFormulaExpression(this.expressionForEdit);\r\n          break;\r\n        }\r\n      case this.expressionTypes[5]:\r\n        {\r\n\r\n          exprStr = this.expressionForEdit.conceptMatchMultipleList.join(\"||\");\r\n          break;\r\n        }\r\n\r\n\r\n    }\r\n    return exprStr;\r\n  }\r\n  getFormulaExpression = function (expr) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < expr.formulaList.length; i++) {\r\n      var formula = expr.formulaList[i];\r\n      if (!formula) {\r\n        continue;\r\n      }\r\n      var term = \"sec:\" + formula.termName;\r\n      if (!term) {\r\n        continue;\r\n      }\r\n      if (formula.nullable) {\r\n        term = term + \"=0\";\r\n      }\r\n      exprStr = exprStr + this.surroundTextWith(term, \"{\", \"}\", true);\r\n      if (formula.operation) {\r\n        var operation = formula.operation.name ? formula.operation.name : formula.operation;\r\n        exprStr = exprStr + \" \" + operation;\r\n      }\r\n\r\n    }\r\n    return exprStr;\r\n  }\r\n\r\n  saveValues(expression) {\r\n    // Concept Match\r\n    if (this.concMatch) {\r\n      this.expressionForEdit.conceptName = this.concMatch.id !== undefined ? this.concMatch.id : null;\r\n    }\r\n    this.expressionForEdit.usePositiveValuesOnly = this.usePositiveFacts ? true : false;\r\n    this.expressionForEdit.useNegativeValuesOnly = this.useNegativeFacts ? true : false;\r\n    this.expressionForEdit.reverseNegativeValues = this.revNegativeFacts ? true : false;\r\n    this.expressionForEdit.virtualFactAxis = this.axis;\r\n    if (this.virtualFactMemberExclusions && this.virtualFactMemberExclusions[0] != null) {\r\n      // this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n      this.expressionForEdit.virtualFactMemberExclusionList.push(this.virtualFactMemberExclusions);\r\n    } else {\r\n      this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    }\r\n\r\n    // Concept Match With Dim\r\n    if (this.expressionSets) {\r\n      this.expressionForEdit.dimensionExpressionSets = []\r\n      this.expressionSets.forEach(obj => {\r\n        if (obj.memberInclusionListAsString) {\r\n          obj.memberInclusionList = []\r\n          obj.memberInclusionList.push(obj.memberInclusionListAsString);\r\n        }\r\n        if (obj.memberExclusionListAsString) {\r\n          obj.memberExclusionList = []\r\n          obj.memberExclusionList.push(obj.memberExclusionListAsString);\r\n        }\r\n        if (obj.axisExclusionListAsString) {\r\n          obj.axisExclusionList = []\r\n          obj.axisExclusionList.push(obj.axisExclusionListAsString);\r\n        }\r\n        if (obj.axisInclusionListAsString) {\r\n          obj.axisInclusionList = []\r\n          obj.axisInclusionList.push(obj.axisInclusionListAsString);\r\n        }\r\n      })\r\n      this.expressionForEdit.dimensionExpressionSets = this.expressionSets;\r\n    }\r\n\r\n\r\n    // Extended check\r\n    this.expressionForEdit.containsWords = this.containsWords;\r\n    this.expressionForEdit.doesNotContainsWords = this.doesNotContainsWords;\r\n    this.expressionForEdit.balType = this.balType !== undefined ? this.balType : null;\r\n    this.expressionForEdit.perType = this.perType !== undefined ? this.perType : null;\r\n    this.expressionForEdit.isShareItemType = this.isShareItemType !== undefined ? this.isShareItemType : null;\r\n\r\n\r\n    // Extended check with dim\r\n    this.expressionForEdit.NamedAxisList = this.splitTextToArray(this.axes, '\\n');\r\n    this.expressionForEdit.NamedMemberList = this.splitTextToArray(this.axesMembers, '\\n');\r\n\r\n    //Formula\r\n    this.formulaSets.forEach(obj => {\r\n      obj.operation = obj.operation.name ? obj.operation.name : \"\";\r\n    })\r\n    this.expressionForEdit.formulaList = this.formulaSets;\r\n\r\n    if (this.formulaSets.length > 1) {\r\n      this.expressionForEdit.formulaList = [];\r\n      this.formulaSets.forEach(obj => {\r\n        var formula = { termName: obj.termName, nullable: obj.nullable, operation: obj.operation.name != undefined ? obj.operation.name : \"\" };\r\n        this.expressionForEdit.formulaList.push(formula);\r\n      })\r\n    }\r\n\r\n    //Concept Match Multiple\r\n    if (this.conceptMatchMultiple[0] != \"\") {\r\n      this.expressionForEdit.conceptMatchMultipleList = [];\r\n      this.conceptMatchMultiple.forEach(obj => {\r\n\r\n        this.expressionForEdit.conceptMatchMultipleList.push(obj.id);\r\n      })\r\n    }\r\n  }\r\n\r\n  getExtendedCheckExpression = function (expression) {\r\n    //console.log(\"name contains expression:  \" + JSON.stringify(expression));\r\n    var exprStr = \"isExtended\";\r\n\r\n    var nameContainsExpr = this.arrayToExpression(expression.containsWords, \" && \", 'nameContains(', ')');\r\n    if (nameContainsExpr && nameContainsExpr.indexOf('nameContains') >= 0) {\r\n      exprStr = exprStr + \" && \" + nameContainsExpr;\r\n    }\r\n    //console.log(\"name contains expression:  \" + exprStr);\r\n\r\n    var notContainsExpr = this.arrayToExpression(expression.doesNotContainsWords, \" && \", 'nameNotContains(', ')');\r\n\r\n    if (notContainsExpr && notContainsExpr.indexOf('nameNotContains') >= 0) {\r\n      exprStr = exprStr + \" && \" + notContainsExpr;\r\n    }\r\n\r\n    //console.log(\"name not contains expression:  \" + exprStr);\r\n\r\n    if (expression.balType === this.balanceTypes[0]) {\r\n      exprStr = exprStr + \" && isDebit\";\r\n    }\r\n    if (expression.balType === this.balanceTypes[1]) {\r\n      exprStr = exprStr + \" && isCredit\";\r\n    }\r\n    if (expression.balType === this.balanceTypes[2]) {\r\n      exprStr = exprStr + \" && isNA\";\r\n    }\r\n    if (expression.perType === this.rulePeriodTypes[0]) {\r\n      exprStr = exprStr + \" && isInstant\";\r\n    }\r\n    if (expression.perType === this.rulePeriodTypes[1]) {\r\n      exprStr = exprStr + \" && isDuration\";\r\n    }\r\n    if (expression.isShareItemType) {\r\n      exprStr = exprStr + \" && isShareItemType\";\r\n    }\r\n\r\n    return exprStr;\r\n  };\r\n\r\n  getDimensionExpression = function (expression) {\r\n    var dim: any = {};\r\n    dim.memberExpression = this.arrayToExpression(expression.NamedMemberList, \" || \", \"{\", \"}\");\r\n    dim.axisExpression = this.arrayToExpression(expression.NamedAxisList, \" || \", \"{\", \"}\");\r\n    return dim;\r\n  };\r\n\r\n  validateDimensionalExpressions() {\r\n    if (this.expressionForEdit.dimensionExpressionSets == null ||\r\n      this.expressionForEdit.dimensionExpressionSets.length == 0) {\r\n      this.errorMsg = 'Incomplete Dimension\", \"Please specify dimensional information.';\r\n      this.showError = true;\r\n      window.scroll(0, 0);\r\n      return false;\r\n    }\r\n\r\n    this.expressionForEdit.dimensionExpressionSets.forEach(function (expSet) {\r\n\r\n      if (expSet.axisType === \"ExactMatch\") {\r\n        if (!expSet.axisName || expSet.axisName.length === 0) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Axis name for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      } else {\r\n        var hasData = false;\r\n        if (expSet.axisInclusionList && expSet.axisInclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n        if (expSet.axisExclusionList && expSet.axisExclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n\r\n        if (hasData === false) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Axis inclusion /exclusion data for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (expSet.memberType === \"ExactMatch\") {\r\n        if (!expSet.memberName || expSet.memberName.length === 0) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify Member name for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      } else if (expSet.memberType === \"InclusionExclusionList\") {\r\n        var hasData = false;\r\n        if (expSet.memberInclusionList && expSet.memberInclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n        if (expSet.memberExclusionList && expSet.memberExclusionList.length > 0) {\r\n          hasData = true;\r\n        }\r\n\r\n        if (hasData === false) {\r\n          this.errorMsg = 'Incomplete Dimension\", \"Please specify member inclusion /exclusion data for the dimensional information.';\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          return false;\r\n        }\r\n      }\r\n\r\n\r\n    });\r\n    return true;\r\n  }\r\n\r\n  deleteWithRank(index) {\r\n    if (this.expressionName === 'Expression')\r\n      this.deleteExpressions(index)\r\n    if (this.expressionName === 'Validation')\r\n      this.deleteValidation(index);\r\n    if (this.expressionName === 'Industry')\r\n      this.deleteIndustry(index);\r\n  };\r\n\r\n  deleteIndustry(index) {\r\n    var ind = index + 1\r\n    this.confirmationService.confirm({\r\n      message: 'Override Expression will be removed, are you sure?',\r\n      header: 'Delete Override Expression',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        var override = this.getOverride(this.selIndOvrdExpr.name);\r\n        if (override) {\r\n          override.expressions.splice(index, 1);\r\n          for (var j = 0; j < override.expressions.length; j++) {\r\n            override.expressions[j].rank = j + 1;\r\n          }\r\n        }\r\n        // this.termRule.overrides.push( override.expressions);\r\n        this.saveTerm();\r\n        this.expTableList = override.expressions;\r\n        window.scroll(0, 0);\r\n        this.msgs = [];\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Override Expression successfully' }];\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  deleteExpressions(index) {\r\n    var ind = index + 1\r\n    this.confirmationService.confirm({\r\n      message: 'Rank ' + ind + ' Expression will be removed, are you sure?',\r\n      header: 'Delete Expression',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.expressionList.splice(index, 1);\r\n        for (var i = 0; i < this.expressionList.length; i++) {\r\n          this.expressionList[i].rank = i + 1;\r\n        }\r\n        this.termRule.expressions = this.expressionList;\r\n\r\n        this.saveTerm();\r\n        this.expTableList = this.termRule.expressions;\r\n        window.scroll(0, 0);\r\n        this.msgs = [];\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Expression with rank ', detail: index + ' successfully' }];\r\n\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  addValidations() {\r\n    this.addEditValidation = true;\r\n    this.formulaSets = [];\r\n    this.addAnotherFormula();\r\n    this.addvalidation = true\r\n    //   if(!this.termRule.validationExpressions) {\r\n    //     this.termRule.validationExpressions = [];\r\n    // }\r\n    // this.validation = {};\r\n    // this.validation.rank = this.termRule.validationExpressions.length+1;\r\n    // this.validation.formulaList = [];\r\n    // this.validation.formulaList.push({});\r\n    // this.validation.expression = \"\";\r\n\r\n\r\n  }\r\n\r\n  saveRuleWithValidation() {\r\n    if (!this.checkFormulas()) {\r\n      this.errorMsg = \"Error\", \"Incomplete Validation entry found. Please complete before saving.\";\r\n      this.showError = true;\r\n      window.scroll(0, 0);\r\n      return;\r\n    };\r\n    let val: any = {};\r\n    if (this.addvalidation) {\r\n      val.rank = this.termRule.validationExpressions.length + 1;\r\n      val.expression = this.convertFormulaToExpression(this.formulaSets);\r\n      this.termRule.validationExpressions[val.rank - 1] = val;\r\n    } else {\r\n      val.rank = this.validationRank;\r\n      val.expression = this.convertFormulaToExpression(this.formulaSets);\r\n      this.formulaSets = [];\r\n      this.termRule.validationExpressions[val.rank - 1] = val;\r\n    }\r\n\r\n\r\n    //this.activeExpressionTabIndex = 1;\r\n    this.saveTerm();\r\n    this.msgs = [];\r\n    window.scroll(0, 0);\r\n    this.msgs = [{ severity: 'info', summary: 'Saved Validation successfully' }];\r\n    this.validationList = [];\r\n    this.expTableList = []\r\n    this.termRule.validationExpressions.forEach(obj => {\r\n      obj.type = 'V';\r\n      this.validationList.push(obj);\r\n    })\r\n    this.expTableList = this.validationList;\r\n  }\r\n  checkFormulas = function () {\r\n    console.log(\"checking formulas add allowed\");\r\n    var allowAdd = true;\r\n    for (var x = 0; x < this.formulaSets.length; x++) {\r\n      var formula = this.formulaSets[x];\r\n      if (!formula.termName) {\r\n        console.log(\"failed validation: \" + JSON.stringify(formula));\r\n        allowAdd = false;\r\n        break;\r\n      } else {\r\n        if (x !== (this.formulaSets.length - 1) && !formula.operation) {\r\n          console.log(\"failed validation: \" + JSON.stringify(formula));\r\n          allowAdd = false;\r\n          break;\r\n        }\r\n      }\r\n      //|| !formula.operation\r\n    }\r\n    console.log(\"checking formulas add allowed: \" + allowAdd);\r\n    return allowAdd;\r\n  }\r\n  convertFormulaToExpression(formulaList) {\r\n    console.log(\"convertFormulaToExpression: \" + JSON.stringify(formulaList));\r\n    var expression = \"work in progress... available soon\";\r\n    expression = \"\";\r\n    for (var x = 0; x < formulaList.length; x++) {\r\n      var formula = formulaList[x];\r\n      if (!!formula.termName) {\r\n        expression = expression + \"{sec:\" + formula.termName;\r\n        if (!!formula.nullable) {\r\n          expression = expression + \"=0\";\r\n        }\r\n        expression = expression + \"}\";\r\n        if (!!formula.operation) {\r\n          expression = expression + formula.operation.name;\r\n        }\r\n      }\r\n    }\r\n\r\n    return expression;\r\n  }\r\n\r\n  getValidationExpression() {\r\n    this.validationExpression = this.convertFormulaToExpression(this.formulaSets);\r\n    this.validationRank = this.termRule.validationExpressions.length + 1\r\n\r\n  }\r\n\r\n  deleteValidation(index) {\r\n    var ind = index + 1;\r\n    this.confirmationService.confirm({\r\n      message: 'Rank ' + ind + ' validation will be removed, are you sure?',\r\n      header: 'Delete Validation',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.termRule.validationExpressions.splice(index, 1);\r\n        for (var i = 0; i < this.termRule.validationExpressions.length; i++) {\r\n          var elem = this.termRule.validationExpressions[i];\r\n          elem.rank = i + 1;\r\n        }\r\n        this.saveTerm();\r\n        this.expTableList = this.termRule.validationExpressions;\r\n        this.msgs = [];\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Deleted Validation with rank ', detail: ind + ' successfully' }];\r\n      },\r\n      reject: () => {\r\n        //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];\r\n      }\r\n    });\r\n    if (confirm(\"Rank \" + ind + \" validation will be removed, are you sure?\")) {\r\n\r\n    } else {\r\n    }\r\n\r\n  };\r\n\r\n  addOverrideExpression() {\r\n    this.expressionForEdit = {};\r\n    this.expressionSets = [];\r\n    this.formulaSets = [];\r\n    this.AddExpressionSet();\r\n    this.addAnotherFormula();\r\n    this.overrideName = null;\r\n    this.mergeBaseExpressions = null;\r\n    this.overridecompanyName = null;\r\n    this.disableAxes = false;\r\n    this.disableMember = false;\r\n    this.disableAxesInc = true;\r\n    this.disableMemInc = true;\r\n    this.overrideForEdit = {};\r\n    this.mergeBaseExpressions = true;\r\n    // this.expressionForEdit.expression = \"\";\r\n    // this.expressionForEdit.type = this.expressionTypes[0];\r\n    // this.expressionForEdit.NamedAxisList = [];\r\n    // this.expressionForEdit.NamedMemberList = [];\r\n    // this.expressionForEdit.useVirtualParentNew = true;\r\n    // this.expressionForEdit.useMaxAxisCount = false;\r\n    // this.expressionForEdit.maxAxisCount = 2;\r\n    // this.expressionForEdit.dimensionExpressionSets = [];\r\n    // this.expressionForEdit.virtualFactMemberExclusionList = [];\r\n    // this.expressionForEdit.containsWords = [];\r\n    // this.expressionForEdit.doesNotContainsWords = [];\r\n    this.conceptNameDefinition = \"\";\r\n    this.showExpression = false;\r\n    this.addingExpression();\r\n    this.isOverrideExpressionForEdit = true;\r\n  };\r\n\r\n  editOverrideExpression(rowdata) {\r\n    this.entityOverrides = [];\r\n    var override = this.getOverride(this.selIndOvrdExpr.name);\r\n    this.overrideForEdit = {}\r\n    if (!override)\r\n      return;\r\n    this.expressionForEdit = override.expressions[rowdata.rank - 1];\r\n    this.overrideForEdit.name = override.name;\r\n    this.overrideForEdit.mergeBaseExpressions = override.mergeBaseExpressions;\r\n    this.overrideForEdit.origName = override.name;\r\n    this.overrideName = { name: override.name };\r\n    this.mergeBaseExpressions = override.mergeBaseExpressions;\r\n    if (override.entityOverrides[0] != null) {\r\n      this.setCurrentOverrideIndustryInformation(override);\r\n    } else {\r\n      this.entityOverrides = null;\r\n      this.addAnotherIndustryOverride();\r\n    }\r\n\r\n\r\n    this.isOverrideExpressionForEdit = true;\r\n    if (!this.expressionForEdit.type || this.expressionForEdit.type === 'na') {\r\n      this.expressionForEdit.type = this.expressionTypes[0];\r\n    }\r\n  };\r\n\r\n  setCurrentOverrideIndustryInformation(override) {\r\n\r\n    this.entityOverrides = [];\r\n    for (var j = 0; j < override.entityOverrides.length; j++) {\r\n      var entityOverride: any = {};\r\n\r\n      if (override.entityOverrides[j].entityId) {\r\n        var entity = this.completeCompanyList.filter(obj => obj.entityId === override.entityOverrides[j].entityId);\r\n        if (entity && entity.length > 0) {\r\n          entityOverride.entityname = entity[0].companyName + \"(\" + entity[0].entityId + \")\";\r\n        }\r\n      }\r\n      if (!entityOverride.entityname) {\r\n        entityOverride.overrideDivSec = this.divSector;\r\n      }\r\n      this.entityOverrides.push(entityOverride);\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addAnotherIndustryOverride() {\r\n\r\n    var overrideEntity = { divisionSector: \"\", entityname: \"\" };\r\n    if (!this.entityOverrides) {\r\n      this.entityOverrides = [];\r\n    }\r\n    this.entityOverrides.push(overrideEntity);\r\n  }\r\n\r\n  removeOverride = function (index) {\r\n    this.entityOverrides.splice(index, 1);\r\n  }\r\n\r\n  updateOverrideFromUIToRule() {\r\n    var overrideName = this.overrideName.name ? this.overrideName.name : this.overrideName;\r\n    var index = -1;\r\n    var existingExpressions = [];\r\n    if (!this.termRule.overrides) {\r\n      this.termRule.overrides = [];\r\n    }\r\n    for (var i = 0; i < this.termRule.overrides.length; i++) {\r\n      if (overrideName) {\r\n        if (overrideName === this.termRule.overrides[i].name) {\r\n          index = i;\r\n          existingExpressions = this.termRule.overrides[i].expressions;\r\n          break;\r\n        }\r\n      } else {\r\n        if (this.overrideForEdit.name === this.termRule.overrides[i].name) {\r\n          index = i;\r\n          existingExpressions = this.termRule.overrides[i].expressions;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var override: any = {};\r\n    override.name = overrideName;\r\n    override.mergeBaseExpressions = this.mergeBaseExpressions;\r\n    override.expressions = existingExpressions;\r\n    override.entityOverrides = [];\r\n    for (var i = 0; i < this.entityOverrides.length; i++) {\r\n      var indOverride: any = {};\r\n      if (this.entityOverrides[i].entityname) {\r\n        // entityOverride.overridecompanyName = entity[0].companyName.substr(0, entity[0].companyName.indexOf( '(');\r\n        // mp.division = this.divSector.substr(0,this.divSector.indexOf( '->')-1);\r\n        // mp.sector =  this.divSector.substr(this.divSector.indexOf( '->')+3, this.divSector.length);\r\n        indOverride.entityId = this.getCompanyIdFromName(this.entityOverrides[i].entityname.substr(0, this.entityOverrides[i].entityname.indexOf('(')));\r\n      } else {\r\n        if (this.entityOverrides[i].divisionSector) {\r\n          indOverride.division = this.entityOverrides[i].divisionSector.division;\r\n          indOverride.sector = this.entityOverrides[i].divisionSector.sector;\r\n        }\r\n      }\r\n      if (!indOverride.division && !indOverride.entityId) {\r\n        continue;\r\n      }\r\n\r\n      override.entityOverrides.push(indOverride);\r\n    }\r\n    if (this.expressionForEdit.rank) {\r\n\r\n      //console.log(\"Updating Expression array index : \" + index);\r\n      override.expressions[this.expressionForEdit.rank - 1] = this.expressionForEdit;\r\n    } else {\r\n      this.expressionForEdit.rank = override.expressions.length + 1;\r\n\r\n      override.expressions.push(this.expressionForEdit);\r\n    }\r\n\r\n    if (index < 0) {\r\n      this.termRule.overrides.push(override);\r\n    } else {\r\n      this.termRule.overrides[index] = override;\r\n    }\r\n  }\r\n\r\n  getCompanyIdFromName(input) {\r\n    var entities = this.completeCompanyList.filter(obj => obj.companyName === input);\r\n\r\n    if (entities.length > 0) {\r\n      return entities[0].entityId;\r\n    }\r\n\r\n    return null;\r\n  }\r\n  getOverride(overrideName) {\r\n\r\n    if (overrideName && this.termRule.overrides) {\r\n      for (var i = 0; i < this.termRule.overrides.length; i++) {\r\n        if (this.termRule.overrides[i].name === overrideName) {\r\n          return this.termRule.overrides[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  deleteOverrideExpressionWithRank(selectedOverride, index) {\r\n    if (confirm(\"Override Expression will be removed, are you sure?\")) {\r\n\r\n      var override = this.getOverride(selectedOverride);\r\n\r\n      if (override) {\r\n        override.expressions.splice(index, 1);\r\n        for (var j = 0; j < override.expressions.length; j++) {\r\n          override.expressions[j].rank = j + 1;\r\n        }\r\n      }\r\n      this.saveTerm();\r\n    } else {\r\n    }\r\n\r\n  };\r\n\r\n  convertExpressionToFormula(expression) {\r\n    console.log(\"convertExpressionToFormula: \" + expression);\r\n    var parts = expression.split(\"{\");\r\n    this.formulaSets = [];\r\n    for (var i = 0; i < parts.length; i++) {\r\n      var part = parts[i];\r\n      if (!!part) {\r\n        var fields = part.split(\"}\");\r\n        if (fields.length > 0) {\r\n          var term = fields[0];\r\n          term = term.replace(\"sec:\", \"\");\r\n          var nullable = false;\r\n          if ((term.length - 2) === term.lastIndexOf(\"=0\")) {\r\n            nullable = true;\r\n          }\r\n          if (fields.length === 2) {\r\n            var operation = fields[1].trim();\r\n\r\n            term = term.replace(\"=0\", \"\");\r\n          }\r\n          this.formulaSets.push({ termName: term, nullable: nullable, operation: { name: operation } });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getCurrentOverrideDetails() {\r\n    var override = this.getOverride(this.overrideName.name);\r\n    if (override) {\r\n      this.setCurrentOverrideIndustryInformation(override);\r\n    }\r\n  };\r\n\r\n  getOverRides(event) {\r\n    this.companyovrRideList = [];\r\n    for (let i = 0; i < this.termRule.overrides.length; i++) {\r\n      let cname: string = this.termRule.overrides[i].name;\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.companyovrRideList.push({ name: cname });\r\n      }\r\n    }\r\n  }\r\n\r\n  removeTextBlock(index) {\r\n    this.derivedZeroExpressionForEdit.textBlockList.splice(index, 1);\r\n  };\r\n  addAnotherTextBlock() {\r\n    var item = { expressionItem: \"\" };\r\n    this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n  };\r\n\r\n  addDerivedZeroExpression() {\r\n    this.addEditDerived = true;\r\n    this.derivedZeroExpressionForEdit = {};\r\n    this.activeExpressionTabIndex = 0;\r\n    this.derivedZeroExpressionForEdit.expression = \"\";\r\n    this.derivedZeroExpressionForEdit.type = this.derivedZeroTypes[0];\r\n    this.derivedZeroExpressionForEdit.textBlockList = [];\r\n    var item = { expressionItem: \"\" };\r\n    this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n    this.derivedZeroExpressionForEdit.depTermNameList = [];\r\n    this.derivedZeroExpressionForEdit.excTermNameList = [];\r\n    this.divisionCount = this.completeCompanyList.length;\r\n    this.addAnotherItem(false);\r\n    this.addAnotherItem(true);\r\n\r\n  };\r\n\r\n  editDerivedZeroExpression = function (index) {\r\n    this.activeExpressionTabIndex = 3;\r\n    this.derivedZeroExpressionForEdit = this.termRule.derivedZeroExpressions[index];\r\n  };\r\n\r\n  saveNewDerivedExpression() {\r\n\r\n    if (!this.termRule.derivedZeroExpressions) {\r\n      this.termRule.derivedZeroExpressions = [];\r\n    }\r\n\r\n    var derivedZeroExpression: any = {};\r\n    derivedZeroExpression.type = this.derivedZeroExpressionForEdit.type;\r\n    derivedZeroExpression.rank = this.derivedZeroExpressionForEdit.rank;\r\n    derivedZeroExpression.allTermsRequired = false;\r\n    switch (this.derivedZeroExpressionForEdit.type) {\r\n      case this.derivedZeroTypes[0]:\r\n        {\r\n          derivedZeroExpression.expression = this.getTextBlockExpression(this.derivedZeroExpressionForEdit.textBlockList);\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[1]:\r\n        {\r\n          derivedZeroExpression.allTermsRequired = this.derivedZeroExpressionForEdit.allTermsRequired;\r\n          var splitStr = derivedZeroExpression.allTermsRequired && derivedZeroExpression.allTermsRequired == true ? \"&&\" : \"||\";\r\n          derivedZeroExpression.expression = this.getTermExpression(this.derivedZeroExpressionForEdit.depTermNameList, splitStr);\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[2]:\r\n        {\r\n          derivedZeroExpression.expression = this.getTermExpression(this.derivedZeroExpressionForEdit.excTermNameList, \"||\");\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[3]:\r\n        {\r\n          var division = this.deriveddivSector.substr(0, this.deriveddivSector.indexOf('->') - 1);\r\n          var sector = this.deriveddivSector.substr(this.deriveddivSector.indexOf('->') + 3, this.deriveddivSector.length);\r\n          var sic = this.derivedindustry.substr(0, 4);\r\n          derivedZeroExpression.division = division;\r\n          derivedZeroExpression.sector = sector;\r\n          derivedZeroExpression.industry = sic;\r\n          derivedZeroExpression.expression = this.getExcludeIndustryExpression(derivedZeroExpression);\r\n          break;\r\n        }\r\n    }\r\n    ;\r\n\r\n    if (!derivedZeroExpression.rank) {\r\n\r\n      derivedZeroExpression.rank = this.termRule.derivedZeroExpressions.length + 1;\r\n\r\n\r\n      this.termRule.derivedZeroExpressions.push(derivedZeroExpression);\r\n    } else {\r\n      var index = this.derivedZeroExpressionForEdit.rank - 1;\r\n      //console.log(\"Updating Expression array index : \" + index);\r\n      this.termRule.derivedZeroExpressions[index] = derivedZeroExpression;\r\n    }\r\n    this.activeExpressionTabIndex = 3;\r\n    this.saveTerm();\r\n\r\n  }\r\n\r\n  onDerivedTabChange(event) {\r\n    this.activeExpressionTabIndex = event.index;\r\n    this.derivedZeroExpressionForEdit = [];\r\n    this.deriveddivSector = '';\r\n    this.derivedindustry = '';\r\n    this.filteredDerivedindustry = [];\r\n    // this.divisionCount =0;\r\n    // this.sectorCount = 0;\r\n    this.derivedZeroExpressionForEdit.type = this.derivedZeroTypes[this.activeExpressionTabIndex];\r\n    this.prepareDerivedZeroExpressionForEdit();\r\n  }\r\n\r\n\r\n  getTermExpression(tnList, splitStr) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < tnList.length; i++) {\r\n      var exp = tnList[i].expressionItem;\r\n      if (i === 0) {\r\n        exprStr = this.surroundTextWith(exp, \"{sec:\", \"}\", true);\r\n      } else {\r\n        exprStr = exprStr + splitStr + this.surroundTextWith(exp, \"{sec:\", \"}\", true);\r\n      }\r\n    }\r\n\r\n    return exprStr;\r\n  };\r\n  getExcludeIndustryExpression(derivedZeroExpression) {\r\n    var exp = \"\";\r\n    if (derivedZeroExpression.division) {\r\n\r\n      exp = derivedZeroExpression.division + \"->\" + derivedZeroExpression.sector;\r\n    }\r\n    if (derivedZeroExpression.industry) {\r\n      exp = exp + \" \" + derivedZeroExpression.industry;\r\n    }\r\n\r\n    return exp;\r\n  }\r\n\r\n  getTextBlockExpression(tnList) {\r\n    var exprStr = \"\";\r\n    for (var i = 0; i < tnList.length; i++) {\r\n      var exp = tnList[i].expressionItem;\r\n      if (i === 0) {\r\n        exprStr = this.surroundTextWith(exp.id, \"{\", \"}\", true);\r\n      } else {\r\n        exprStr = exprStr + '||' + this.surroundTextWith(exp.id, \"{\", \"}\", true);\r\n      }\r\n    }\r\n\r\n    return exprStr;\r\n  }\r\n\r\n  addAnotherItem(isExclusion) {\r\n    var item = { expressionItem: \"\" };\r\n\r\n    if (isExclusion) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList.push(item);\r\n    } else {\r\n      this.derivedZeroExpressionForEdit.depTermNameList.push(item);\r\n    }\r\n\r\n    //console.log(this.derivedZeroExpressionForEdit.formulaList);\r\n  };\r\n  removeDerivedTerm(index, isExclusion) {\r\n\r\n    if (isExclusion) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList.splice(index, 1);\r\n    } else {\r\n      this.derivedZeroExpressionForEdit.depTermNameList.splice(index, 1);\r\n    }\r\n\r\n  }\r\n  prepareDerivedZeroExpressionForEdit() {\r\n\r\n    switch (this.derivedZeroExpressionForEdit.type) {\r\n      case this.derivedZeroTypes[0]:\r\n        {\r\n          this.setTextBlockExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[1]:\r\n        {\r\n          this.setDepTermExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[2]:\r\n        {\r\n          this.setExlTermExpression();\r\n          break;\r\n        }\r\n      case this.derivedZeroTypes[3]:\r\n        {\r\n          this.derivedRank = false;\r\n          this.divSectorList.forEach(obj => {\r\n            var name = { label: obj, value: obj };\r\n            this.filteredDeriveddivSectors.push(name)\r\n          });\r\n          this.setExcludeEntitiesExpression();\r\n          break;\r\n        }\r\n\r\n    }\r\n  }\r\n  setTextBlockExpression() {\r\n\r\n    // if (!this.derivedZeroExpressionForEdit.textBlockList) {\r\n    this.derivedZeroExpressionForEdit.textBlockList = [];\r\n    if (!this.derivedZeroExpressionForEdit.expression) {\r\n      this.filteredtext = [];\r\n      this.addAnotherTextBlock();\r\n\r\n    } else {\r\n\r\n      this.filteredtext = [];\r\n      var strArray = this.derivedZeroExpressionForEdit.expression.split(\"||\");\r\n      for (var i = 0; i < strArray.length; i++) {\r\n        var itemExpression = strArray[i]\r\n        itemExpression = itemExpression.replace(\"{\", \"\");\r\n        itemExpression = itemExpression.replace(\"}\", \"\");\r\n        var item = { 'expressionItem': itemExpression };\r\n\r\n        this.derivedZeroExpressionForEdit.textBlockList.push(item);\r\n        this.filteredtext.push(itemExpression);\r\n      }\r\n      //this.derivedZeroExpressionForEdit.expression = null;\r\n    }\r\n\r\n    // }\r\n  }\r\n  setDepTermExpression() {\r\n\r\n    // if (!this.derivedZeroExpressionForEdit.depTermNameList) {\r\n    this.derivedZeroExpressionForEdit.depTermNameList = [];\r\n    if (!this.derivedZeroExpressionForEdit.expression) {\r\n\r\n      this.addAnotherItem(false);\r\n\r\n    } else {\r\n\r\n      var splitStr = this.derivedZeroExpressionForEdit.allTermsRequired == true ? \"&&\" : \"||\";\r\n      var strArray = this.derivedZeroExpressionForEdit.expression.split(splitStr);\r\n      for (var i = 0; i < strArray.length; i++) {\r\n        var itemExpression = strArray[i]\r\n        itemExpression = itemExpression.replace(\"{sec:\", \"\");\r\n        itemExpression = itemExpression.replace(\"}\", \"\");\r\n        var item = { expressionItem: itemExpression };\r\n        this.derivedZeroExpressionForEdit.depTermNameList.push(item);\r\n      }\r\n      //this.derivedZeroExpressionForEdit.expression = null;\r\n\r\n    }\r\n\r\n    // }\r\n  }\r\n\r\n  setExlTermExpression() {\r\n\r\n    if (!this.derivedZeroExpressionForEdit.excTermNameList) {\r\n      this.derivedZeroExpressionForEdit.excTermNameList = [];\r\n      if (!this.derivedZeroExpressionForEdit.expression) {\r\n\r\n        this.addAnotherItem(true);\r\n\r\n      } else {\r\n\r\n\r\n        var strArray = this.derivedZeroExpressionForEdit.expression.split(\"||\");\r\n        for (var i = 0; i < strArray.length; i++) {\r\n          var itemExpression = strArray[i]\r\n          itemExpression = itemExpression.replace(\"{sec:\", \"\");\r\n          itemExpression = itemExpression.replace(\"}\", \"\");\r\n          var item = { expressionItem: itemExpression };\r\n          this.derivedZeroExpressionForEdit.excTermNameList.push(item);\r\n        }\r\n        // this.derivedZeroExpressionForEdit.expression = null;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  setExcludeEntitiesExpression() {\r\n\r\n    if (this.derivedZeroExpressionForEdit.division && this.derivedZeroExpressionForEdit.sector) {\r\n      var divSec = {\r\n        \"division\": this.derivedZeroExpressionForEdit.division,\r\n        \"sector\": this.derivedZeroExpressionForEdit.sector\r\n      };\r\n      this.filteredDerivedindustry = []\r\n      this.setExcDivSec(this.derivedZeroExpressionForEdit.division, this.derivedZeroExpressionForEdit.sector);\r\n      if (this.derivedZeroExpressionForEdit.sector && this.derivedZeroExpressionForEdit.industry)\r\n        this.deriveddivSector = this.derivedZeroExpressionForEdit.division + ' -> ' + this.derivedZeroExpressionForEdit.sector;\r\n      this.filteredDerivedindustry.forEach(obj => {\r\n        var sic = obj.label.substr(0, 4);\r\n        if (sic === this.derivedZeroExpressionForEdit.industry) {\r\n          this.derivedindustry = obj.label;\r\n        }\r\n      })\r\n      // this.derivedindustry = this.derivedZeroExpressionForEdit.industry + ' - ' + this.derivedZeroExpressionForEdit.sector;\r\n\r\n      if (!this.excludeEntitiesFilter)\r\n        this.excludeEntitiesFilter = {};\r\n      this.excludeEntitiesFilter.sic = this.derivedZeroExpressionForEdit.industry;\r\n    }\r\n    else {\r\n      this.excludeEntitiesFilter = {};\r\n    }\r\n  }\r\n\r\n  setExcDivSec(division, sector) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredDerivedindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    if (this.derivedZeroExpressionForEdit.industry) {\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === this.derivedZeroExpressionForEdit.industry);\r\n      this.industryCount = completeEntities.length\r\n    }\r\n\r\n  }\r\n\r\n  processTermForEntity(rowdata) {\r\n    //console.log(\"Process rule \" + $scope.rule.termId + \" with token \" + $scope.csrfToken + \" for entity: \" + entityId);\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: 'Started processing for ' + this.termName, detail: '' }];\r\n    this.utilService.processTerms(this.termRule.termId, rowdata.entityId, null).subscribe((response) => {\r\n      if (!response.data) {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Term processing for' + this.termName, detail: ' processed successfully' }];\r\n        this.progressSpinner = false;\r\n\r\n      } else {\r\n        window.scroll(0, 0);\r\n        this.msgs = [{ severity: 'info', summary: 'Process Term Rule failed' + this.termName, detail: '' }];\r\n        this.progressSpinner = false;\r\n\r\n      }\r\n\r\n\r\n    }, function (err) {\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n  yearChange(event) {\r\n    this.startYear = this.range[0];\r\n    this.endYear = this.range[1];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { MappedEntity } from '../domain/mappedEntity';\r\n@Injectable()\r\nexport class HomeService {\r\n    private termRuleCategoryListUrl = '/api/TermRulesCategoryList';\r\n    private entityListUrl = '/api/EntityList';\r\n    private termRulesPriorityGroupListUrl = '/api/TermRulesPriorityGroupList';\r\n    private userRolesListUrl = '/api/UserRolesList';\r\n    private userDisplayNameUrl = '/api/UserDisplayName';\r\n    private termRuleUrl = '/api/TermRule';\r\n    private companyListUrl = \"/EntitiesList\";\r\n    private mappedEntityListUrl = '/api/MappedEntitiesForCriteria';\r\n    private ruleGraphUrl = '/api/getRuleGraph/';\r\n    private termResults = '/api/TermResultsByRuleEntity'\r\n\r\n    //Test Purpose\r\n    // private termRuleCategoryListUrl = 'https://localhost:18081/api/TermRulesCategoryList';\r\n    // private entityListUrl = 'https://localhost:18081/api/EntityList';\r\n    // private termRulesPriorityGroupListUrl = 'https://localhost:18081/api/TermRulesPriorityGroupList';\r\n    // private userDisplayNameUrl = 'https://localhost:18081/api/UserDisplayName';\r\n    // private termRuleUrl = 'https://localhost:18081/api/TermRule';\r\n    // private companyListUrl = \"https://localhost:18081/EntitiesList\";\r\n    // private unMappedEntityListUrl = 'https://localhost:18081/api/UnMappedEntitiesForCriteria';\r\n    // private ruleGraphUrl = 'https://localhost:18081/api/api/getRuleGraph/';\r\n    // private termResults = 'https://localhost:18081/api/TermResultsByRuleEntity'\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getTermRuleCategoryList() {\r\n        console.log('HomeService : getTermRuleCategoryList()...');\r\n        return this.http.get(`${this.termRuleCategoryListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n\r\n\r\n\r\n    getEntityList() {\r\n        console.log('HomeService : getEntityList()...');\r\n        return this.http.get(`${this.entityListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getTermRulesPriorityGroupList() {\r\n        console.log('HomeService : getTermRulesPriorityGroupList()...');\r\n        return this.http.get(`${this.termRulesPriorityGroupListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    getUserDisplayName() {\r\n        console.log('HomeService : getUserDisplayName()...');\r\n        return this.http.get(`${this.userDisplayNameUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getTermRule(id: string) {\r\n        console.log('HomeService : getTermRule() with termId ' + id);\r\n        return this.http.get(`${this.termRuleUrl}?id=` + id).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getRuleGraph(id: string) {\r\n        console.log('HomeService : getTermRule() with termId ' + id);\r\n        return this.http.get(`${this.ruleGraphUrl}` + id + `/null`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getCompanyList() {\r\n        console.log('HomeService : getCompanyList()...');\r\n        return this.http.get(`${this.companyListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getMappedEntityList(mappedEntity: MappedEntity, url: string) {\r\n        console.log('HomeService : getMappedEntityList()...');\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        const body = JSON.stringify({\r\n            termRuleId: mappedEntity.termRuleId, division: mappedEntity.division, sector: mappedEntity.sector, sic: mappedEntity.sic, filerCategory: mappedEntity.filerCategory,\r\n            entityId: mappedEntity.entityId, maxYear: mappedEntity.maxYear, minYear: mappedEntity.minYear, includeQuarterly: mappedEntity.includeQuarterly, rankId: mappedEntity.rankId\r\n        });\r\n        return this.http.put(`${url}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => data.json()))\r\n    }\r\n\r\n    getTermResults(termId: string, entityId: string) {\r\n        console.log('HomeService : getTermResults()');\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        const body = JSON.stringify({\r\n            termRuleId: termId, entityId: entityId\r\n        });\r\n        return this.http.put(`${this.termResults}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => data.json()))\r\n    }\r\n\r\n}\r\n","module.exports = \"label{\\r\\n    margin: 0px 0px 0px 0px !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtDQUFrQztBQUN0QyIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbHtcclxuICAgIG1hcmdpbjogMHB4IDBweCAwcHggMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","module.exports = \"<div>\\r\\n  <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n    fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n  <p-messages [style]=\\\"{color: 'black'}\\\" [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container shadow-lg p-3 mb-5 bg-white rounded\\\" style=\\\"margin-top: 7%;\\\">\\r\\n\\r\\n  <p-card>\\r\\n    <div>\\r\\n      <strong\\r\\n        style=\\\"text-align: center; padding-left: 45%; font-size: 30px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\\"><b>MAXDS\\r\\n          Login</b></strong><span style=\\\"font-weight: bold; color: blue;\\\" class=\\\"pull-right\\\"><u>(Build\\r\\n          Version\\r\\n          2.0.0.2)</u></span>\\r\\n    </div>\\r\\n\\r\\n    <hr style=\\\"border: 1px solid blue;\\\">\\r\\n    <p style=\\\"font-size: small; text-align: right;\\\" class=\\\"text-center\\\">\\r\\n      <I><strong> Please enter your SEC Username and Password. Username must exist in Active Directory to be a valid\\r\\n          user to login. Please go to <a href=\\\"https://seceamsprod.servicenowservices.com/secsp?id=sc_cat_item&sys_id=c77141fb6fcb3100256068826e3ee45c\\\" target=\\\"_blank\\\">AskIT</a> to request access.\\r\\n        </strong></I></p>\\r\\n    <form>\\r\\n      <input type=\\\"hidden\\\" name=\\\"_csrf.parameterName\\\" value=\\\"_csrf.token\\\" />\\r\\n      <div class=\\\"col-lg-3\\\" style=\\\"text-align: center;\\\">\\r\\n        <img src=\\\"../../assets/images/sec_logo.jpg\\\" alt=\\\"mxdscompanylogo\\\"\\r\\n          style=\\\"width: 250px ; height: 250px; margin-top: 25px;\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-9\\\">\\r\\n        <div class=\\\"col-lg-12\\\" style=\\\"margin-left:5%; margin-top: 5%;\\\">\\r\\n          <div>\\r\\n          <span ng-show=\\\"showErrors\\\" style=\\\"color: red; margin-left: 30%\\\"><strong>{{loginErrorMsg}}</strong></span>\\r\\n          <span ng-show=\\\"showLoginErrors\\\" style=\\\"color: red;\\\"><strong style=\\\"float: left;\\\">{{loginErrorMessg[0]}}</strong></span><br>\\r\\n          <span ng-show=\\\"showLoginErrors\\\" style=\\\"color: red;\\\"><strong  style=\\\"float: left;\\\">{{loginErrorMessg[1]}}</strong></span>\\r\\n        </div>\\r\\n          <br>\\r\\n\\r\\n        </div>\\r\\n        <div  class=\\\"col-lg-12\\\" style=\\\"margin-left:5%; margin-top: 2%;\\\">\\r\\n          <label for=\\\"username\\\" class=\\\"col-lg-2\\\" style=\\\"margin: 2px !important; font-size: 18px;\\\">Username:</label>\\r\\n          <input name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"col-lg-8 form-control\\\"\\r\\n            placeholder=\\\"Username\\\" required autofocus>\\r\\n            </div>\\r\\n        <div class=\\\"col-lg-12\\\" style=\\\"margin-left:5%; margin-top: 2%;\\\">\\r\\n          <label for=\\\"pwd\\\" class=\\\"col-lg-2\\\" style=\\\"margin: 2px !important; font-size: 18px;\\\">Password:</label>\\r\\n          <input id=\\\"pwd\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"col-lg-8 form-control\\\"\\r\\n            placeholder=\\\"Password\\\" required>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12\\\" style=\\\"text-align: center; padding-top: 6%; padding-bottom: 3%;\\\">\\r\\n          <button pButton type=\\\"submit\\\" label=\\\"Login\\\" icon=\\\"pi pi-check\\\" style=\\\"margin-right: .25em\\\"\\r\\n            (keyup.enter)=\\\"onLoginSubmit()\\\" (click)=\\\"onLoginSubmit()\\\"></button>\\r\\n          <button pButton type=\\\"reset\\\" label=\\\"Reset\\\" icon=\\\"pi pi-times\\\" class=\\\"ui-button-secondary\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n  </p-card>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h1 class=\\\" text-center login-title\\\">Sign In</h1>\\r\\n\\r\\n\\r\\n      <h5 style=\\\"font: bold;color: blue;text-align: right;margin-right: 50px\\\">MaxDS (Build Version 2.0.0.2)\\r\\n      </h5>\\r\\n      <p style=\\\"font-size: medium; text-align: right;\\\" class=\\\"text-center\\\">Please enter your SEC Username and Password.\\r\\n        Username\\r\\n        must exist\\r\\n        in Active Directory to be a valid user to login.</p>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6 col-md-4 col-md-offset-4\\\">\\r\\n\\r\\n      <form (ngSubmit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n        <input type=\\\"hidden\\\" name=\\\"_csrf.parameterName\\\" value=\\\"_csrf.token\\\" />\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"username\\\" class=\\\"pull-left\\\" style=\\\"margin: 2px !important;\\\">Username:</label>\\r\\n          <input name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\"\\r\\n            required autofocus>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"pwd\\\" class=\\\"pull-left\\\" style=\\\"margin: 2px !important;\\\">Password:</label>\\r\\n          <input id=\\\"pwd\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Password\\\" required>\\r\\n          <span *ngIf=\\\"showErrors\\\" style=\\\"color: red;\\\">{{loginErrorMsg}}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default pull-left\\\">Login</button>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"checkbox1\\\" style=\\\"margin: 2px !important;\\\"> Invalidate existing login session </label>\\r\\n          <input type=\\\"checkbox\\\" name=\\\"checkbox1\\\" value='0' title='Invalidate existing login by user' onclick='javascript:if (this.checked) {\\r\\n                                          this.value = \\\"1\\\"\\r\\n                                      } else {\\r\\n                                          this.value = \\\"0\\\"\\r\\n                                      }'>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n-->\\r\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LoginService } from 'app/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { AppComponent } from 'app/app.component';\r\nimport { HeaderComponent } from 'app/header/header.component';\r\nimport { CommonService } from 'app/services/common.service';\r\nimport { ProfileService } from 'app/services/profile.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  user: any = { username: \"\", password: \"\", }\r\n  showErrors: boolean = false;\r\n  loginErrorMsg: string;\r\n  showLoginErrors: boolean = false;\r\n  loginErrorMessg: string[] = [];\r\n  loggeduser: any\r\n  progressSpinner = false;\r\n\r\n\r\n  constructor(private loginService: LoginService, private profileService: ProfileService, private router: Router, private app: AppComponent, private header: HeaderComponent) {\r\n    this.app.showmenu = false;\r\n    this.showLoginErrors = false;\r\n    this.loginErrorMessg = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    // if (!this.app.loggedUsername) {\r\n    //   console.log(\"logout\");\r\n    //   this.loginService.logout();\r\n    // }\r\n    this.showLoginErrors = false;\r\n    this.loginErrorMessg = [];\r\n    if (localStorage.getItem('user') !== null && localStorage.getItem('error') === 'true') {\r\n      this.showLoginErrors = true;\r\n      this.loginErrorMessg[0] = 'User name not available in the list of valid MAXDS users. Please contact support.';\r\n      this.loginErrorMessg[1] = 'User is not part of Active Directory. Please contact SEC-HELP';\r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    this.showLoginErrors = false;\r\n    this.loginErrorMessg = [];\r\n    this.loginService.loginApp(this.user.username, this.user.password).subscribe((response) => {\r\n      this.app.showmenu = true;\r\n\r\n      if (response.status) {\r\n        this.app.loggedUsername = this.user.username;\r\n        this.app.showmenu = true;\r\n        this.loginService.userId = response.resultObject.userid;\r\n        this.getAllSharedProfiles();\r\n        this.router.navigate(['/home'], {\r\n          state:\r\n          {\r\n            loggedUsername: this.user.username,\r\n          }\r\n        })\r\n\r\n      } else {\r\n        console.log(\"error\")\r\n        this.showErrors = true;\r\n        this.loginErrorMsg = \"Invalid Login credentails\";\r\n        this.router.navigate(['/login'], {})\r\n\r\n      }\r\n\r\n    },\r\n      (error) => {\r\n        this.showErrors = true;\r\n        this.loginErrorMsg = \"Invalid Login credentails\";\r\n        console.log(error)\r\n      }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  getAllSharedProfiles() {\r\n    this.progressSpinner = true;\r\n    this.profileService.getAllSharedProfiles().subscribe((response) => {\r\n      let preferencesList = [];\r\n      response.forEach(preferences => {\r\n        const pname: any[] = preferences.companyName.split(\"$\");\r\n        preferencesList.push(\r\n          this.getRootRecords(preferences, pname)\r\n        );\r\n      });\r\n      CommonService.emitsharedPreferenceNotificationEvent(preferencesList);\r\n      this.progressSpinner = false;\r\n\r\n    },\r\n      (error) => {\r\n        console.log(error);\r\n        this.progressSpinner = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  getRootRecords(preferences, companyNames) {\r\n    const entityName: string = companyNames[0];\r\n    return {\r\n      \"data\": {\r\n        processId: preferences.processId, companyName: entityName, preferenceName: preferences.preferenceName,\r\n        code: preferences.code, userid: preferences.userid, termName: preferences.termName, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n        researchLink: preferences.researchLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n      },\r\n      \"children\": this.getChildRecord(preferences, companyNames)\r\n    }\r\n  };\r\n\r\n  getChildRecord(preferences, companyNames) {\r\n    const childrens: any[] = []\r\n    for (let i = 1; i < companyNames.length; i++) {\r\n      childrens.push({\r\n        \"data\": {\r\n          processId: preferences.processId, companyName: companyNames[i], preferenceName: preferences.preferenceName,\r\n          code: preferences.code, userid: preferences.userid, termName: preferences.termName, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n          researchLink: preferences.researchLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n        }\r\n      })\r\n    }\r\n    return childrens;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n    <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n        fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n<div>\\r\\n\\r\\n    <h2 style=\\\"background-color:lightblue; width: 100%; text-align: center;\\\"> Manage Term </h2>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <label style=\\\"float: left; padding-left: 30px;\\\">Mapping Groups:</label>\\r\\n\\r\\n    <!-- <button pButton type=\\\"button\\\" label=\\\"Compustat\\\" style=\\\"float: left;\\\" class=\\\"ui-button-rounded\\\" (click)=\\\"compuStatClick()\\\"></button>\\r\\n\\r\\n<button pButton type=\\\"button\\\" label=\\\"IFRS\\\" style=\\\"float: center;\\\" class=\\\"ui-button-rounded\\\" (click)=\\\"ifrsClick()\\\"></button>\\r\\n\\r\\n<button pButton type=\\\"button\\\" label=\\\"Bloomberg\\\"  style=\\\"float: right;\\\" class=\\\"ui-button-rounded\\\" (click)=\\\"bloombergClick()\\\"></button> -->\\r\\n    <div *ngFor=\\\"let group of termMappingGroups; let idx = index\\\" style=\\\"padding-left:50px;\\\">\\r\\n        <button pButton type=\\\"button\\\" label=\\\"{{group.mapName}}\\\" style=\\\"float: left;\\\" class=\\\"ui-button-rounded\\\"\\r\\n            (click)=\\\"groupClick(group, idx)\\\"></button>&nbsp;&nbsp;\\r\\n        <button type=\\\"button\\\" pButton style=\\\"float: left;\\\" (click)=\\\"removeGroup(group.mapName)\\\" icon=\\\"pi pi-times\\\"\\r\\n            Class=\\\"ui-button-danger\\\" pTooltip=\\\"Delete Group\\\"></button>&nbsp;\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<div style=\\\"height: 5%;\\\">\\r\\n    &nbsp;\\r\\n</div>\\r\\n<div style=\\\"text-align: left;\\\">\\r\\n    <input [disabled]=\\\"disableNewGroup\\\" type=\\\"text\\\" [(ngModel)]=\\\"newGroupName\\\" name=\\\"group\\\" placeholder=\\\"Group Name\\\"\\r\\n        joyrideStep=\\\"groupName\\\" title=\\\"Group Name\\\" text=\\\"This is where a user can enter a desired group name.\\\">\\r\\n    &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button [disabled]=\\\"disableNewGroup\\\" pButton type=\\\"button\\\" label=\\\"New Group\\\" icon=\\\"pi pi-plus\\\" class=\\\"\\\"\\r\\n        id=\\\"newGroup\\\" (click)=\\\"addNewGroup()\\\" joyrideStep=\\\"newGroupStep\\\" title=\\\"New Group\\\"\\r\\n        text=\\\"Once a user has entered a group name, to create a new group, click the “New Group” button. \\\"></button>\\r\\n    <button pButton type=\\\"button\\\" style=\\\" margin-left: 15px; \\\" label=\\\"New Row\\\" icon=\\\"pi pi-plus\\\" class=\\\"\\\" id=\\\"newRow\\\"\\r\\n        joyrideStep=\\\"newRowStep\\\" title=\\\"New Row\\\"\\r\\n        text=\\\"Once a user has entered a group name, to create a new row, click the “New Row” button. \\\"\\r\\n        (click)=\\\"addNewTermMapping()\\\"></button>\\r\\n    <!-- <button pButton type=\\\"button\\\" label=\\\"Export Term Map\\\" style=\\\"float: right\\\" ></button> &nbsp;&nbsp; -->\\r\\n</div>\\r\\n<div style=\\\"height: 5%;\\\">\\r\\n    &nbsp;\\r\\n</div>\\r\\n<div>\\r\\n    <p-table #termMapTable [columns]=\\\"termMapcols\\\" [value]=\\\"actualTermList\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n        editMode=\\\"row\\\" p-dataTable [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n        columnResizeMode=\\\"expand\\\" [reorderableColumns]=\\\"true\\\" dataKey=\\\"termId\\\" exportFilename=\\\"termMapData\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\">\\r\\n                <i class=\\\"pi pi-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\r\\n                <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Search Term Map\\\" joyrideStep=\\\"searchTermMap\\\"\\r\\n                    title=\\\"Search Term Map\\\" text=\\\"This is where a user can search the term map for a desired result.\\\"\\r\\n                    (input)=\\\"termMapTable.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\r\\n                <button type=\\\"button\\\" joyrideStep=\\\"exportTermMap\\\" title=\\\"Export Term Map\\\"\\r\\n                    text=\\\"Click the “Export Term Map” Button to generate a CSV file with the complete mapping information. The file will be named 'ExportTermMapInformation.csv' and stored in the default download folder.\\\"\\r\\n                    class=\\\"ui-button-warning\\\" pButton icon=\\\"fa fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"Export Term Map\\\"\\r\\n                    (click)=\\\"termMapTable.exportCSV()\\\" style=\\\"float:right\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n            <tr style=\\\"background-color: aqua\\\">\\r\\n                <th colspan=\\\"3\\\">MAXDS</th>\\r\\n                <th colspan=\\\"4\\\" *ngFor=\\\"let col of topCol\\\"> {{col.field}}</th>\\r\\n\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of termMapcols\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\"\\r\\n                    [hidden]=\\\"!col.isDisplayed\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                    <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                        {{col.header}}\\r\\n                        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                            ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                            ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [hidden]=\\\"!col.isDisplayed\\\">\\r\\n                    <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                        <input *ngIf=\\\"col.field === 'termId'\\\"\\r\\n                        pInputText type=\\\"text\\\" placeholder= {{presetTermId}}\\r\\n                        [value]=\\\"termMapTable.filters[col.field] ? termMapTable.filters[col.field].value : ''\\\"\\r\\n                        (input)=\\\"termMapTable.filter($event.target.value, col.field, col.filterMatchMode);resetPlaceholder()\\\"\\r\\n                        style=\\\"width: 60px\\\">\\r\\n                        <input *ngIf=\\\"col.field === 'name' || col.field === 'description'\\\"\\r\\n                            pInputText type=\\\"text\\\" placeholder= \\\"Search\\\"\\r\\n                            [value]=\\\"termMapTable.filters[col.field] ? termMapTable.filters[col.field].value : ''\\\"\\r\\n                            (input)=\\\"termMapTable.filter($event.target.value, col.field, col.filterMatchMode);\\\"\\r\\n                            style=\\\"width: 60px\\\">\\r\\n                        <input *ngIf=\\\"col.field !== 'termId' && col.field !== 'name' && col.field !== 'description'\\\"\\r\\n                            pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                            [value]=\\\"termMapTable.filters[col.field] ? termMapTable.filters[col.field].value : ''\\\"\\r\\n                            (input)=\\\"termMapTable.filter($event.target.value, col.field, col.filterMatchMode);onFilter($event.target.value, col.field, col.filterMatchMode)\\\"\\r\\n                            style=\\\"width: 60px\\\">\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\" let-editing=\\\"editing\\\">\\r\\n            <tr [pSelectableRow]=\\\"rowData\\\" [pEditableRow]=\\\"rowData\\\">\\r\\n                <td style=\\\"word-break:  break-all\\\" pTooltip=\\\"{{rowData.termId}}\\\" pEditableColumn>\\r\\n                    {{rowData.termId}}\\r\\n                </td>\\r\\n                <td style=\\\"word-break:  break-all\\\" pTooltip=\\\"{{rowData.name}}\\\" pEditableColumn>\\r\\n                    {{rowData.name}}\\r\\n                </td>\\r\\n                <td style=\\\"word-break:  break-all\\\" pTooltip=\\\"{{rowData.description}}\\\" pEditableColumn>\\r\\n                    {{rowData.description}}\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let mappingInfo of rowData.mappedInfoSets let idx = index\\\">\\r\\n                    <td *ngIf=\\\"isGroupVisible(mappingInfo.mapName)\\\" style=\\\"word-break:  break-all\\\"\\r\\n                        pTooltip=\\\"{{mappingInfo.mapTermId}}\\\" pEditableColumn>\\r\\n                        <div *ngIf=\\\"!rowData.isEditing\\\">{{rowData.mappedInfoSets[idx].mapTermId}}</div>\\r\\n                        <div *ngIf=\\\"rowData.isEditing\\\"><input type=\\\"text\\\" size=\\\"5\\\" [(ngModel)]=\\\"mappingInfo.mapTermId\\\">\\r\\n                        </div>\\r\\n\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"isGroupVisible(mappingInfo.mapName)\\\" style=\\\"word-break:  break-all\\\"\\r\\n                        pTooltip=\\\"{{mappingInfo.mapTermName}}\\\" pEditableColumn>\\r\\n                        <div *ngIf=\\\"!rowData.isEditing\\\">{{mappingInfo.mapTermName}}</div>\\r\\n                        <div *ngIf=\\\"rowData.isEditing\\\"><textarea rows=\\\"5\\\" cols=\\\"5\\\" type=\\\"text\\\"\\r\\n                                [(ngModel)]=\\\"mappingInfo.mapTermName\\\"></textarea> </div>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"isGroupVisible(mappingInfo.mapName)\\\" style=\\\"word-break:  break-all\\\"\\r\\n                        pTooltip=\\\"{{mappingInfo.mapTermDescription}}\\\" pEditableColumn>\\r\\n                        <div *ngIf=\\\"!rowData.isEditing\\\">{{mappingInfo.mapTermDescription}}</div>\\r\\n                        <div *ngIf=\\\"rowData.isEditing\\\"><textarea rows=\\\"5\\\" cols=\\\"5\\\" type=\\\"text\\\"\\r\\n                                [(ngModel)]=\\\"mappingInfo.mapTermDescription\\\"></textarea> </div>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"isGroupVisible(mappingInfo.mapName)\\\" style=\\\"word-break:  break-all\\\"\\r\\n                        pTooltip=\\\"{{mappingInfo.mapTermMappingInfo}}\\\" pEditableColumn>\\r\\n                        <div *ngIf=\\\"!rowData.isEditing\\\">{{mappingInfo.mapTermMappingInfo}}</div>\\r\\n                        <div *ngIf=\\\"rowData.isEditing\\\"><textarea rows=\\\"5\\\" cols=\\\"5\\\" type=\\\"text\\\"\\r\\n                                [(ngModel)]=\\\"mappingInfo.mapTermMappingInfo\\\"></textarea> </div>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td>\\r\\n                    <button *ngIf=\\\"!rowData.isEditing\\\" type=\\\"button\\\" pInitEditableRow pButton\\r\\n                        (click)=\\\"onRowEdit(rowData, index)\\\" icon=\\\"pi pi-pencil\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                        pTooltip=\\\"Edit Manage Term Data\\\"></button>&nbsp;\\r\\n                    <button *ngIf=\\\"rowData.isEditing\\\" type=\\\"button\\\" pSaveEditableRow pButton\\r\\n                        (click)=\\\"onRowSave(rowData, index)\\\" icon=\\\"pi pi-save\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                        pTooltip=\\\"Save Manage Term Data\\\"></button>&nbsp;\\r\\n                    <button *ngIf=\\\"rowData.isEditing\\\" type=\\\"button\\\" pCancelEditableRow pButton\\r\\n                        (click)=\\\"onRowCancel(rowData, index)\\\" icon=\\\"pi pi-times\\\" Class=\\\"ui-button-danger\\\"\\r\\n                        pTooltip=\\\"Cancel Edit\\\"></button>&nbsp;\\r\\n                    <button *ngIf=\\\"!rowData.isEditing\\\" type=\\\"button\\\" pButton (click)=\\\"onRowDelete(rowData, index)\\\"\\r\\n                        pInitEditableRow icon=\\\"pi pi-trash\\\" styleClass=\\\"ui-button-info\\\"\\r\\n                        pTooltip=\\\"Delete Manage Term Data\\\"></button>&nbsp;\\r\\n\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"summary\\\">\\r\\n            Total number of Records: {{termMapTable.totalRecords}}\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ManageTermService } from './manageTermService';\r\nimport { TermMap } from '../domain/termMap';\r\nimport {Messages, Message} from 'primeng/primeng';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'export-page',\r\n    templateUrl: './manageTerm.html',\r\n    styleUrls: [`../app.component.css`],\r\n  })\r\n  export class ManageTermComponent implements OnInit, OnDestroy  {\r\n    private subscription: ISubscription[] = [];\r\n    @ViewChild(('termMapTable')) termMapTable: any;\r\n    navigationSubscription;\r\n    termMapcols: any;\r\n    //termMapList: any[] = [];\r\n    editTerms: { [s: string]: any; } = {};\r\n    actualTermList: any[] = [];\r\n    msgs: Message[] = [];\r\n    showError: boolean;\r\n    errorMsg : string = '';\r\n\r\n    termMappingGroups: any[] =[];\r\n    topCol: any[] = [];\r\n    toogleCols: any[]= [];\r\n    compCheck: boolean;\r\n    ifrsCheck: boolean;\r\n    bloomCheck: boolean;\r\n    disableNewGroup: boolean = false;\r\n    newRow: boolean = false;\r\n\r\n    newGroupName: string;\r\n    shownGroupCount: number = 0\r\n    first = 0;\r\n    rows = 10;\r\n\r\n    presetTermId: string = 'Search';\r\n\r\n    constructor(private manageTermService: ManageTermService, private router: Router, private termMap: TermMap, private confirmationService: ConfirmationService) {\r\n        this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n          if (e instanceof NavigationEnd) {\r\n          }\r\n        });\r\n      }\r\n\r\n      ngOnInit() {\r\n        console.log('manageTermComponent : calling ngOnInit...');\r\n       //this.termMapcols = this.termMap.termMapCols();\r\n       this.loadTermMappingInformationList();\r\n        this.getTermMapGroups();\r\n\r\n        //pre set termId filter with termid passed in from AccuracyTest page, when user clicks on termid link\r\n        if (sessionStorage.getItem('accuracyTest.presetTermId') !== null) {\r\n          this.presetTermId = sessionStorage.getItem('accuracyTest.presetTermId');\r\n          this.onFilter(this.presetTermId, 'termId', 'contains');\r\n          sessionStorage.removeItem('accuracyTest.presetTermId');\r\n        }\r\n      }\r\n\r\n      resetPlaceholder() {\r\n        this.presetTermId = 'Search';\r\n      }\r\n\r\n      getTermMapGroups() {\r\n        this.manageTermService.getTermMapGroupNameList().subscribe((response) => {\r\n          this.termMappingGroups = response;\r\n          if(this.termMappingGroups.length >= 6) {\r\n            this.disableNewGroup = true;\r\n          } else\r\n          this.disableNewGroup = false;\r\n\r\n          this.termMappingGroups.forEach(obj => {\r\n            obj.isDisplayed = true;\r\n            var desc = { field: obj.mapName, header: obj.mapName };\r\n            this.topCol.push(desc);\r\n          })\r\n        });\r\n      }\r\n      ngOnDestroy() {\r\n        this.subscription.forEach(s => s.unsubscribe());\r\n        if (this.navigationSubscription) {\r\n            this.navigationSubscription.unsubscribe();\r\n          }\r\n      }\r\n      onFilter(filter: string, col: string, cont: string) {\r\n        // if (col === 'cik') {\r\n        //     if (filter.length === 10) {\r\n        //         filter = filter.replace(/^0+/, '');\r\n        //     }\r\n        //     this.termMapTable.filter(filter, col, 'contains');\r\n        // }\r\n        this.termMapTable.filter(filter, col , 'contains');\r\n      }\r\n\r\n      formatHeaders(list: any) {\r\n        this.termMapcols = [\r\n          { field: 'termId', header: 'Term ID' , isDisplayed: true, group:'Maxds'},\r\n           { field: 'name', header: 'Term Name' , isDisplayed: true , group:'Maxds'},\r\n          { field: 'description', header: 'Description' , isDisplayed: true , group:'Maxds'},\r\n         ];\r\n        if(list.mappedInfoSets[0]) {\r\n          this.termMapcols.push( { field: 'atermId', header: 'Term ID' ,  group:0, isDisplayed: true},\r\n          { field: 'atermName', header: 'Term Name' ,  group:0, isDisplayed: true},\r\n         { field: 'adescription', header: 'Description' ,  group:0, isDisplayed: true},\r\n         { field: 'amapping', header: 'Mapping' ,  group:0, isDisplayed: true})\r\n        }\r\n        if( list.mappedInfoSets[1]) {\r\n          this.termMapcols.push( { field: 'btermId', header: 'Term ID' ,  group:1, isDisplayed: true},\r\n          { field: 'btermName', header: 'Term Name' ,  group:1, isDisplayed: true},\r\n         { field: 'bdescription', header: 'Description' ,  group:1, isDisplayed: true},\r\n         { field: 'bmapping', header: 'Mapping' ,  group:1, isDisplayed: true},)\r\n        }\r\n        if( list.mappedInfoSets[2]) {\r\n          this.termMapcols.push({ field: 'ctermId', header: 'Term ID' ,  group:2, isDisplayed: true},\r\n          { field: 'ctermName', header: 'Term Name' ,  group:2, isDisplayed: true},\r\n         { field: 'cdescription', header: 'Description' ,  group:2, isDisplayed: true},\r\n         { field: 'cmapping', header: 'Mapping' ,  group:2, isDisplayed: true},)\r\n        }\r\n        if( list.mappedInfoSets[3]) {\r\n          this.termMapcols.push({ field: 'dtermId', header: 'Term ID' ,  group:3, isDisplayed: true},\r\n          { field: 'dtermName', header: 'Term Name' ,  group:3, isDisplayed: true},\r\n         { field: 'ddescription', header: 'Description' ,  group:3, isDisplayed: true},\r\n         { field: 'dmapping', header: 'Mapping' ,  group:3, isDisplayed: true},)\r\n        }\r\n        if( list.mappedInfoSets[4]) {\r\n          this.termMapcols.push( { field: 'etermId', header: 'Term ID' ,  group:4, isDisplayed: true},\r\n          { field: 'etermName', header: 'Term Name' ,  group:4, isDisplayed: true},\r\n         { field: 'edescription', header: 'Description' ,  group:4, isDisplayed: true},\r\n         { field: 'eapping', header: 'Mapping' ,  group:4, isDisplayed: true},)\r\n        }\r\n        if( list.mappedInfoSets[5]) {\r\n          this.termMapcols.push({ field: 'ftermId', header: 'Term ID' ,  group:5, isDisplayed: true},\r\n          { field: 'ftermName', header: 'Term Name' ,  group:5, isDisplayed: true},\r\n         { field: 'fdescription', header: 'Description' ,  group:5, isDisplayed: true},\r\n         { field: 'fmapping', header: 'Mapping' ,  group:5, isDisplayed: true},)\r\n        }\r\n        this.termMapcols.push({ field: '', header: 'Options', isDisplayed: true , group:'Options'},)\r\n      }\r\n\r\n\r\n\r\n      onRowEdit(rowdata, index) {\r\n        // this.actualTermList[index].isEditing = true;\r\n        rowdata.isEditing = true;\r\n        this.editTerms[rowdata.termId] = {... rowdata}\r\n    }\r\n\r\n    onRowCancel(rowdata, index) {\r\n      // this.actualTermList[index].isEditing = false;\r\n      rowdata.isEditing = false;\r\n      delete this.editTerms[rowdata.termId];\r\n      if(this.newRow) {\r\n        this.actualTermList.shift();\r\n      }\r\n    }\r\n\r\n    onRowDelete(rowdata, index) {\r\n      this.msgs = [];\r\n      var mapInfo = rowdata;\r\n      this.confirmationService.confirm({\r\n        message: 'Are you sure you want to delete this ' + mapInfo.termId + ' ?',\r\n        header: 'Remove Term Id ' +  mapInfo.termId,\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n      this.manageTermService.removeTermMap(mapInfo).subscribe((response) => {\r\n        if(response) {\r\n          //this.termMapList[index].termId = re;\r\n          // this.actualTermList[index].isEditing = false;\r\n          rowdata.isEditing = false;\r\n          window.scroll(0, 0);\r\n          this.msgs = [{severity:'info', summary:'Term Map', detail:' Successfully removed Mapping information for the term '+ mapInfo.termId}];\r\n          this.loadTermMappingInformationList();\r\n          //this.getTermMapGroups();\r\n        }\r\n      });\r\n      rowdata.isEditing = false;\r\n    },\r\n    reject: () => {\r\n    }\r\n});\r\n\r\n    }\r\n    addNewTermMapping() {\r\n      var termMap:any = {};\r\n      termMap.mappingInfo = {};\r\n      termMap.termId = 'TBD'\r\n      termMap.isEditing = true;\r\n      termMap.isTermRule=false;\r\n      termMap.mappedInfoSets = [];\r\n      for (var i = 0; i < this.termMappingGroups.length; i++) {\r\n          var mappingInfo:any = {};\r\n          mappingInfo.mapName = this.termMappingGroups[i].mapName;\r\n          termMap.mappedInfoSets.push(mappingInfo);\r\n      }\r\n      this.newRow = true;\r\n      this.actualTermList.forEach(obj => {\r\n        if(obj.termId === termMap.termId) {\r\n          const counter: number = this.actualTermList.length + 1;\r\n\r\n          termMap.termId = termMap.termId + ' '  + counter;\r\n        }\r\n      })\r\n      this.actualTermList.unshift(termMap);\r\n  };\r\n\r\n    onRowSave(rowdata, index) {\r\n      //this.editTerms[index] = rowdata\r\n      //this.termMapList[index] = this.editTerms[rowdata.termId];\r\n      // var mapInfo = this.actualTermList[index];\r\n      var mapInfo = rowdata;\r\n      this.msgs = [];\r\n      this.manageTermService.saveTermMap(mapInfo).subscribe((response) => {\r\n        if(response) {\r\n          //this.termMapList[index].termId = re;\r\n          // this.actualTermList[index].isEditing = false;\r\n          rowdata.isEditing = false;\r\n          this.loadTermMappingInformationList();\r\n          //this.getTermMapGroups();\r\n          window.scroll(0, 0);\r\n          this.msgs = [{severity:'info', summary:'Term Map', detail:' Successfully saved Mapping information for the term '+ mapInfo.termId}];\r\n        }\r\n      });\r\n      // this.actualTermList[index].isEditing = false;\r\n      rowdata.isEditing = false;\r\n      delete this.editTerms[rowdata.termId];\r\n    //this.editTerms = [];\r\n  }\r\n\r\naddNewGroup() {\r\n  this.errorMsg =  \"\";\r\n  this.showError = false;\r\n    if( !this.newGroupName || this.newGroupName.length ===0) {\r\n      window.scroll(0, 0);\r\n        this.errorMsg = 'Error\",\"Please enter a valid term mapping group name.';\r\n        this.showError = true;\r\n        return;\r\n    }\r\n   this.manageTermService.addTermMappingGroup(this.newGroupName).subscribe((response) => {\r\n        if (response.status) {\r\n            var newData = {mapName: this.newGroupName};\r\n            this.termMappingGroups.push(newData);\r\n            this.newGroupName = \"\";\r\n            this.actualTermList = [];\r\n            this.topCol = [];\r\n            this.getTermMapGroups();\r\n            this.loadTermMappingInformationList();\r\n            window.scroll(0, 0);\r\n            this.msgs = [{severity:'info', summary:'Add new Group', detail:' Successfully added new Term Mapping group'}];\r\n        }\r\n        else{\r\n          window.scroll(0, 0);\r\n          this.errorMsg =  response.errorMessage;\r\n          this.showError = true;\r\n        }\r\n    },\r\n    function (err) {\r\n      window.scroll(0, 0);\r\n      this.errorMsg =  'Failed to add Term Mapping group.';\r\n      this.showError = true;\r\n    }\r\n);\r\n}\r\n\r\nremoveGroup(groupName: string) {\r\n  this.msgs = [];\r\n  this.errorMsg = \"\";\r\n  this.showError = false;\r\n  this.confirmationService.confirm({\r\n    message: 'Are you sure you want to delete all the mapping info associated with the group ' + groupName + ' ?',\r\n    header: 'Remove Group ' +  groupName,\r\n    icon: 'pi pi-exclamation-triangle',\r\n    accept: () => {\r\n      this.manageTermService.removeTermMappingGroup(groupName).subscribe((response) => {\r\n        if (response.status === true) {\r\n            this.termMappingGroups = [];\r\n            this.actualTermList = [];\r\n            this.topCol = [];\r\n            this.getTermMapGroups();\r\n            this.loadTermMappingInformationList();\r\n            window.scroll(0, 0);\r\n            this.msgs = [{severity:'info', summary:'Successfully removed group and all the mapping associated with the group.', detail:''}];\r\n        } else {\r\n          window.scroll(0, 0);\r\n          this.errorMsg = response.errorMessage;\r\n          this.showError = true;\r\n        }\r\n      });\r\n\r\n    },\r\n    reject: () => {\r\n    }\r\n});\r\n\r\n}\r\n\r\nloadTermMappingInformationList () {\r\n  this.manageTermService.getManageTermMap().subscribe((response) => {\r\n    this.actualTermList = response;\r\n    this.termMapcols = [];\r\n    this.formatHeaders(response[0])\r\n    });\r\n\r\n};\r\n    groupClick(group, index) {\r\n     console.log(group, index);\r\n      if(this.toogleCols.includes(group)) {\r\n        this.termMappingGroups[index].isDisplayed = true\r\n        this.topCol.splice(this.termMappingGroups.indexOf(group),0, { field: group.mapName, header: group.mapName });\r\n        var removeIndex = this.toogleCols.indexOf(group);\r\n        this.toogleCols.splice(removeIndex, 1);\r\n        this.termMapcols.forEach(obj => {\r\n          if(obj.group === index) {\r\n            obj.isDisplayed = true;\r\n          }\r\n        })\r\n      } else {\r\n        this.termMapcols.forEach(obj => {\r\n          if(obj.group === index) {\r\n            obj.isDisplayed = false;\r\n          }\r\n        })\r\n      this.termMappingGroups[index].isDisplayed = false\r\n      this.topCol = this.topCol.filter(item => item.field !== group.mapName);\r\n      //this.topCol.splice(index,1);\r\n      this.toogleCols.push(group);\r\n    }\r\n    }\r\n\r\n    isGroupVisible (mapName){\r\n\r\n      for (var i = 0; i < this.termMappingGroups.length; i++) {\r\n          if(mapName === this.termMappingGroups[i].mapName )\r\n          {\r\n              return this.termMappingGroups[i].isDisplayed;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ManageTermService {\r\n    private manageTermMapUrl: string = \"/api/TermMap/GetAllMapInformation\";\r\n    private termMapGroupNameListUrl: string = \"/api/TermMap/GroupNames\";\r\n    private addTermMapGroupUrl: string = \"/api/TermMap/AddGroup\";\r\n    private removeTermMapGroupUrl = '/api/TermMap/RemoveGroup';\r\n    private saveTermMapUrl = '/api/TermMap/MapInformation/Save';\r\n    private removeTermMapUrl = '/api/TermMap/MapInformation/RemoveItem';\r\n    \r\n\r\n    // private manageTermMapUrl: string = \"https://localhost:18081/api/TermMap/GetAllMapInformation\";\r\n    // private termMapGroupNameListUrl: string = \"https://localhost:18081/api/TermMap/GroupNames\";\r\n    // private addTermMapGroupUrl: string = \"https://localhost:18081/api/TermMap/AddGroup\";\r\n    // private removeTermMapGroupUrl = 'https://localhost:18081/api/TermMap/RemoveGroup';\r\n    // private saveTermMapUrl = 'https://localhost:18081/api/TermMap/MapInformation/Save';\r\n    // private removeTermMapUrl = 'https://localhost:18081/api/TermMap/MapInformation/RemoveItem';\r\n    \r\n    constructor(private http: Http){}\r\n\r\n    getManageTermMap() {\r\n        console.log('Manage Term Map : getManageTermMap()...');\r\n        return this.http.get(`${this.manageTermMapUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getTermMapGroupNameList() {\r\n        console.log('Manage Term Map : getTermMapGroupNameList()...');\r\n        return this.http.get(`${this.termMapGroupNameListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n\r\n    }\r\n    addTermMappingGroup(groupName: string) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({groupName: groupName});\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get(`${this.addTermMapGroupUrl}?groupName=` + groupName).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    removeTermMappingGroup(groupName: string) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({groupName: groupName});\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get(`${this.removeTermMapGroupUrl}?groupName=` + groupName + `&userId=` +  localStorage.getItem('userid')).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n \r\n\r\n    saveTermMap(info: any) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({termId: info.termId, name: info.name, description: info.description, isEditing: info.isEditing, isTermRule: info.isTermRule,\r\n            mappedInfoSets: info.mappedInfoSets});\r\n        headers.append('Content-Type', 'application/json');\r\n        \r\n        return this.http.put(`${this.saveTermMapUrl}`, body, {\r\n            headers: headers\r\n          }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n          }\r\n          ))\r\n    }\r\n\r\n    removeTermMap(info: any) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({termId: info.termId, name: info.name, description: info.description, isEditing: info.isEditing, isTermRule: info.isTermRule,\r\n            mappedInfoSets: info.mappedInfoSets});\r\n        headers.append('Content-Type', 'application/json');\r\n        \r\n        return this.http.put(`${this.removeTermMapUrl}`, body, {\r\n            headers: headers\r\n          }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n          }\r\n          ))\r\n    }\r\n}","module.exports = \"<div>\\r\\n    <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n        fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <strong>{{errorMsg}}</strong>\\r\\n</div>\\r\\n<p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\r\\n<div>\\r\\n\\r\\n    <h2 style=\\\"background-color:lightblue; width: 100%; text-align: center;\\\">Term Rule Processing</h2>\\r\\n\\r\\n</div>\\r\\n<p-tabView>\\r\\n    <p-tabPanel header=\\\"Process All Terms\\\" *ngIf=\\\"isAdmin\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"exprcolumn\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <p-radioButton name=\\\"filterRadio\\\" value=\\\"company\\\" [(ngModel)]=\\\"filterRadio\\\"></p-radioButton>\\r\\n                        <label>Search by Company: </label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-autoComplete [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\" [size]=\\\"50\\\"\\r\\n                            [suggestions]=\\\"filteredCompany\\\" (completeMethod)=\\\"searchCompany($event)\\\"\\r\\n                            (ngModelChange)=\\\"onSelectCompany($event)\\\"\\r\\n                            placeholder=\\\"Search Company\\\" [size]=\\\"50\\\" [dropdown]=\\\"true\\\">\\r\\n                        </p-autoComplete>\\r\\n\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Go To Peer Group\\\" class=\\\"ui-button-rounded\\\"\\r\\n                            (click)=\\\"goToPeer($event)\\\"></button>&nbsp;&nbsp;\\r\\n                        <button type=\\\"button\\\" pButton (click)=\\\"resetCoverage()\\\" icon=\\\"pi pi-times\\\"\\r\\n                            Class=\\\"ui-button-danger\\\" pTooltip=\\\"Reset Term Rule Processing\\\"></button>&nbsp;\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"height: 5px;\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <p-radioButton name=\\\"filterRadio\\\" value=\\\"group\\\" [(ngModel)]=\\\"filterRadio\\\"></p-radioButton>\\r\\n                        Search by Group: <label>\\r\\n                            Division -> Sector:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\"\\r\\n                            [(ngModel)]=\\\"divSector\\\" [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                            (onChange)=\\\"divSectorChange($event)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                        </p-dropdown>\\r\\n                        &nbsp; {{divisionCount}}\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <label>Industry: </label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredindustry\\\" [(ngModel)]=\\\"industry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                            [showClear]=\\\"true\\\" (onChange)=\\\"processIndustryChange($event)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                            [itemSize]=\\\"31\\\" filter=\\\"true\\\" [style]=\\\"{'width':'400px'}\\\"></p-dropdown>\\r\\n                        &nbsp; {{industryCount}}\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <label>Filer Category:</label>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <p-dropdown [options]=\\\"filteredfilerCategory\\\" [(ngModel)]=\\\"filerCategory\\\"\\r\\n                            placeholder=\\\"Select Filer Category\\\" [showClear]=\\\"true\\\"\\r\\n                            (onChange)=\\\"processfilCatChange($event)\\\" [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\"\\r\\n                            filter=\\\"true\\\" [style]=\\\"{'width':'400px'}\\\"></p-dropdown>&nbsp; {{categoryCount}}\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        <p-radioButton name=\\\"filterRadio\\\" value=\\\"all\\\" [(ngModel)]=\\\"filterRadio\\\"></p-radioButton>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <label>\\r\\n                            All Companies\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"column1\\\">\\r\\n                        &nbsp;\\r\\n                    </div>\\r\\n                    <div class=\\\"column2\\\">\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Process Now\\\" class=\\\"ui-button-rounded ui-button-success\\\"\\r\\n                            (click)=\\\"ProcessAllRulesWithCriteria()\\\"></button> &nbsp;&nbsp;\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Continue Processing\\\"\\r\\n                            class=\\\"ui-button-rounded ui-button-warning\\\" (click)=\\\"continueProcessingAllTerms()\\\"></button>\\r\\n                        &nbsp;&nbsp;\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Cancel Processing\\\"\\r\\n                            class=\\\"ui-button-rounded ui-button-danger\\\"\\r\\n                            (click)=\\\"cancelProcessing()\\\"></button>&nbsp;&nbsp;\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Reset Processing\\\"\\r\\n                            class=\\\"ui-button-rounded ui-button-danger\\\" (click)=\\\"resetProcessingPopup = true\\\"></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </p-tabPanel>\\r\\n    <p-tabPanel header=\\\"Process Selected Terms\\\">\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"column1\\\">\\r\\n                <input #accuracyTestCheckbox type=\\\"checkbox\\\" class=\\\" customcheckbox\\\" (click)=\\\"enableAccuracyTest($event)\\\" style=\\\"margin:5px !important;\\\">\\r\\n                <label style=\\\"margin:5px !important;\\\">Process Accuracy Test Terms: </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-8\\\">\\r\\n                <button *ngIf=\\\"checkAccuracyTest\\\" icon=\\\"pi pi-replay\\\" label=\\\"Process Accuracy Test Terms\\\"\\r\\n                    style=\\\"margin:3px \\\" type=\\\"button\\\" pButton (click)=\\\"processAccuTerm()\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton class=\\\"column1\\\" value=\\\"termRadio\\\" label=\\\"Term Name:\\\" name=\\\"termN\\\" [(ngModel)]=\\\"processRadio\\\" (onClick)=\\\"termRadioChecked($event)\\\"\\r\\n                inputId=\\\"termN\\\"></p-radioButton>\\r\\n            <div class=\\\"col-xs-8\\\">\\r\\n                <p-autoComplete [style]=\\\"{'width':'400px !important'}\\\" [inputStyle]=\\\"{'width':'400px'}\\\" name=\\\"termName\\\"\\r\\n                    [suggestions]=\\\"filteredTerms\\\" (completeMethod)=\\\"filterTerm($event)\\\" placeholder=\\\"Search Terms\\\"\\r\\n                    [multiple]=\\\"true\\\" [(ngModel)]=\\\"selectedTerms\\\" [dropdown]=\\\"true\\\"\\r\\n                    (ngModelChange)=\\\"onSelectTerm($event)\\\" [disabled]=\\\"termAutoCompleteDisable\\\">\\r\\n                </p-autoComplete>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton name=\\\"termN\\\" class=\\\"column1\\\" value=\\\"companyRadio\\\" [(ngModel)]=\\\"processRadio\\\"\\r\\n                label=\\\"Search by Company:\\\">\\r\\n            </p-radioButton>\\r\\n            <div class=\\\"col-xs-8\\\">\\r\\n                <p-autoComplete [style]=\\\"{'width':'400px !important'}\\\"\\r\\n                    [inputStyle]=\\\"{'width':'400px','maxwidth':'400px'}\\\" aria-required=\\\"true\\\" name=\\\"companyName\\\"\\r\\n                    [suggestions]=\\\"selectedTermsfilteredCompany\\\" placeholders=\\\"filteredCompany\\\"\\r\\n                    (completeMethod)=\\\"selectedTermsSearchCompany($event)\\\" placeholder=\\\"Search Company\\\"\\r\\n                    [dropdown]=\\\"false\\\" multiple=\\\"true\\\" aria-required=\\\"companyName\\\" [(ngModel)]=\\\"selectedTermsCompanies\\\"\\r\\n                    (onSelect)=\\\"addOrRemoveEntities()\\\" (onUnselect)=\\\"addOrRemoveEntities()\\\">\\r\\n                </p-autoComplete>\\r\\n                <button icon=\\\"pi pi-check\\\" label=\\\"Go To Peer Group\\\" style=\\\"margin:3px\\\"\\r\\n                    [disabled]=\\\"!(selectedTermsCompanies.length === 1)\\\" (click)=\\\"selectedTermGoToPeer($event)\\\"\\r\\n                    class=\\\"create-profile\\\" type=\\\"button\\\" pButton></button>&nbsp;\\r\\n\\r\\n                <button (click)=\\\"handleCIKListSearch('cik-dialog')\\\" pTooltip=\\\"Click to Add CIK list\\\" style=\\\"margin:0; border:0; outline:0; background-color:transparent; box-shadow: none; \\\" type=\\\"button\\\" pButton >\\r\\n                    <img src=\\\"../../assets/images/Upload.PNG\\\" alt=\\\"CIK Upload\\\" style=\\\"background: url('../../assets/images/Upload.PNG')\\\" height=\\\"100%\\\" width=\\\"100%\\\" /></button>&nbsp;\\r\\n\\r\\n                <jw-modal id=\\\"cik-dialog\\\">\\r\\n                  <table border=\\\"0\\\" style=\\\"width: 100%;\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"padding: 20px; width:100%; column-span: all;\\\">\\r\\n                          <label style=\\\"padding-top: 5px; word-break: keep-all\\\" >Please copy paste CIK list or upload a csv file with comma as delimiter. Invalid CIKs will be ignored. </label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width:100%; column-span: all;\\\">\\r\\n                            <table border=\\\"0\\\" style=\\\"padding: 10px\\\">\\r\\n                                <tr>\\r\\n                                  <td valign=\\\"top\\\" align=\\\"right\\\" style=\\\"padding: 20px; word-break: keep-all; width:20%;\\\" ><label>CIKs: </label>\\r\\n                                  </td>\\r\\n                                  <td valign=\\\"top\\\" style=\\\"padding: 20px; width: 60%;\\\" >\\r\\n                                    <textarea style=\\\"width: 100%;\\\" [(ngModel)]=\\\"ciksFromDialog\\\" ></textarea>\\r\\n                                  </td>\\r\\n                                  <td valign=\\\"bottom\\\" style=\\\"padding: 20px; width:20%; \\\">\\r\\n                                      <input #inputFile id=\\\"file-field\\\" name=\\\"file-field\\\"  onclick=\\\"this.value = null\\\" (change)=\\\"uploadFile($event)\\\" type=\\\"file\\\" > <!--    accept=\\\".png,.jpg,.jpeg\\\">   -->\\r\\n                                      <!-- <button type=\\\"button\\\"  (click)=\\\"upload('cik-dialog');\\\">Upload</button>&nbsp;&nbsp;  -->\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </table>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"padding: 20px; width: 100%; column-span: all; \\\">\\r\\n                            <button type=\\\"button\\\"   (click)=\\\"close('cik-dialog');\\\">Close</button>&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                            <button type=\\\"button\\\"   (click)=\\\"confirm('cik-dialog');\\\">Confirm</button>&nbsp;&nbsp;\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                  </table>\\r\\n\\r\\n                </jw-modal>\\r\\n\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"resetCoverageSelected()\\\" icon=\\\"pi pi-times\\\"\\r\\n                    Class=\\\"ui-button-danger\\\" pTooltip=\\\"Reset Term Rule Processing\\\"></button>&nbsp;\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton name=\\\"termN\\\" class=\\\"column1\\\" value=\\\"divisionRadio\\\"\\r\\n                label=\\\"Search by Group: Division -> Sector:\\\" [(ngModel)]=\\\"processRadio\\\">\\r\\n            </p-radioButton>\\r\\n            <div class=\\\"col-xs-7\\\">\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\"\\r\\n                    [(ngModel)]=\\\"selectedTermDivSector\\\" [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    (onChange)=\\\"selectedTermDivSectorChange(selectedTermDivSector)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{selectedTermDivisionCount}}\\r\\n                <button pButton type=\\\"button\\\" [disabled]=\\\"(selectedTerms.length < 1 || termAutoCompleteDisable)\\\" label=\\\"Show Resolved\\\"\\r\\n                    class=\\\"ui-button-success\\\" (click)=\\\"selectedTermShowResolved()\\\"></button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"industry\\\" class=\\\"column1 form-control-label\\\">Industry:</label>\\r\\n            <div class=\\\"col-xs-5\\\">\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" placeholder=\\\"Select Industry\\\"\\r\\n                    [(ngModel)]=\\\"selectedTermIndustry\\\" [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    (onChange)=\\\"selectedTermProcessIndustryChange(selectedTermIndustry)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{selectedTermSectorCount}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n\\r\\n            <label for=\\\"filerCategory\\\" class=\\\"column1 form-control-label\\\">Filer\\r\\n                Category:</label>\\r\\n            <div class=\\\"col-xs-5\\\">\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" placeholder=\\\"Select Filer Category\\\"\\r\\n                    [(ngModel)]=\\\"selectedTermFilerCategory\\\" [style]=\\\"{'width':'400px'}\\\"\\r\\n                    dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    (onChange)=\\\"selectedTermProcessfilCatChange(selectedTermFilerCategory)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{selectedTermCategoryCount}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!--\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton class=\\\"column1\\\" name=\\\"termN\\\" label=\\\"Process Accuracy Test Terms:\\\" value=\\\"accuRadio\\\"\\r\\n                [(ngModel)]=\\\"processRadio\\\" inputId=\\\"termN\\\"></p-radioButton>\\r\\n            <div class=\\\"col-xs-8\\\">\\r\\n                <button *ngIf=\\\"processRadio === 'accuRadio'\\\" icon=\\\"pi pi-replay\\\" label=\\\"Process Accuracy Test Terms\\\"\\r\\n                    style=\\\"margin:3px \\\" type=\\\"button\\\" pButton (click)=\\\"processAccuTerm()\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n        -->\\r\\n\\r\\n\\r\\n\\r\\n        <p-table #entityTable [columns]=\\\"homeEntityCol\\\" *ngIf=\\\"entityList && (entityList.length > 0)\\\"\\r\\n            [value]=\\\"entityList\\\" [responsive]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedEntity\\\"\\r\\n            [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th style=\\\"width:4em;\\\">\\r\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n                    <th *ngFor=\\\"let col of columns\\\">\\r\\n                        {{col.header}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                <tr style=\\\"height:34px\\\">\\r\\n                    <td>\\r\\n                        <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let col of columns\\\">\\r\\n                        {{rowData[col.field]}}\\r\\n\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n\\r\\n        <div style=\\\"margin: auto; width: 40%; padding: 10px;\\\">\\r\\n            <button *ngIf=\\\"selectedTerms.length > 0\\\" icon=\\\"pi pi-replay\\\"\\r\\n                label=\\\"Process Selected Terms\\\" style=\\\"margin:3px \\\" type=\\\"button\\\" pButton\\r\\n                (click)=\\\"processSelectedTerm()\\\"></button>\\r\\n            <button pButton type=\\\"button\\\" label=\\\"Cancel Processing\\\" class=\\\"ui-button-rounded ui-button-danger\\\"\\r\\n                (click)=\\\"cancelProcessing()\\\"></button>\\r\\n        </div>\\r\\n\\r\\n    </p-tabPanel>\\r\\n\\r\\n</p-tabView>\\r\\n\\r\\n<div>\\r\\n    <div style=\\\"margin-bottom: 15px !important;\\\">\\r\\n        <button pButton type=\\\"button\\\" label=\\\"Refresh Status\\\" icon=\\\"pi pi-refresh\\\" style=\\\"margin-bottom: 5px;\\\"\\r\\n            class=\\\"ui-button-rounded ui-button-success pull-left\\\" (click)=\\\"refreshLoadStatus()\\\"></button>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- <button pButton type=\\\"button\\\" label=\\\"Cancel Processing\\\" icon=\\\"pi pi-times\\\" tyle=\\\"margin-bottom: 5px;\\\"\\r\\n                class=\\\"ui-button-rounded ui-button-danger pull-left\\\" (click)=\\\"cancelProcessing\\\"></button> -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div style=\\\"padding: 10px;\\\">\\r\\n    <p-table #statusTable [columns]=\\\"statusCols\\\" [value]=\\\"statusNames\\\" [responsive]=\\\" true\\\"\\r\\n        [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\"\\r\\n        [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" p-dataTable\\r\\n        exportFilename=\\\"statusData\\\" paginatorPosition=\\\"top\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n        paginatorTemplate=\\\"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {Exporters}\\\"\\r\\n        [showCurrentPageReport]=\\\"true\\\" (onPage)=\\\"pagenation($event)\\\"\\r\\n        currentPageReportTemplate=\\\"Showing {{first}} of{{total}}\\\">\\r\\n\\r\\n        <!--<ng-template pTemplate=\\\"caption\\\" style=\\\"height: 50px !important;\\\">\\r\\n                Total number of Records: {{statusTable.totalRecords}}\\r\\n                currentPageReportTemplate=\\\"{first} to {last} of {totalRecords}\\\"\\r\\n                <p-paginator [rows]=\\\"10\\\" totalRecords=\\\"100\\\" paginatorPosition=\\\"top\\\" (onPageChange)=\\\"paginate($event)\\\"\\r\\n                    [showCurrentPageReport]=\\\"true\\\" currentPageReportTemplate=\\\"{first} to {last} of {totalRecords}\\\">\\r\\n                </p-paginator>\\r\\n\\r\\n            </ng-template>-->\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                    <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                        {{col.header}}\\r\\n                        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                            ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                            ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                    <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                        <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                            [value]=\\\"statusTable.filters[col.field] ? statusTable.filters[col.field].value : ''\\\"\\r\\n                            (input)=\\\"statusTable.filter($event.target.value, col.field, col.filterMatchMode);\\r\\n                                onRowUnClick();onFilter($event.target.value, col.field, col.filterMatchMode)\\\"\\r\\n                            style=\\\"width: 150px\\\">\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\r\\n            <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n                <td *ngFor=\\\"let col of columns\\\" style=\\\"word-break:break-all\\\">\\r\\n                    <span *ngIf=\\\"col.header !=='Last Modified'\\\" pTooltip=\\\"{{rowData[col.field] }}\\\">\\r\\n                        {{rowData[col.field]}}</span>\\r\\n                    <span *ngIf=\\\"col.header =='Last Modified'\\\" pTooltip=\\\"{{rowData[col.field] | date :'h:mm:ss a'}}\\\">\\r\\n                        {{rowData[col.field] | date :'MM/dd/yyyy HH:mm:ss'}} </span>\\r\\n\\r\\n                </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-table>\\r\\n</div>\\r\\n\\r\\n<p-dialog header=\\\"Reset And Restart Term Processing\\\" [(visible)]=\\\"resetProcessingPopup\\\" [modal]=\\\"true\\\"\\r\\n    [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\" position=\\\"top\\\" [contentStyle]=\\\"{'max-height':'70vh'}\\\"\\r\\n    [draggable]=\\\"true\\\" [resizable]=\\\"true\\\" [focusOnShow]=\\\"true\\\">\\r\\n    <div style=\\\"padding: 10px;\\\">\\r\\n\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n            <label>\\r\\n                Reset Processing will change current Term Rule Inprogress to NotProcessed Status.\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"row p-y-5\\\">\\r\\n            <label>\\r\\n                Reset Processing will restart only Term Rules that are currently in Inprogress Status.\\r\\n            </label>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"resetProcessingPopup=false; resetProcessing()\\\"\\r\\n            label=\\\"Reset Term Processing\\\"></button>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"resetProcessingPopup=false\\\" label=\\\"Cancel\\\"\\r\\n            class=\\\"ui-button-secondary\\\"></button>\\r\\n    </p-footer>\\r\\n</p-dialog>\\r\\n\"","import { Component, ElementRef } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ProcessingTermsService } from './processingTermsService';\r\nimport { UtilService } from '../utils/utilService';\r\nimport { Messages, Message, Dropdown } from 'primeng/primeng';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { StatusService } from '../status/statusService';\r\nimport { Status } from '../domain/status';\r\nimport { MappedEntity } from 'app/domain/mappedEntity';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { DialogModalService } from 'app/_dialogmodal';\r\n\r\n@Component({\r\n  selector: 'ProcessingTerms-page',\r\n  templateUrl: './processingTerms.html',\r\n  styleUrls: [`../app.component.css`],\r\n})\r\nexport class ProcessingTermsComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  companyList: any[];\r\n  filteredCompany: any[];\r\n  companyName: string;\r\n  industryList: any[];\r\n  filteredindustry: any[];\r\n  industry: string;\r\n  divSectorList: any[];\r\n  filtereddivSector: any[];\r\n  divSector: string;\r\n  division: string;\r\n  sector: string;\r\n  filerCategoryList: any[];\r\n  filteredfilerCategory: any[];\r\n  filerCategory: string = null;\r\n  errorMsg: string = '';\r\n  showError: boolean;\r\n  company: string;\r\n  completeEntities: any[] = [];\r\n  completeCompanyList: any[];\r\n  divisionCount: number;\r\n  industryCount: number;\r\n  categoryCount: number;\r\n  filterRadio: string;\r\n  processRadio: string;\r\n  checkAccuracyTest: boolean;\r\n  allCompanies: string;\r\n  msgs: Message[] = [];\r\n  progressSpinner: boolean;\r\n  terms: any = [];\r\n  filteredTerms: any = [];\r\n  selectedTerms: any = [];\r\n  resetProcessingPopup: boolean;\r\n\r\n  statusNumber: number = 0;\r\n  statusCols: any;\r\n  cols: any[];\r\n\r\n  statusNames: any[];\r\n  interval: any;\r\n\r\n  first: any = 0;\r\n  total: any = 0;\r\n  row: any = 10;\r\n\r\n  selectedTermsCompanyNameRadio: any;\r\n  selectedTermsCompanyName;\r\n  selectedTermsCompanies = [];\r\n  selectedTermsfilteredCompany = [];\r\n  selectedTermsDivisionRadio;\r\n  selectedTermDivSector;\r\n  selectedTermIndustry;;\r\n  selectedTermFilerCategory;\r\n  selectedTermDivisionCount;\r\n  selectedTermSectorCount;\r\n  selectedTermCategoryCount;\r\n  selectedTermDivision;\r\n  selectedTermSector;\r\n  selectedEntity;\r\n\r\n  isAdmin: boolean;\r\n\r\n  homeEntityCol = [\r\n    { field: 'cik', header: 'Cik' },\r\n    { field: 'companyName', header: 'Company Name' }\r\n  ];\r\n  entityList = [];\r\n\r\n  ciksFromDialog: string;\r\n  gotoPeerEntities = [];\r\n  termAutoCompleteDisable: boolean = false;\r\n\r\n  @ViewChild('inputFile') myInputVariable: ElementRef;\r\n  @ViewChild('accuracyTestCheckbox') accuracyTestCheckbox: ElementRef;\r\n\r\n  constructor(private processingTermsService: ProcessingTermsService, private router: Router, private utilService: UtilService, private confirmationService: ConfirmationService,\r\n    private statusService: StatusService, private status: Status, private profileService: ProfileService, private dialogModalService: DialogModalService) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('ProcessingTermsComponent : calling ngOnInit...');\r\n    this.utilService.getUserRolesList().subscribe((response) => {\r\n        this.isAdmin = response.includes('admin');\r\n      });\r\n    this.utilService.getCompanyList().subscribe((response) => { this.companyList = response; });\r\n    this.utilService.getDivSectorList().subscribe((response) => {\r\n      this.divSectorList = response;\r\n      this.filtereddivSector = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filtereddivSector.push(name)\r\n      });\r\n    })\r\n    this.utilService.getIndustryList().subscribe((response) => { this.industryList = response; })\r\n    this.utilService.getFilerCategoryList().subscribe((response) => {\r\n      this.filerCategoryList = response;\r\n      this.filteredfilerCategory = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filteredfilerCategory.push(name)\r\n      });\r\n    })\r\n    this.utilService.getCompleteCompanyList().subscribe((response) => { this.completeCompanyList = response });\r\n    this.filterRadio = 'company';\r\n    this.processRadio = 'termRadio';\r\n    this.statusCols = this.status.statusCols();\r\n\r\n    this.interval = setInterval(() => {\r\n      this.loadProcessStatus();\r\n    }, 10000);\r\n    this.loadProcessStatus();\r\n\r\n    this.utilService.getTermRuleList().subscribe((response) => {\r\n      this.terms = response;\r\n      // this.actualTerms = response\r\n      this.terms = this.terms.sort((a, b) => {\r\n        if (a.termId < b.termId) { return -1; }\r\n        if (a.termId > b.termId) { return 1; }\r\n        return 0;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.loadFromStorage();\r\n  }\r\n\r\n  loadFromStorage() {\r\n\r\n      if (sessionStorage.getItem('processTerm.companyName') !== null && sessionStorage.getItem('processTerm.companyName') !== \"undefined\") {\r\n        this.companyName = JSON.parse(sessionStorage.getItem('processTerm.companyName'));\r\n      }\r\n      if (sessionStorage.getItem('processTerm.selectedTermsCompanies') !== null && sessionStorage.getItem('processTerm.selectedTermsCompanies') !== \"undefined\") {\r\n        this.selectedTermsCompanies = JSON.parse(sessionStorage.getItem('processTerm.selectedTermsCompanies'));\r\n      }\r\n      if (sessionStorage.getItem('processTerm.selectedTerms') !== null && sessionStorage.getItem('processTerm.selectedTerms') !== \"undefined\") {\r\n        this.selectedTerms = JSON.parse(sessionStorage.getItem('processTerm.selectedTerms'));\r\n      }\r\n  }\r\n\r\n  getUserRole() {\r\n    this.utilService.getUserRolesList().subscribe(\r\n      (response) => {\r\n        this.isAdmin = response.includes('admin');\r\n      },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  refreshLoadStatus() {\r\n    this.loadProcessStatus();\r\n  }\r\n\r\n  loadProcessStatus() {\r\n    this.statusService.loadProcessStatus().subscribe((response) => {\r\n      this.statusNames = [];\r\n      response.content.forEach(status => {\r\n        this.statusNames.push({\r\n          termId: status.termId, userName: status.userName, logStatus: status.logStatus, noOfEntitiesBeingProcessed: status.noOfEntitiesBeingProcessed,\r\n          lastModified: status.lastModified, processingTimeInSec: status.processingTimeInSec, description: status.description\r\n        })\r\n      })\r\n      console.log(response);\r\n      this.first = 10;\r\n      this.row = (this.statusNames.length - this.first);\r\n      this.total = this.statusNames.length;\r\n    })\r\n  }\r\n\r\n\r\n  pagenation(value) {\r\n    console.log(value);\r\n    let initialCount = value.rows;\r\n    value.first = (value.first + initialCount);\r\n    this.first = value.first;\r\n    this.row = (this.statusNames.length - value.first);\r\n    this.total = this.statusNames.length;\r\n  }\r\n\r\n\r\n\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i];\r\n      if ((cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) || (cname != null && cname.toLowerCase().includes(event.query.toLowerCase()))) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedTermsSearchCompany(event) {\r\n    this.selectedTermsfilteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i];\r\n      if (cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.selectedTermsfilteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveEntities() {\r\n    let name = \"\"\r\n    this.selectedTermsCompanyName = \"\";\r\n    this.selectedTermsCompanies.forEach(entity => {\r\n      if (name != null || name != \"\") {\r\n        name = name + \",\" + entity\r\n\r\n      } else {\r\n        name = entity;\r\n      }\r\n    })\r\n    this.selectedTermsCompanyName = name.substr(1, name.length);\r\n    this.processRadio = 'companyRadio';\r\n\r\n    sessionStorage.setItem('processTerm.selectedTermsCompanies', JSON.stringify(this.selectedTermsCompanies));\r\n\r\n  }\r\n\r\n  selectedTermDivSectorChange(event) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    this.selectedTermFilerCategory = undefined;\r\n    this.selectedTermIndustry = undefined;\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.selectedTermDivisionCount = this.completeEntities.length;\r\n    this.selectedTermSectorCount = this.completeEntities.length;\r\n    this.selectedTermCategoryCount = this.completeEntities.length;\r\n  }\r\n\r\n  selectedTermProcessIndustryChange(event) {\r\n    if (event != null) {\r\n      this.selectedTermFilerCategory = undefined;\r\n      event = event.substring(0, 4);\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n      this.selectedTermSectorCount = completeEntities.length;\r\n      this.selectedTermCategoryCount = completeEntities.length;\r\n    } else {\r\n      this.selectedTermSectorCount = this.divisionCount;\r\n      this.selectedTermCategoryCount = this.divisionCount;\r\n    }\r\n\r\n  }\r\n\r\n  selectedTermProcessfilCatChange(event) {\r\n    if (event != null) {\r\n      var completeEntities = this.completeEntities.filter(obj =>\r\n        obj.filerCategory === event && obj.sic === this.selectedTermIndustry.substr(0, 4));\r\n      this.selectedTermCategoryCount = completeEntities.length;\r\n      this.gotoPeerEntities = completeEntities;\r\n    } else {\r\n      this.selectedTermCategoryCount = this.divisionCount;\r\n    }\r\n  }\r\n\r\n  selectedTermGoToPeer(event?) {\r\n\r\n    if (this.selectedTermsCompanies != undefined) {\r\n      this.company = this.selectedTermsCompanies[0].split('(')[0];\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.selectedTermDivision = peer[0].division;\r\n      this.selectedTermSector = peer[0].sector;\r\n      this.selectedTermDivSector = peer[0].division + ' -> ' + peer[0].sector;\r\n      this.selectedTermDivSectorChange(this.selectedTermDivSector)\r\n      this.selectedTermIndustry = peer[0].sic + '-' + peer[0].industry;\r\n      this.selectedTermProcessIndustryChange(this.selectedTermIndustry);\r\n      this.selectedTermFilerCategory = peer[0].filerCategory;\r\n      this.selectedTermProcessfilCatChange(this.selectedTermFilerCategory);\r\n      this.processRadio = 'divisionRadio';\r\n    }\r\n  }\r\n\r\n  selectedTermShowResolved() {\r\n    let mp = new MappedEntity();\r\n    this.entityList = [];\r\n    this.selectedEntity = undefined;\r\n    this.selectedTerms.forEach(item => {\r\n      mp.termRuleId = item;\r\n      mp.entityId = \"NULL\";\r\n      if (this.processRadio === \"companyRadio\") {\r\n        this.selectedTermsCompanies.forEach (cmy => {\r\n        var selectionData = cmy; //this.selectedTermsCompanyName;\r\n        if (selectionData != undefined && selectionData.length > 15) {\r\n          selectionData = selectionData.substring((selectionData.indexOf(\"(\") + 1), selectionData.indexOf(\")\"));\r\n          var entities = this.completeCompanyList.filter(obj => obj.entityId === selectionData);\r\n          var company = entities.length == 1 ? entities[0] : null;\r\n          if (!company) {\r\n            this.errorMsg = 'Please select a company, division->Sector or Filer Category before running process.';\r\n            this.showError = true;\r\n            window.scroll(0, 0);\r\n          } else {\r\n            mp.entityId = company.entityId;\r\n          }\r\n        }\r\n        mp.division = this.selectedTermDivision;\r\n        mp.sector = this.selectedTermSector;\r\n        mp.filerCategory = this.selectedTermFilerCategory;\r\n        mp.rankId = 0;\r\n        mp.minYear = (new Date()).getFullYear() - 4;\r\n        mp.maxYear = (new Date()).getFullYear();\r\n        mp.includeQuarterly = true;\r\n        if (this.selectedTermIndustry) {\r\n            mp.sic = this.selectedTermIndustry.substring(0, 4);\r\n        }\r\n        this.profileService.showReslovedData(mp).subscribe(results => {\r\n          this.entityList = this.entityList.concat(results.filter( ({id}) => !this.entityList.find(f => f.id == id))); //merge two array without duplicates\r\n          //this.entityList = this.entityList.concat(results);\r\n        })\r\n      })\r\n      } else { //non companyRadio\r\n        mp.division = this.selectedTermDivision;\r\n        mp.sector = this.selectedTermSector;\r\n        mp.filerCategory = this.selectedTermFilerCategory;\r\n        mp.rankId = 0;\r\n        mp.minYear = (new Date()).getFullYear() - 4;\r\n        mp.maxYear = (new Date()).getFullYear();\r\n        mp.includeQuarterly = true;\r\n        if (this.selectedTermIndustry) {\r\n            mp.sic = this.selectedTermIndustry.substring(0, 4);\r\n        }\r\n        this.profileService.showReslovedData(mp).subscribe(results => {\r\n          this.entityList = this.entityList.concat(results.filter( ({id}) => !this.entityList.find(f => f.id == id))); //merge two array without duplicates\r\n          //this.entityList = this.entityList.concat(results);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  searchIndustry(event) {\r\n    this.filteredindustry = [];\r\n    for (let i = 0; i < this.industryList.length; i++) {\r\n      let cname: string = this.industryList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredindustry.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  searchDivisionSector(event) {\r\n    this.filtereddivSector = [];\r\n    for (let i = 0; i < this.divSectorList.length; i++) {\r\n      let cname: string = this.divSectorList[i];\r\n      if (cname != null && cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filtereddivSector.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n\r\n  enableAccuracyTest(event){\r\n    if (event.target.checked) {\r\n      this.checkAccuracyTest = true;\r\n      if (this.processRadio === 'termRadio') {\r\n        this.processRadio = 'companyRadio';\r\n      }\r\n      this.termAutoCompleteDisable = true; //diable term selection\r\n      this.entityList = [];//remove the cik list display\r\n    } else {\r\n      this.checkAccuracyTest = false;\r\n      this.termAutoCompleteDisable = false;\r\n    }\r\n  }\r\n\r\n  termRadioChecked(event){\r\n    this.checkAccuracyTest = false;\r\n    this.accuracyTestCheckbox.nativeElement.checked = false;\r\n    this.termAutoCompleteDisable = false;\r\n  }\r\n\r\n  goToPeer(event) {\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n    this.company = null;\r\n    if (this.companyName != undefined && this.companyName.length > 15) {\r\n      this.company = this.companyName.substr(0, this.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.division = peer[0].division;\r\n      this.sector = peer[0].sector;\r\n      this.divSector = peer[0].division + ' -> ' + peer[0].sector;\r\n      this.divSectorChange(this.divSector)\r\n      this.industry = peer[0].sic + '-' + peer[0].industry;;\r\n      this.processIndustryChange(this.industry);\r\n      this.filerCategory = peer[0].filerCategory;\r\n      this.processfilCatChange(this.filerCategory);\r\n      this.filterRadio = 'group';\r\n    } else {\r\n      window.scroll(0, 0);\r\n      this.errorMsg = 'Please Select Company';\r\n      this.showError = true;\r\n\r\n    }\r\n\r\n  }\r\n  divSectorChange(event) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    event = event.value ? event.value : event;\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    this.industryCount = this.completeEntities.length;\r\n    this.categoryCount = this.completeEntities.length;;\r\n  }\r\n\r\n  processIndustryChange(event) {\r\n    event = event.value ? event.value : event;\r\n    event = event.substring(0, 4);\r\n    var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n    this.industryCount = completeEntities.length;\r\n    this.industryCount = completeEntities.length;\r\n  }\r\n\r\n  processfilCatChange(event) {\r\n    event = event.value ? event.value : event;\r\n    var completeEntities = this.completeEntities.filter(obj =>\r\n      obj.filerCategory === event && obj.sic === this.industry.substr(0, 4));\r\n    this.industryCount = completeEntities.length\r\n    this.categoryCount = completeEntities.length;\r\n  }\r\n\r\n  ProcessAllRulesWithCriteria() {\r\n    this.showError = false;\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to process all terms based on selection?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        var inputData = this.getInputdata();\r\n        if (!inputData.isValid) {\r\n          this.showError = true;\r\n          window.scroll(0, 0);\r\n          this.errorMsg = 'Please select a company,  division->Sector or Filer Category before processing all terms.';\r\n          return;\r\n        }\r\n        inputData.isnewAction = true;\r\n        this.progressSpinner = true;\r\n        this.msgs = [{ severity: 'info', summary: 'Processing Term Rule', detail: '' }];\r\n        this.utilService.processAllTermWithCriteria(inputData.division, inputData.sector, inputData.sic, inputData.filerCategory,\r\n          inputData.entityId, inputData.isnewAction).subscribe((response) => {\r\n            if (response) {\r\n              var res = response._body;\r\n              if (res.includes('\"status\":true')) {\r\n                this.msgs = [{ severity: 'info', summary: 'Processed Term Rule' }];\r\n                this.progressSpinner = false\r\n              } if (res.includes('\"status\":false')) {\r\n                // this.msgs = [{severity:'info', summary:'Processed Term Rule'}];\r\n                // this.progressSpinner = false\r\n              } else {\r\n                this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n                this.progressSpinner = false\r\n              }\r\n\r\n            }\r\n\r\n          })\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n    this.progressSpinner = false;\r\n    this.loadProcessStatus();\r\n  }\r\n\r\n  continueProcessingAllTerms() {\r\n    this.showError = false;\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to reprocess all terms based on selection?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        var inputData = this.getInputdata();\r\n        inputData.isnewAction = false;\r\n        this.progressSpinner = true;\r\n        this.msgs = [{ severity: 'info', summary: 'Processing Term Rule', detail: '' }];\r\n        this.utilService.processAllTermWithCriteria(inputData.division, inputData.sector, inputData.sic, inputData.filerCategory,\r\n          inputData.entityId, inputData.isnewAction).subscribe((response) => {\r\n            const data = response._body;\r\n            if (data) {\r\n              this.msgs = [{ severity: 'info', summary: data, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n          })\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  resetCoverage() {\r\n    this.companyName = undefined;\r\n    this.divSector = undefined;\r\n    this.filterRadio = undefined;\r\n    this.division = undefined;\r\n    this.sector = undefined;\r\n    this.industry = undefined;\r\n    this.divisionCount = this.completeCompanyList.length;\r\n    this.industryCount = null;\r\n    this.categoryCount = null;\r\n    this.filerCategory = undefined;\r\n    this.filterRadio = undefined;\r\n    this.errorMsg = '';\r\n    this.showError = false;\r\n    this.msgs = [];\r\n    sessionStorage.setItem(\"processTerm.companyName\", this.companyName);\r\n  }\r\n\r\n  resetCoverageSelected() {\r\n    this.processRadio = 'termRadio';\r\n    this.selectedTermsCompanies = [];\r\n    this.selectedTermDivSector = undefined;\r\n    this.selectedTermIndustry = undefined;\r\n    this.selectedTermFilerCategory = undefined;\r\n\r\n    this.selectedTermCategoryCount = null;\r\n    this.selectedTermDivisionCount = this.completeCompanyList.length;;\r\n    this.selectedTermSectorCount = null;\r\n\r\n    this.selectedEntity = undefined;\r\n    this.entityList = [];\r\n    this.msgs = [];\r\n\r\n    sessionStorage.setItem(\"processTerm.selectedTermsCompanies\", JSON.stringify(this.selectedTermsCompanies));\r\n  }\r\n  cancelProcessing() {\r\n    this.showError = false;\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to cancel all pending processing items?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.msgs = [];\r\n        var inputData = this.getInputdata();\r\n        inputData.isnewAction = false;\r\n        this.progressSpinner = true;\r\n        this.msgs = [{ severity: 'info', summary: 'Cancelling Process All Terms', detail: '' }]\r\n        this.utilService.cancelProcessing().subscribe((response) => {\r\n          if (response) {\r\n            this.msgs = [{ severity: 'info', summary: 'All pending processing has been canceled successfully', detail: '' }];\r\n            this.progressSpinner = false\r\n          }\r\n          this.progressSpinner = false;\r\n        })\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  resetProcessing() {\r\n    this.msgs = [];\r\n    this.progressSpinner = true\r\n    this.msgs = [{ severity: 'info', summary: ' All Term Processing has been reset. Pending and Inprogress TermRules have been restarted again. Please wait for it to be completed', detail: '' }];\r\n    this.utilService.resetProcessing().subscribe((response) => {\r\n      if (response) {\r\n        this.msgs = [{ severity: 'info', summary: 'All Term Processing has been reset and completed.', detail: '' }];\r\n      }\r\n    })\r\n    this.resetProcessingPopup = false;\r\n    this.progressSpinner = false;\r\n\r\n  }\r\n\r\n  getInputdata() {\r\n    var result: any = {};\r\n\r\n    result.sic = \"NULL\";\r\n    result.filerCategory = \"NULL\";\r\n    result.division = \"NULL\";\r\n    result.sector = \"NULL\";\r\n    result.entityId = \"NULL\";\r\n    result.isValid = false;\r\n    result.useGroup = true;\r\n\r\n    if (this.filterRadio === \"all\") {\r\n      result.isValid = true;\r\n      return result;\r\n    }\r\n    if ((this.filterRadio === \"group\")) {\r\n      if ((this.companyName && this.divSector) || (this.filerCategory)) {\r\n        result.isValid = true;\r\n      }\r\n\r\n\r\n      if (this.companyName) {\r\n        var selectionData = this.companyName;\r\n        if (selectionData.length > 15) {\r\n          selectionData = selectionData.substr(0, selectionData.length - 12);\r\n        }\r\n        var entities = this.completeCompanyList.filter(obj => obj.companyName === selectionData);\r\n        var company = entities.length == 1 ? entities[0] : null;\r\n        result.sic = company.sic;\r\n      }\r\n\r\n      if (this.filerCategory) {\r\n        result.filerCategory = this.filerCategory;\r\n      }\r\n\r\n\r\n\r\n      if (this.divSector) {\r\n        var division = this.divSector.substr(0, this.divSector.indexOf('->') - 1);\r\n        var sector = this.divSector.substr(this.divSector.indexOf('->') + 3, this.divSector.length);\r\n        result.division = division;\r\n        result.sector = sector;\r\n      }\r\n    } else {\r\n\r\n      result.useGroup = false;\r\n\r\n      if (this.companyName) {\r\n\r\n        result.division = \"settoinvalid\";\r\n        result.sector = \"settoinvalid\";\r\n        var selectionData = this.companyName;\r\n        if (selectionData.length > 15) {\r\n          selectionData = selectionData.substr(0, selectionData.length - 12);\r\n        }\r\n        var entities = this.completeCompanyList.filter(obj => obj.companyName === selectionData);\r\n\r\n        var company = entities.length == 1 ? entities[0] : null;\r\n\r\n        if (company) {\r\n          result.selectedCompany = company;\r\n          result.isValid = true;\r\n          result.entityId = company.entityId;\r\n\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  filterTerm(event) {\r\n    if (event.query != null && event.query != '') {\r\n      // this.terms = this.terms.sort((a, b) => {\r\n      //   if (a.financialStatement < b.financialStatement) { return -1; }\r\n      //   if (a.financialStatement > b.financialStatement) { return 1; }\r\n      //   return 0;\r\n      // });\r\n      this.filteredTerms = [];\r\n      this.terms.forEach(cname => {\r\n        if ((cname != null && cname.termId.toLowerCase().includes(event.query.toLowerCase())) || (cname != null && cname.name.toLowerCase().includes(event.query.toLowerCase()))) {\r\n          this.filteredTerms.push(cname.termId + ' - ' + cname.name);\r\n        }\r\n      });\r\n      this.filteredTerms = this.filteredTerms.sort((a, b) => {\r\n        if (a.toLowerCase().indexOf(event.query.toLowerCase()) < b.toLowerCase().indexOf(event.query.toLowerCase())) { return -1; }\r\n        if (a.toLowerCase().indexOf(event.query.toLowerCase()) > b.toLowerCase().indexOf(event.query.toLowerCase())) { return 1; }\r\n        return 0;\r\n      });\r\n    } else {\r\n      this.filteredTerms = [];\r\n      this.terms.forEach(obj => {\r\n        this.filteredTerms.push(obj.termId + ' - ' + obj.name)\r\n      })\r\n    }\r\n  }\r\n\r\n  onSelectCompany(event){\r\n      if (this.companyName) {\r\n        sessionStorage.setItem('processTerm.companyName', JSON.stringify(this.companyName));\r\n      }\r\n  }\r\n\r\n  onSelectTerm(event) {\r\n    if (this.selectedTerms && this.selectedTerms.length > 0) {\r\n      const modifiedSelectedTerms = [];\r\n      this.selectedTerms.forEach(item => {\r\n        modifiedSelectedTerms.push(item.split(' - ')[0]);\r\n      })\r\n      this.selectedTerms = modifiedSelectedTerms;\r\n      sessionStorage.setItem('processTerm.selectedTerms', JSON.stringify(this.selectedTerms));\r\n    }\r\n  }\r\n\r\n  processSelectedTerm() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to process all terms based on selection?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.msgs = [];\r\n        this.progressSpinner = true;\r\n        if ((this.selectedTerms.length > 0) && (this.selectedTermsCompanies.length === 0)) {\r\n          this.utilService.processSelctedTerms(this.selectedTerms).subscribe((response) => {\r\n            var res = response._body;\r\n            if (res) {\r\n              this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n            this.progressSpinner = false;\r\n\r\n          })\r\n        }\r\n\r\n        if ((this.selectedTerms.length > 0) && this.selectedTermsCompanies && (this.selectedTermsCompanies.length > 0)) {\r\n          const terms = this.selectedTerms;\r\n          const entities = [];\r\n          this.selectedTermsCompanies.forEach(item => {\r\n            entities.push(item.substring((item.indexOf(\"(\") + 1), item.indexOf(\")\")));\r\n          });\r\n          if (this.selectedEntity && (this.selectedEntity.length > 0)) {\r\n            this.selectedEntity.forEach(item => {\r\n              if(entities.indexOf(item.cik) < 0) { //do not add if already exist\r\n                entities.push(item.cik);\r\n              }\r\n            })\r\n          }\r\n          this.utilService.processSelctedTermsWithCompany(terms, entities).subscribe((response) => {\r\n            var res = response._body;\r\n            if (res) {\r\n              this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n            this.progressSpinner = false;\r\n\r\n          })\r\n        }\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  processAccuTerm() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to process Accuracy Test Term Processing?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.msgs = [];\r\n        this.progressSpinner = true;\r\n        //process user input entities on available terms\r\n        if (this.processRadio === 'companyRadio' && this.selectedTermsCompanies && (this.selectedTermsCompanies.length > 0)) {\r\n          const entities = [];\r\n          //add user input entities from company name input field\r\n          this.selectedTermsCompanies.forEach(item => {\r\n            entities.push(item.substring((item.indexOf(\"(\") + 1), item.indexOf(\")\")));\r\n          });\r\n          //add selected entities from show resolved list\r\n          if (this.selectedEntity && (this.selectedEntity.length > 0)) {\r\n            this.selectedEntity.forEach(item => {\r\n              if(entities.indexOf(item.cik) < 0) { //do not add if already exist\r\n                entities.push(item.cik);\r\n              }\r\n            })\r\n          }\r\n          this.utilService.processAccuTermsForTermsAndEntities(this.selectedTerms, entities).subscribe((response) => {\r\n            var res = response._body;\r\n            if (res) {\r\n              this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n            this.progressSpinner = false;\r\n          })\r\n        }\r\n        //process gotopeer entities on available terms\r\n        else if (this.processRadio === 'divisionRadio' && this.gotoPeerEntities && this.gotoPeerEntities.length > 0){\r\n          const entities = [];\r\n          this.gotoPeerEntities.forEach(item => {\r\n            entities.push(item.cik);\r\n          });\r\n          this.utilService.processAccuTermsForTermsAndEntities(this.selectedTerms, entities).subscribe((response) => {\r\n            var res = response._body;\r\n            if (res) {\r\n              this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n            this.progressSpinner = false;\r\n          })\r\n        }\r\n        //process all entities on available terms\r\n        else {\r\n          this.utilService.processAccuTerms(this.selectedTerms).subscribe((response) => {\r\n            var res = response._body;\r\n            if (res) {\r\n              this.msgs = [{ severity: 'info', summary: res, detail: '' }];\r\n              this.progressSpinner = false\r\n            }\r\n            this.progressSpinner = false;\r\n          }\r\n        )}\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCIKListSearch(id: string) {\r\n    this.ciksFromDialog = \"\";\r\n    this.selectedTermsCompanies = [];\r\n    this.dialogModalService.open(id);\r\n    this.myInputVariable.nativeElement.value = ''; //clear the upload file name on the side of the upload button\r\n  }\r\n\r\n  close(id: string){\r\n    this.dialogModalService.close(id);\r\n    this.myInputVariable.nativeElement.value = ''; //clear the upload file name on the side of the upload button\r\n  }\r\n\r\n  confirm(id: string) {\r\n    let selected = [];\r\n    selected = this.ciksFromDialog.split(',');\r\n    this.selectedTermsCompanies = [];\r\n\r\n    for (let j=0; j < selected.length; j++){\r\n      let cik: string =selected[j];\r\n      if (cik != null && cik.trim().length>1 ) {\r\n        cik = '0000000000' + cik.trim();\r\n        cik = cik.substring(cik.length-10);\r\n        for (let i = 0; i < this.companyList.length; i++) {\r\n          let cname: string = this.companyList[i];\r\n          if (cname.toLowerCase().indexOf(cik) >= 0) {\r\n            this.selectedTermsCompanies.push(cname);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let uniqueSelected = new Set(this.selectedTermsCompanies);\r\n    this.selectedTermsCompanies = Array.from(uniqueSelected); //make an unique array\r\n    this.selectedTermsCompanies.slice(0,99);//limit input cik list to size of 100\r\n\r\n    this.processRadio = 'companyRadio';\r\n    this.ciksFromDialog = '';\r\n    this.dialogModalService.close(id);\r\n    this.myInputVariable.nativeElement.value = ''; //clear the upload file name on the side of the upload button\r\n\r\n  }\r\n\r\n  uploadFile(event) {\r\n    const file:File = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n          let text = reader.result.toString().trim();\r\n          text = text.replace(/\\r?\\n|\\r/g, \"\");\r\n          this.ciksFromDialog = text;\r\n      }\r\n      reader.readAsText(file);\r\n    //   this.fs.readFile('file.txt', function (err, data) {\r\n    //     if (err) {\r\n    //         return console.error(err);\r\n    //     }\r\n    //     console.log(\"Asynchronous read: \" + data.toString());\r\n    // });\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class ProcessingTermsService {\r\n}","module.exports = \".modal-dialog{\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    margin: 0%;\\r\\n    padding-top: 10%;\\r\\n    padding-left: 25%;\\r\\n    padding-right: 25%;\\r\\n}\\r\\n.col-lg-4\\r\\n{\\r\\n    position: relative;\\r\\n}\\r\\n.form-control { width: 300px; }\\r\\n.mydialog {\\r\\n    width: 50vw;\\r\\n}\\r\\n@media screen and (max-width: 40em) {\\r\\n    .mydialog {\\r\\n        width: 75vw;\\r\\n    }\\r\\n}\\r\\n.modal-div{\\r\\n    padding: 20px !important;\\r\\n    margin: 20px !important;\\r\\n}\\r\\n.column1 {\\r\\n    float: left;\\r\\n    width: 30%;\\r\\n    text-align: right;\\r\\n    padding: 10px\\r\\n}\\r\\n.column2 {\\r\\n  float: right;\\r\\n  width: 70%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7SUFDWCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7QUFDQTs7SUFFSSxrQkFBa0I7QUFDdEI7QUFDQSxnQkFBZ0IsWUFBWSxFQUFFO0FBRTlCO0lBQ0ksV0FBVztBQUNmO0FBRUE7SUFDSTtRQUNJLFdBQVc7SUFDZjtBQUNKO0FBQ0E7SUFDSSx3QkFBd0I7SUFDeEIsdUJBQXVCO0FBQzNCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtFQUNWLGdCQUFnQjtFQUNoQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWRpYWxvZ3tcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwJTtcclxuICAgIHBhZGRpbmctdG9wOiAxMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI1JTtcclxufVxyXG4uY29sLWxnLTRcclxue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5mb3JtLWNvbnRyb2wgeyB3aWR0aDogMzAwcHg7IH1cclxuXHJcbi5teWRpYWxvZyB7XHJcbiAgICB3aWR0aDogNTB2dztcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDBlbSkge1xyXG4gICAgLm15ZGlhbG9nIHtcclxuICAgICAgICB3aWR0aDogNzV2dztcclxuICAgIH1cclxufVxyXG4ubW9kYWwtZGl2e1xyXG4gICAgcGFkZGluZzogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAyMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jb2x1bW4xIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgcGFkZGluZzogMTBweFxyXG59XHJcbi5jb2x1bW4yIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgd2lkdGg6IDcwJTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDEwcHhcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div>\\r\\n    <p-messages [style]=\\\"{color: 'black'}\\\" [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<form [formGroup]=\\\"preferenceForm\\\" *ngIf=\\\"preferenceForm\\\">\\r\\n    <div class=\\\"modal-div\\\">\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"termName\\\" class=\\\"col-lg-3 form-control-label\\\" style=\\\"margin-right: 2%;\\\">Term Name</label>\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <p-autoComplete [style]=\\\"{'width':'400px !important'}\\\" [inputStyle]=\\\"{'width':'400px'}\\\" name=\\\"termName\\\"\\r\\n                    [suggestions]=\\\"filteredTerms\\\" (completeMethod)=\\\"filterTerm($event)\\\" placeholder=\\\"Search Terms\\\"\\r\\n                    formControlName=\\\"termName\\\" [(ngModel)]=\\\"profile.termName\\\" [dropdown]=\\\"true\\\"\\r\\n                    (ngModelChange)=\\\"onSelectTerm($event)\\\">\\r\\n                </p-autoComplete>\\r\\n                <div *ngIf=\\\"!profile.termName\\\" style=\\\"color: red; font-size: 12px;\\\">\\r\\n                    Please enter valid\\r\\n                    term name.</div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton name=\\\"filterRadio\\\" formControlName=\\\"filterRadio\\\" value=\\\"companyRadio\\\"\\r\\n                [(ngModel)]=\\\"filterRadio\\\">\\r\\n            </p-radioButton>\\r\\n            <label for=\\\"compamyName\\\" class=\\\"col-lg-3 form-control-label\\\">Search by Company:</label>\\r\\n            <div class=\\\"col-xs-8\\\">\\r\\n                <p-autoComplete [style]=\\\"{'width':'400px !important'}\\\"\\r\\n                    [inputStyle]=\\\"{'width':'400px','maxwidth':'400px'}\\\" aria-required=\\\"true\\\" name=\\\"companyName\\\"\\r\\n                    [suggestions]=\\\"filteredCompany\\\" placeholders=\\\"filteredCompany\\\"\\r\\n                    (completeMethod)=\\\"searchCompany($event)\\\" placeholder=\\\"Search Company\\\" [dropdown]=\\\"false\\\"\\r\\n                    multiple=\\\"true\\\" [ngClass]=\\\"{ 'is-invalid':submitted && preferenceForm.controls.companyName.errors}\\\"\\r\\n                    aria-required=\\\"companyName\\\" formControlName=\\\"companyName\\\" [(ngModel)]=\\\"profile.companies\\\"\\r\\n                    (onSelect)=\\\"addOrRemoveEntities()\\\" (onUnselect)=\\\"addOrRemoveEntities()\\\">\\r\\n                </p-autoComplete>\\r\\n                <button icon=\\\"pi pi-check\\\" label=\\\"Go To Peer Group\\\" style=\\\"margin:3px\\\"\\r\\n                [disabled]=\\\"profile.companies.length > 1\\\" class=\\\"create-profile\\\" type=\\\"button\\\" pButton\\r\\n                    (click)=\\\"goToPeer($event)\\\"></button>\\r\\n                <div *ngIf=\\\"profile.companies.length === 0\\\" style=\\\"color: red; font-size: 12px;\\\">Please enter valid\\r\\n                    company name.</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <p-radioButton name=\\\"filterRadio\\\" formControlName=\\\"filterRadio\\\" value=\\\"divisionRadio\\\"\\r\\n                [(ngModel)]=\\\"filterRadio\\\">\\r\\n            </p-radioButton>\\r\\n            <label for=\\\"divSector\\\" class=\\\"col-lg-3 form-control-label\\\">Search by Group: Division -> Sector:\\r\\n            </label>\\r\\n            <div class=\\\"col-xs-7\\\">\\r\\n                <p-dropdown [options]=\\\"filtereddivSector\\\" placeholder=\\\"Select Division Sector\\\" [(ngModel)]=\\\"divSector\\\"\\r\\n                    [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    (onChange)=\\\"divSectorChange(divSector)\\\" [virtualScroll]=\\\"true\\\" formControlName=\\\"division\\\"\\r\\n                    [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{divisionCount}}\\r\\n                <button pButton type=\\\"button\\\" [disabled]=\\\"!(isTermNameValid)\\\" label=\\\"Show Resolved\\\"\\r\\n                    class=\\\"ui-button-success\\\" (click)=\\\"showResolved()\\\"></button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"industry\\\" class=\\\"col-lg-3 form-control-label\\\" style=\\\"margin-right: 2%;\\\">Industry:</label>\\r\\n            <div class=\\\"col-xs-5\\\">\\r\\n                <p-dropdown [options]=\\\"filteredindustry\\\" placeholder=\\\"Select Industry\\\" [(ngModel)]=\\\"profile.industry\\\"\\r\\n                    [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    (onChange)=\\\"processIndustryChange(profile.industry)\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    formControlName=\\\"industry\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{sectorCount}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n\\r\\n            <label for=\\\"filerCategory\\\" class=\\\"col-lg-3 form-control-label\\\" style=\\\"margin-right: 2%;\\\">Filer\\r\\n                Category:</label>\\r\\n            <div class=\\\"col-xs-5\\\">\\r\\n                <p-dropdown [options]=\\\"filteredfilerCategory\\\" placeholder=\\\"Select Filer Category\\\"\\r\\n                    [(ngModel)]=\\\"profile.filerCategory\\\" [style]=\\\"{'width':'400px'}\\\" dropdownIcon=\\\"pi pi-chevron-down\\\"\\r\\n                    formControlName=\\\"filerCategory\\\" (onChange)=\\\"processfilCatChange(profile.filerCategory)\\\"\\r\\n                    [virtualScroll]=\\\"true\\\" [itemSize]=\\\"31\\\" filter=\\\"true\\\">\\r\\n                </p-dropdown>\\r\\n                &nbsp; {{categoryCount}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <!--Start Preference Name-->\\r\\n            <label for=\\\"preferenceName\\\" class=\\\"col-lg-3 form-control-label\\\" style=\\\"margin-right: 2%;\\\"\\r\\n                aria-required=\\\"true\\\">Preference\\r\\n                Name</label>\\r\\n            <div class=\\\"col-xs-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid':preferenceForm.controls.preferenceyName.errors}\\\"\\r\\n                    [(ngModel)]=\\\"profile.preferenceyName\\\" style=\\\"width: 400px !important;display:inline\\\"\\r\\n                    formControlName=\\\"preferenceyName\\\">\\r\\n\\r\\n                <div *ngIf=\\\"preferenceForm.controls.preferenceyName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"preferenceForm.controls.preferenceyName.errors.required\\\"\\r\\n                        style=\\\"color: red; font-size: 12px;\\\">\\r\\n                        Preference\\r\\n                        Name Required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <p-table #entityTable [columns]=\\\"homeEntityCol\\\" [value]=\\\"entityList\\\" [responsive]=\\\"true\\\" selectionMode=\\\"single\\\"\\r\\n            [(selection)]=\\\"selectedEntity\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th style=\\\"width:4em;\\\">\\r\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n                    <th *ngFor=\\\"let col of columns\\\">\\r\\n                        {{col.header}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                <tr style=\\\"height:34px\\\">\\r\\n                    <td>\\r\\n                        <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let col of columns\\\">\\r\\n                        {{rowData[col.field]}}\\r\\n\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n\\r\\n        <div class=\\\"form-group row pull-right \\\">\\r\\n            <button icon=\\\"pi pi-check\\\" label=\\\"Save\\\" style=\\\"margin:3px \\\" class=\\\"create-profile\\\" type=\\\"button\\\"\\r\\n                (click)=\\\"savePreference()\\\"\\r\\n                [disabled]=\\\"!((profile.companies.length > 0) && (profile.termName) && preferenceForm.valid)\\\"\\r\\n                pButton></button>\\r\\n            <button icon=\\\"pi pi-times\\\" (click)=\\\"closeDialog()\\\" style=\\\"margin:3px\\\" label=\\\"Cancel\\\" type=\\\"button\\\" pButton\\r\\n                class=\\\"create-profile\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { Router } from '@angular/router'\r\nimport * as _ from 'lodash';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { UtilService } from 'app/utils/utilService';\r\nimport { MappedEntity } from 'app/domain/mappedEntity';\r\n\r\n@Component({\r\n  selector: 'app-create-profile',\r\n  templateUrl: './create-profile.component.html',\r\n  styleUrls: ['./create-profile.component.css']\r\n})\r\nexport class CreateProfileComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() profile;\r\n  @Input() filteredTerms;\r\n  @Input() filteredCompany;\r\n  @Input() filtereddivSector;\r\n  @Input() entityList;\r\n  @Input() isUpdate;\r\n  @Input() actionType;\r\n  @Input() companyList: any[];\r\n  @Input() termNamesList: any[];\r\n  preferencesList: any[]\r\n  selectedProfile: any[];\r\n  selectedEntity: any[] = [];\r\n  existingProfiles = [];\r\n  token = \"\";\r\n  selectedProfiles: any[] = [];\r\n  processTermsList: any[] = [];\r\n  preferenceForm: FormGroup;\r\n\r\n  companiesList: any[];\r\n  divSectorList: any[];\r\n  filerCategoryList: any[];\r\n  @Input() filteredfilerCategory: any[];\r\n  industryList: any[];\r\n  @Input() completeCompanyList: any[];\r\n  company: string;\r\n  msgs = [];\r\n  homeEntityCol = [\r\n    { field: 'cik', header: 'Cik' },\r\n    { field: 'companyName', header: 'Company Name' }\r\n  ];\r\n  isTermNameValid = false;\r\n  selectedTermName = [];\r\n  gotoBtnEnable = false;\r\n\r\n  completeEntities: any[] = [];\r\n  @Input() filteredindustry: any[];\r\n  divisionCount: number;\r\n  sectorCount: number;\r\n  categoryCount: number;\r\n  divSector;\r\n  filterRadio;\r\n  terms: any = [];\r\n  selectedTerms: any = [];\r\n  actualSelectedTerms = [];\r\n  @Output() closeDialogBox = new EventEmitter<boolean>();\r\n\r\n  constructor(private profileService: ProfileService, private router: Router, private builder: FormBuilder, private utilService: UtilService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.preferenceForm = this.builder.group({\r\n      termName: [this.profile.termName, []],\r\n      companyName: [this.profile.companyName, []],\r\n      preferenceyName: [this.profile.preferenceyName, [Validators.required, Validators.min(3)]],\r\n      division: [this.profile.division, []],\r\n      sector: [this.profile.sector, []],\r\n      industry: [this.profile.industry, []],\r\n      filerCategory: [this.profile.filerCategory, []],\r\n      filterRadio: [this.profile.filterRadio, []]\r\n    });\r\n\r\n    if (this.actionType === 'edit') {\r\n      if (this.entityList.length > 0) {\r\n        this.entityList.forEach(item => {\r\n          this.profile.companies.push(item.companyName + '(' + item.cik + ')')\r\n        })\r\n      }\r\n      this.profile.companyName = '';\r\n      this.entityList = [];\r\n      if (this.profile.termName) {\r\n        this.addOrRemoveTermName();\r\n      }\r\n      this.filterRadio = 'companyRadio';\r\n      this.profile.companies.forEach(item => {\r\n        this.profile.companyName = this.profile.companyName + item + ',';\r\n      })\r\n      this.profile.companyName = this.profile.companyName.substring(0, this.profile.companyName.length - 1);\r\n\r\n      if (this.profile.companies.length === 1) {\r\n        this.goToPeer();\r\n      }\r\n    }\r\n\r\n    this.preferenceForm.controls.termName.valueChanges.subscribe(value => {\r\n      let id = value.substring(0, value.indexOf('-')-1);\r\n      if (this.terms.find(item => item.termId === id)) {\r\n        this.isTermNameValid = true;\r\n      } else {\r\n        this.isTermNameValid = false;\r\n      }\r\n    });\r\n\r\n    this.utilService.getTermRuleList().subscribe((response) => {\r\n      this.terms = response;\r\n      this.terms = this.terms.sort((a, b) => {\r\n        if (a.termId < b.termId) { return -1; }\r\n        if (a.termId > b.termId) { return 1; }\r\n        return 0;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  goToPeer(event?) {\r\n\r\n    if (this.profile.companyName != undefined && this.profile.companyName.length > 15) {\r\n      this.company = this.profile.companyName.substr(0, this.profile.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.profile.division = peer[0].division;\r\n      this.profile.sector = peer[0].sector;\r\n      this.divSector = peer[0].division + ' -> ' + peer[0].sector;\r\n      this.divSectorChange(this.divSector)\r\n      this.profile.industry = peer[0].sic + '-' + peer[0].industry;\r\n      this.processIndustryChange(this.profile.industry);\r\n      this.profile.filerCategory = peer[0].filerCategory;\r\n      this.processfilCatChange(this.profile.filerCategory);\r\n      this.filterRadio = 'divisionRadio';\r\n    }\r\n  }\r\n\r\n  filterTerm(event) {\r\n    if (event.query != null && event.query != '') {\r\n      this.filteredTerms = [];\r\n      this.terms.forEach(cname => {\r\n        if ((cname != null && cname.termId.toLowerCase().includes(event.query.toLowerCase())) || (cname != null && cname.name.toLowerCase().includes(event.query.toLowerCase()))) {\r\n          this.filteredTerms.push(cname.termId + ' - ' + cname.name);\r\n        }\r\n      });\r\n      this.filteredTerms = this.filteredTerms.sort((a, b) => {\r\n        if (a.toLowerCase().indexOf(event.query.toLowerCase()) < b.toLowerCase().indexOf(event.query.toLowerCase())) { return -1; }\r\n        if (a.toLowerCase().indexOf(event.query.toLowerCase()) > b.toLowerCase().indexOf(event.query.toLowerCase())) { return 1; }\r\n        return 0;\r\n      });\r\n    } else {\r\n      this.filteredTerms = [];\r\n      this.terms.forEach(obj => {\r\n        this.filteredTerms.push(obj.termId + ' - ' + obj.name)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onSelectTerm(event) {\r\n  /*  if (this.selectedTerms && this.selectedTerms.length > 0) {\r\n      const modifiedSelectedTerms = [];\r\n      this.actualSelectedTerms = [];\r\n      this.selectedTerms.forEach(item => {\r\n        this.actualSelectedTerms.push(item);\r\n        modifiedSelectedTerms.push(item.split(' - ')[0]);\r\n      })\r\n      this.selectedTerms = modifiedSelectedTerms;\r\n    } */\r\n\r\n    if (this.profile.termName) {\r\n      const modifiedSelectedTerms = [];\r\n      this.actualSelectedTerms = [];\r\n      this.actualSelectedTerms.push(this.profile.termName);\r\n      modifiedSelectedTerms.push(this.profile.termName.split(' - ')[0]);\r\n      this.selectedTerms = modifiedSelectedTerms;\r\n    }\r\n  }\r\n\r\n  addOrRemoveTermName() {\r\n    this.selectedTermName = [];\r\n\r\n    this.isTermNameValid = false;\r\n    for (let i = 0; i < this.termNamesList.length; i++) {\r\n      let name: string = this.termNamesList[i].name;\r\n      if (name.toLowerCase().indexOf(this.profile.termName.toLowerCase()) == 0) {\r\n        this.selectedTermName.push(name);\r\n        this.selectedTerms.push(name);\r\n\r\n        this.isTermNameValid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i].name;\r\n      if (cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveEntities() {\r\n    let name = \"\"\r\n    this.profile.companyName = \"\";\r\n    this.profile.companies.forEach(entity => {\r\n      if (name != null || name != \"\") {\r\n        name = name + \",\" + entity\r\n\r\n      } else {\r\n        name = entity;\r\n      }\r\n    })\r\n    this.profile.companyName = name.substr(1, name.length);\r\n\r\n    if (this.profile.companies.length > 1) {\r\n      this.gotoBtnEnable = true;\r\n    } else {\r\n      this.gotoBtnEnable = false;\r\n    }\r\n  }\r\n\r\n  divSectorChange(event) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    // event = event.value ? event.value : event;\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    this.profile.filerCategory = undefined;\r\n    this.profile.industry = undefined;\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    this.sectorCount = this.completeEntities.length;\r\n    this.categoryCount = this.completeEntities.length;\r\n  }\r\n\r\n  showResolved() {\r\n    let mp = new MappedEntity();\r\n    mp.termRuleId = this.getTermIdOrEntityName(this.profile.termName);\r\n    mp.entityId = \"NULL\";\r\n    mp.division = this.profile.division;\r\n    mp.sector = this.profile.sector;\r\n    mp.filerCategory = this.profile.filerCategory;\r\n    mp.rankId = 0;\r\n    mp.minYear = (new Date()).getFullYear() - 4;\r\n    mp.maxYear = (new Date()).getFullYear();\r\n    mp.includeQuarterly = true;\r\n    mp.sic = this.profile.industry.substring(0, 4);\r\n    console.log(this.profile);\r\n    console.log(mp)\r\n    this.profileService.showReslovedData(mp).subscribe(results => {\r\n      console.log(results);\r\n      this.entityList = results;\r\n    })\r\n\r\n  }\r\n\r\n  getTermIdOrEntityName(inputValue: string): string {\r\n    //let outputValue: string = inputValue.substring((inputValue.indexOf(\"(\") + 1), inputValue.indexOf(\")\"));\r\n    let outputValue: string = inputValue.substring(0, inputValue.indexOf('-')-1);\r\n    return outputValue;\r\n  }\r\n\r\n  processIndustryChange(event) {\r\n    if (event != null) {\r\n      this.profile.filerCategory = undefined;\r\n      event = event.substring(0, 4);\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n      this.sectorCount = completeEntities.length;\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      this.sectorCount = this.divisionCount;\r\n      this.categoryCount = this.divisionCount;\r\n    }\r\n\r\n  }\r\n\r\n  processfilCatChange(event) {\r\n    if (event != null) {\r\n      var completeEntities = this.completeEntities.filter(obj =>\r\n        obj.filerCategory === event && obj.sic === this.profile.industry.substr(0, 4));\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      this.categoryCount = this.divisionCount;\r\n    }\r\n  }\r\n\r\n  savePreference() {\r\n\r\n    if (this.preferenceForm.invalid) {\r\n      return;\r\n    } else {\r\n\r\n      if (!this.isUpdate) {\r\n\r\n        if (this.profile.companyName.length > 0 && this.profile.preferenceyName != null) {\r\n          let finalStr;\r\n          finalStr = this.profile.companyName;\r\n          if (this.selectedEntity.length > 0) {\r\n            this.selectedEntity.forEach(item => {\r\n              let cname = item.companyName.concat(\"(\" + item.cik + \")\");\r\n              if (cname !== this.profile.companyName) {\r\n                finalStr = finalStr.concat(\"$\").concat(cname);\r\n              }\r\n            })\r\n          } else {\r\n\r\n          }\r\n          let term = '';\r\n          term = this.actualSelectedTerms[0].split(' - ')[1] + '(' + this.actualSelectedTerms[0].split(' - ')[0] +')'\r\n          /*\r\n          this.actualSelectedTerms.forEach((item, index) => {\r\n            if (index === (this.actualSelectedTerms.length - 1)) {\r\n              const termObj = this.terms.find(val => val.termId === item);\r\n              term = term + termObj.name + '(' + termObj.termId + ')';\r\n            } else {\r\n\r\n              const termObj = this.terms.find(val => val.termId === item);\r\n              term = term + termObj.name + '(' + termObj.termId + ')' + '$';\r\n            }\r\n          }); */\r\n\r\n          this.profileService.savePreference(term, finalStr, this.profile.preferenceyName).subscribe((response) => {\r\n            // this.populateResponse(response);\r\n            this.closeDialog();\r\n          },\r\n            (error) => {\r\n              console.log(error);\r\n              if (JSON.parse(error._body).message.includes('Cannot insert duplicate key')) {\r\n                this.msgs = [{ severity: 'info', summary: 'This user profile already exists', detail: '' }];\r\n                setInterval(() => {\r\n                  this.msgs = [];\r\n                }, 50000)\r\n              }\r\n            }\r\n          )\r\n        }\r\n        this.selectedProfile = [];\r\n        this.selectedProfiles = [];\r\n      } else {\r\n        this.updateProfile();\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProfile() {\r\n    let finalStr;\r\n    finalStr = this.profile.companyName;\r\n    if (this.selectedEntity.length > 0) {\r\n      this.selectedEntity.forEach(item => {\r\n        finalStr = finalStr.concat(\"$\").concat(item.companyName.concat(\"(\" + item.cik + \")\"));\r\n      })\r\n    } else {\r\n\r\n    }\r\n    let term = '';\r\n    term = this.actualSelectedTerms[0].split(' - ')[1] + '(' + this.actualSelectedTerms[0].split(' - ')[0] +')'\r\n    /*\r\n    this.actualSelectedTerms.forEach((item, index) => {\r\n      if (index === (this.actualSelectedTerms.length - 1)) {\r\n        const termObj = this.terms.find(val => val.termId === item);\r\n        term = term + termObj.name + '(' + termObj.termId + ')';\r\n      } else {\r\n\r\n        const termObj = this.terms.find(val => val.termId === item);\r\n        term = term + termObj.name + '(' + termObj.termId + ')' + '$';\r\n      }\r\n    }); */\r\n    this.profileService.updatePreference(term, finalStr, this.profile.preferenceyName, Number(this.profile.processId)).subscribe((response) => {\r\n      this.isUpdate = false;\r\n      this.closeDialog();\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  closeDialog() {\r\n    this.closeDialogBox.emit(true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.profile = {\r\n      termName: \"\",\r\n      companyName: \"\",\r\n      preferenceyName: \"\",\r\n      processId: \"\",\r\n      division: \"\",\r\n      filerCategory: \"\",\r\n      industry: \"\",\r\n      sector: \"\",\r\n      filterRadio: \"companyRadio\",\r\n      companies: []\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".modal-dialog{\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    margin: 0%;\\r\\n    padding-top: 10%;\\r\\n    padding-left: 25%;\\r\\n    padding-right: 25%;\\r\\n}\\r\\n.col-lg-4\\r\\n{\\r\\n    position: relative;\\r\\n}\\r\\n.form-control { width: 300px; }\\r\\n.mydialog {\\r\\n    width: 50vw;\\r\\n}\\r\\n@media screen and (max-width: 40em) {\\r\\n    .mydialog {\\r\\n        width: 75vw;\\r\\n    }\\r\\n}\\r\\n.modal-div{\\r\\n    padding: 20px !important;\\r\\n    margin: 20px !important;\\r\\n}\\r\\n.column1 {\\r\\n    float: left;\\r\\n    width: 30%;\\r\\n    text-align: right;\\r\\n    padding: 10px\\r\\n}\\r\\n.column2 {\\r\\n  float: right;\\r\\n  width: 70%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QjtBQUNBOztJQUVJLGtCQUFrQjtBQUN0QjtBQUNBLGdCQUFnQixZQUFZLEVBQUU7QUFFOUI7SUFDSSxXQUFXO0FBQ2Y7QUFFQTtJQUNJO1FBQ0ksV0FBVztJQUNmO0FBQ0o7QUFDQTtJQUNJLHdCQUF3QjtJQUN4Qix1QkFBdUI7QUFDM0I7QUFFQTtJQUNJLFdBQVc7SUFDWCxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCO0FBQ0o7QUFDQTtFQUNFLFlBQVk7RUFDWixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC1kaWFsb2d7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMCU7XHJcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNSU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyNSU7XHJcbn1cclxuLmNvbC1sZy00XHJcbntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uZm9ybS1jb250cm9sIHsgd2lkdGg6IDMwMHB4OyB9XHJcblxyXG4ubXlkaWFsb2cge1xyXG4gICAgd2lkdGg6IDUwdnc7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwZW0pIHtcclxuICAgIC5teWRpYWxvZyB7XHJcbiAgICAgICAgd2lkdGg6IDc1dnc7XHJcbiAgICB9XHJcbn1cclxuLm1vZGFsLWRpdntcclxuICAgIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbjogMjBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY29sdW1uMSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIHBhZGRpbmc6IDEwcHhcclxufVxyXG4uY29sdW1uMiB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIHdpZHRoOiA3MCU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nOiAxMHB4XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<div>\\r\\n    <p-progressSpinner *ngIf=\\\"progressSpinner\\\" [style]=\\\"{width: '50px', height: '50px',float:'left'}\\\" strokeWidth=\\\"8\\\"\\r\\n        fill=\\\"#EEEEEE\\\" animationDuration=\\\".5s\\\"></p-progressSpinner>\\r\\n    <p-messages [style]=\\\"{color: 'black'}\\\" [value]=\\\"msgs\\\"></p-messages>\\r\\n</div>\\r\\n<div id=\\\"profiles-div\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n        <label class=\\\"col-lg-11\\\">List of Profiles</label>\\r\\n        <button type=\\\"button\\\" pButton (click)=\\\"refreshData()\\\" joyrideStep=\\\"refreshData\\\" title=\\\"Refresh Data Button\\\"\\r\\n            text=\\\"The user can click this button to refresh the profile and update the list of profiles.\\\"\\r\\n            stepPosition=\\\"left\\\" label=\\\"Create Preference(s)\\\" label=\\\"Refresh Data\\\"></button>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n\\r\\n        <p-treeTable [value]=\\\"listPreferences\\\" [columns]=\\\"cols\\\" selectionMode=\\\"checkbox\\\"\\r\\n            [(selection)]=\\\"selectedProfile\\\">\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n                <div style=\\\"text-align:left\\\">\\r\\n                    <p-treeTableHeaderCheckbox joyrideStep=\\\"selectUnselect\\\" title=\\\"Select / Un Select All\\\"\\r\\n                        text=\\\"This option enables the user to select/Un-select and process single/multiple preferences at the same time.\\\"\\r\\n                        stepPosition=\\\"right\\\">\\r\\n                    </p-treeTableHeaderCheckbox>\\r\\n                    <span style=\\\"margin-left: .25em; vertical-align: middle\\\">Select / Un Select All</span>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of columns\\\">\\r\\n                        {{col.header}}\\r\\n                    </th>\\r\\n                    <th>Actions</th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                <tr>\\r\\n                    <td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n                        <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n                        <p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableCheckbox>\\r\\n                        <span *ngIf=\\\"col.header==='Company Name'\\\">\\r\\n                            {{rowData[col.field]}}\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"col.header ==='Term Name'\\\"> {{rowData[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='Code'\\\"> {{rowData[col.field]}}</span>\\r\\n                        <span *ngIf=\\\"col.header ==='Preference Name'\\\"> {{rowData[col.field]}} </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='View Results Link'\\\">\\r\\n                            <span *ngIf=\\\"rowData[col.field] != 'NA' \\\">\\r\\n                                <u><a (click)=\\\"showTermResultnavigate(rowData)\\\"\\r\\n                                        style=\\\"cursor: pointer; color: blue;\\\">View\\r\\n                                        Result</a></u>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"rowData[col.field] == 'NA' \\\">\\r\\n                                {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header ==='Status'\\\">\\r\\n                            {{ rowData[col.field] }}\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='Research Link'\\\">\\r\\n                            <span *ngIf=\\\"rowData[col.field] != 'NA' \\\">\\r\\n                                <u> <a (click)=\\\"openResearchLink(rowData)\\\"\\r\\n                                        style=\\\"cursor: pointer; color: blue;\\\">Research</a></u>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"rowData[col.field] == 'NA' \\\">\\r\\n                                {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='FSQV Link'\\\">\\r\\n                          <span *ngIf=\\\"rowData[col.field] != 'NA' \\\">\\r\\n                              <u> <a (click)=\\\"openFSQVLink(rowData)\\\"\\r\\n                                      style=\\\"cursor: pointer; color: blue;\\\">FSQV</a></u>\\r\\n                          </span>\\r\\n                          <span *ngIf=\\\"rowData[col.field] == 'NA' \\\">\\r\\n                              {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header ==='Is Quarterly'\\\"> {{rowData[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='User'\\\"> {{rowData[col.field]}}</span>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                    <td id=\\\"icons\\\">\\r\\n                        <a (click)=\\\"updateModal(rowData)\\\" *ngIf=\\\"!VIEW_ONLY\\\"> <i class=\\\"fa fa-edit fa-lg\\\"\\r\\n                                style=\\\"font-size:2em; margin-left: 5px !important; margin-right: 10px !important;\\\"></i></a>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-treeTable>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"col-lg-8\\\"></div>\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n            <button type=\\\"button\\\" style=\\\"margin-right: 5px !important; margin-top: 5px !important;\\\" pButton\\r\\n                class=\\\"create-profile\\\" (click)=\\\"processPreference()\\\"\\r\\n                [disabled]=\\\"!(selectedProfile && selectedProfile.length > 0)\\\" label=\\\"Process Preference(s)\\\"\\r\\n                joyrideStep=\\\"processPreference\\\" title=\\\"Process Preference\\\"\\r\\n                text=\\\"This button enables the user to process preference(s) and if the user chooses, view the results. \\\"></button>\\r\\n            <button type=\\\"button\\\" style=\\\"margin-right: 5px !important; margin-top: 5px !important;\\\" pButton\\r\\n                class=\\\"create-profile\\\" (focus)=\\\"openModal()\\\" (click)=\\\"openModal()\\\" joyrideStep=\\\"createPreference\\\"\\r\\n                title=\\\"Create Preference\\\" [stepContent]=\\\"createPreference\\\" label=\\\"Create Preference\\\"></button>\\r\\n            <button type=\\\"button\\\" style=\\\"margin-right: 5px !important; margin-top: 5px !important;\\\" pButton\\r\\n                class=\\\"create-profile\\\" (click)=\\\"deletePreference()\\\"\\r\\n                [disabled]=\\\"!(selectedProfile && selectedProfile.length > 0)\\\" label=\\\"Delete Preference(s)\\\"\\r\\n                joyrideStep=\\\"deletePreference\\\" title=\\\"Delete Preference\\\"\\r\\n                text=\\\"The Delete Preference button enables a user to delete selected preference(s) and delete them when they are not needed.\\\"></button>\\r\\n            <button type=\\\"button\\\" style=\\\"margin-top: 5px !important;\\\" pButton class=\\\"create-profile\\\"\\r\\n                (click)=\\\"clearPreference();refreshData()\\\" [disabled]=\\\"!(selectedProfile && selectedProfile.length > 0)\\\"\\r\\n                label=\\\"Clear Preference(s)\\\" joyrideStep=\\\"clearPreference\\\" title=\\\"Clear Preference\\\"\\r\\n                text=\\\"The Clear Preference button enables a user to clear selected preference(s), this deletes the previously processed results. \\\"></button>\\r\\n            <button type=\\\"button\\\" style=\\\"margin-left: 5px !important; margin-top: 5px !important;\\\" pButton\\r\\n                class=\\\"create-profile\\\" (click)=\\\"sharePreference()\\\"\\r\\n                [disabled]=\\\"!(selectedProfile && selectedProfile.length > 0)\\\" label=\\\"Share Preference(s)\\\"\\r\\n                joyrideStep=\\\"sharePreference\\\" title=\\\"Share Preference\\\"\\r\\n                text=\\\"The Share Preference enables user to select and share group of their own personal preferences among other users, the shared preferences from other users will be displayed in a grid below the preference table.\\\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"(listSharedPreferences.length > 0)\\\" class=\\\"col-lg-12\\\" style=\\\"margin: 10px 0px 5px 0px;\\\">\\r\\n        <label class=\\\"col-lg-12\\\"> <span joyrideStep=\\\"listOfSharedProfile\\\" title=\\\"List of Shared Preference\\\"\\r\\n                text=\\\"List of Shared Preferences shared by other users.\\\">List of Shared Profiles</span></label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"(listSharedPreferences.length > 0)\\\">\\r\\n\\r\\n        <p-treeTable [value]=\\\"listSharedPreferences\\\" [columns]=\\\"sharedPreferenceCols\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of columns\\\">\\r\\n                        {{col.header}}\\r\\n                    </th>\\r\\n                    <th>Actions</th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                <tr>\\r\\n                    <td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n                        <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n                        <span *ngIf=\\\"col.header==='Company Name'\\\">\\r\\n                            {{rowData[col.field]}}\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"col.header ==='Term Name'\\\"> {{rowData[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='Code'\\\"> {{rowData[col.field]}}</span>\\r\\n                        <span *ngIf=\\\"col.header ==='Preference Name'\\\"> {{rowData[col.field]}} </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='View Results Link'\\\">\\r\\n                            <span *ngIf=\\\"rowData[col.field] != 'NA' \\\">\\r\\n                                <u><a (click)=\\\"showTermResultnavigate(rowData)\\\"\\r\\n                                        style=\\\"cursor: pointer; color: blue;\\\">View\\r\\n                                        Result</a></u>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"rowData[col.field] == 'NA' \\\">\\r\\n                                {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header ==='Status'\\\">\\r\\n                            {{ rowData[col.field] }}\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='Research Link'\\\">\\r\\n                            <span *ngIf=\\\"rowData[col.field] != 'NA' \\\">\\r\\n                                <u> <a (click)=\\\"openResearchLink(rowData)\\\"\\r\\n                                        style=\\\"cursor: pointer; color: blue;\\\">Research</a></u>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"rowData[col.field] == 'NA' \\\">\\r\\n                                {{rowData[col.field]}}\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngIf=\\\"col.header ==='Is Quarterly'\\\"> {{rowData[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='User'\\\"> {{rowData[col.field]}}</span>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                    <td id=\\\"icons\\\">\\r\\n                        <a (click)=\\\"acceptPreferences(rowData)\\\" joyrideStep=\\\"accept\\\" title=\\\"Accept Preference\\\"\\r\\n                            text=\\\"Accept Preference enables user to accept the preference shared by other users, upon accept the shared preference will be added to user preferences\\\"\\r\\n                            *ngIf=\\\"!VIEW_ONLY\\\"> <i class=\\\"fa fa-check fa-lg\\\"\\r\\n                                style=\\\"font-size:2em; margin-left: 5px !important; margin-right: 10px !important;\\\"></i></a>\\r\\n                        <a (click)=\\\"deleteSharedPreference(rowData)\\\" joyrideStep=\\\"delete\\\" title=\\\"Delete Preference\\\"\\r\\n                            text=\\\"Delete Shared Preference enables user to dis regard the shared preference and clear from the list of shared preferences grid.\\\"\\r\\n                            *ngIf=\\\"!VIEW_ONLY\\\"> <i class=\\\"fa fa-trash fa-lg\\\"\\r\\n                                style=\\\"font-size:2em; margin-left: 5px !important; margin-right: 10px !important;\\\"></i></a>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-treeTable>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<p-dialog header=\\\"Create Profile\\\" [(visible)]=\\\"displayCreateModal\\\" [modal]=\\\"true\\\"\\r\\n    [style]=\\\"{width: '80vw',overflow:'auto',height:'120vh'}\\\" [maximizable]=\\\"true\\\" [draggable]=\\\"true\\\"\\r\\n    [resizable]=\\\"false\\\">\\r\\n    <span style=\\\"height: 10px;\\\"></span>\\r\\n    <app-create-profile *ngIf=\\\"displayCreateModal\\\" [completeCompanyList]=\\\"completeCompanyList\\\"\\r\\n        [filteredfilerCategory]=\\\"filteredfilerCategory\\\" [filteredindustry]=\\\"filteredindustry\\\" [actionType]=\\\"'create'\\\"\\r\\n        (closeDialogBox)=closeDialog($event) [profile]=\\\"profile\\\" [companyList]=\\\"companyList\\\"\\r\\n        [termNamesList]=\\\"termNamesList\\\" [filteredTerms]=\\\"filteredTerms\\\" [filteredCompany]=\\\"filteredCompany\\\"\\r\\n        [filtereddivSector]=\\\"filtereddivSector\\\" [entityList]=\\\"entityList\\\" [isUpdate]=\\\"isUpdate\\\"></app-create-profile>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Create Profile\\\" [(visible)]=\\\"displayCreateProfileEditModal\\\" [modal]=\\\"true\\\"\\r\\n    [style]=\\\"{width: '80vw',overflow:'auto',height:'120vh'}\\\" [maximizable]=\\\"true\\\" [draggable]=\\\"true\\\"\\r\\n    [resizable]=\\\"false\\\">\\r\\n    <span style=\\\"height: 10px;\\\"></span>\\r\\n    <app-create-profile *ngIf=\\\"displayCreateProfileEditModal\\\" [completeCompanyList]=\\\"completeCompanyList\\\"\\r\\n        [filteredfilerCategory]=\\\"filteredfilerCategory\\\" [filteredindustry]=\\\"filteredindustry\\\" [actionType]=\\\"'edit'\\\"\\r\\n        (closeDialogBox)=closeDialog($event) [profile]=\\\"profile\\\" [companyList]=\\\"companyList\\\"\\r\\n        [termNamesList]=\\\"termNamesList\\\" [filteredTerms]=\\\"filteredTerms\\\" [filteredCompany]=\\\"filteredCompany\\\"\\r\\n        [filtereddivSector]=\\\"filtereddivSector\\\" [entityList]=\\\"entityList\\\" [isUpdate]=\\\"isUpdate\\\"></app-create-profile>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Share Profile\\\" [(visible)]=\\\"displayShareProfileModal\\\" [modal]=\\\"true\\\"\\r\\n    [style]=\\\"{width: '80vw',overflow:'auto',height:'120vh'}\\\" [maximizable]=\\\"true\\\" [draggable]=\\\"true\\\"\\r\\n    [resizable]=\\\"false\\\">\\r\\n    <span style=\\\"height: 10px;\\\"></span>\\r\\n    <app-share-preferences *ngIf=\\\"displayShareProfileModal\\\" (closeDialogBox)=closeSharePreferencesDialog($event)\\r\\n        [selectedProfile]=\\\"selectedProfile\\\"></app-share-preferences>\\r\\n</p-dialog>\\r\\n\\r\\n<ng-template #createPreference>\\r\\n    <div>This option enables the user to Create Preference by selecting the term, entity, and peer group.</div>\\r\\n    <div>The user can choose these options from a modal pop up that is displayed when the user clicks this button.\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ɵConsole } from '@angular/core';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { Router, ActivatedRoute, NavigationStart, NavigationEnd } from '@angular/router'\r\nimport * as _ from 'lodash';\r\nimport { FormGroup, FormControl, NgForm, Validators, FormBuilder } from '@angular/forms'\r\nimport { stringify } from 'querystring';\r\nimport { HomeComponent } from 'app/home/homeComponent';\r\nimport { UtilService } from 'app/utils/utilService';\r\nimport { MappedEntity } from 'app/domain/mappedEntity';\r\nimport { Message, TreeNode } from 'primeng/api';\r\nimport { element } from '@angular/core/src/render3';\r\nimport { CommonService } from 'app/services/common.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  preferencesList: any[]\r\n  selectedProfile: any[];\r\n  selectedEntity: any[] = [];\r\n  existingProfiles = [];\r\n  companyList: any[];\r\n  termNamesList: any[];\r\n  token = \"\";\r\n  selectedProfiles: any[] = [];\r\n  processTermsList: any[] = [];\r\n  displayCreateModal: boolean = false;\r\n  displayCreateProfileEditModal = false;\r\n  filteredTerms: any[];\r\n  filteredCompany: any[];\r\n  preferenceForm: FormGroup;\r\n\r\n\r\n  profile = {\r\n    termName: \"\",\r\n    companyName: \"\",\r\n    preferenceyName: \"\",\r\n    processId: \"\",\r\n    division: \"\",\r\n    filerCategory: \"\",\r\n    industry: \"\",\r\n    sector: \"\",\r\n    filterRadio: \"companyRadio\",\r\n    companies: []\r\n  }\r\n  listSharedPreferences = [];\r\n  selectedSharedProfile = [];\r\n  displayShareProfileModal = false;\r\n  constructor(private profileService: ProfileService, private activatedRoute: ActivatedRoute, private commonService: CommonService, private router: Router, private builder: FormBuilder, private utilService: UtilService) {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  companiesList: any[];\r\n  divSectorList: any[];\r\n  filtereddivSector: any[];\r\n  filerCategoryList: any[];\r\n  filteredfilerCategory: any[];\r\n  industryList: any[];\r\n  completeCompanyList: any[];\r\n  company: string;\r\n  homeEntityCol: any[];\r\n  entityList: any[];\r\n  ngOnInit() {\r\n\r\n    this.homeEntityCol = [\r\n      { field: 'cik', header: 'Cik' },\r\n      { field: 'companyName', header: 'Company Name' }\r\n    ];\r\n\r\n    this.reset();\r\n    this.getAllSharedProfiles();\r\n    this.getAllProfiles();\r\n    this.getTermNames();\r\n    this.getCompanyNames();\r\n    this.formValidation();\r\n\r\n    this.utilService.getCompanyList().subscribe((response) => { this.companiesList = response; });\r\n    this.utilService.getDivSectorList().subscribe((response) => {\r\n      this.divSectorList = response;\r\n      this.filtereddivSector = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filtereddivSector.push(name)\r\n      });\r\n    })\r\n    this.utilService.getIndustryList().subscribe((response) => {\r\n      this.industryList = response;\r\n    })\r\n    this.utilService.getFilerCategoryList().subscribe((response) => {\r\n      this.filerCategoryList = response;\r\n      this.filteredfilerCategory = [];\r\n      response.forEach(obj => {\r\n        var name = { label: obj, value: obj };\r\n        this.filteredfilerCategory.push(name)\r\n      });\r\n    })\r\n    this.utilService.getCompleteCompanyList().subscribe((response) => {\r\n      this.completeCompanyList = response;\r\n\r\n    });\r\n\r\n  }\r\n\r\n  // processIndustryChange(event) {\r\n  //   event = event.value ? event.value : event;\r\n  //   event = event.substring(0, 4);\r\n  //   var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n  //   this.sectorCount = completeEntities.length\r\n  // }\r\n\r\n  processIndustryChange(event) {\r\n    // event = event.value ? event.value : null;\r\n    if (event != null) {\r\n      this.profile.filerCategory = undefined;\r\n      event = event.substring(0, 4);\r\n      var completeEntities = this.completeEntities.filter(obj => obj.sic === event);\r\n      this.sectorCount = completeEntities.length;\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      this.sectorCount = this.divisionCount;\r\n      this.categoryCount = this.divisionCount;\r\n    }\r\n\r\n  }\r\n\r\n  // processfilCatChange(event) {\r\n  //   event = event.value ? event.value : event;\r\n  //   var completeEntities = this.completeEntities.filter(obj =>\r\n  //     obj.filerCategory === event && obj.sic === this.profile.industry.substr(0, 4));\r\n  //   this.sectorCount = completeEntities.length\r\n  //   this.categoryCount = completeEntities.length;\r\n  // }\r\n\r\n  processfilCatChange(event) {\r\n    // event = event.value ? event.value : null;\r\n    if (event != null) {\r\n      var completeEntities = this.completeEntities.filter(obj =>\r\n        obj.filerCategory === event && obj.sic === this.profile.industry.substr(0, 4));\r\n      // this.industryCount = completeEntities.length;\r\n      this.categoryCount = completeEntities.length;\r\n    } else {\r\n      // this.industryCount = this.divisionCount;\r\n      this.categoryCount = this.divisionCount;\r\n    }\r\n\r\n  }\r\n\r\n  goToPeer(event) {\r\n\r\n    if (this.profile.companyName != undefined && this.profile.companyName.length > 15) {\r\n      this.company = this.profile.companyName.substr(0, this.profile.companyName.length - 12);\r\n      var peer = this.completeCompanyList.filter(obj => obj.companyName === this.company);\r\n      this.profile.division = peer[0].division;\r\n      this.profile.sector = peer[0].sector;\r\n      this.divSector = peer[0].division + ' -> ' + peer[0].sector;\r\n      this.divSectorChange(this.divSector)\r\n      this.profile.industry = peer[0].sic + '-' + peer[0].industry;\r\n      this.processIndustryChange(this.profile.industry);\r\n      this.profile.filerCategory = peer[0].filerCategory;\r\n      this.processfilCatChange(this.profile.filerCategory);\r\n      this.filterRadio = 'divisionRadio';\r\n    }\r\n  }\r\n\r\n  showResolved() {\r\n    let mp = new MappedEntity();\r\n    mp.termRuleId = this.getTermIdOrEntityName(this.profile.termName);\r\n    mp.entityId = \"NULL\";\r\n    mp.division = this.profile.division;\r\n    mp.sector = this.profile.sector;\r\n    mp.filerCategory = this.profile.filerCategory;\r\n    mp.rankId = 0;\r\n    mp.minYear = (new Date()).getFullYear() - 4;\r\n    mp.maxYear = (new Date()).getFullYear();\r\n    mp.includeQuarterly = true;\r\n    mp.sic = this.profile.industry.substring(0, 4);\r\n    console.log(this.profile);\r\n    console.log(mp)\r\n    this.profileService.showReslovedData(mp).subscribe(results => {\r\n      console.log(results);\r\n      this.entityList = results;\r\n    })\r\n\r\n  }\r\n\r\n  completeEntities: any[] = [];\r\n  filteredindustry: any[];\r\n  divisionCount: number;\r\n  sectorCount: number;\r\n  categoryCount: number;\r\n\r\n\r\n  // divSectorChange(event) {\r\n  //   this.completeEntities = this.completeCompanyList;\r\n  //   var sicCodes: any[] = [];\r\n  //   event = event.value ? event.value : event;\r\n  //   var division = event.substr(0, event.indexOf('->') - 1);\r\n  //   var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n  //   if (division) {\r\n  //     this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n  //   }\r\n\r\n  //   if (sector) {\r\n  //     this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n  //   }\r\n  //   this.completeEntities.forEach(obj => {\r\n  //     sicCodes.push(obj.sic + '-' + obj.industry);\r\n  //   })\r\n  //   sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n  //   this.filteredindustry = [];\r\n  //   sicCodes.forEach(obj => {\r\n  //     var name = { label: obj, value: obj };\r\n  //     this.filteredindustry.push(name);\r\n  //   })\r\n\r\n  //   this.divisionCount = this.completeEntities.length;\r\n  //   this.sectorCount = this.completeEntities.length;\r\n  //   this.categoryCount = this.completeEntities.length;;\r\n  //   // if(this.derivedZeroExpressionForEdit.industry) {\r\n  //   //   var completeEntities = this.completeEntities.filter(obj => obj.sic === this.derivedZeroExpressionForEdit.industry);\r\n  //   //   this.sectorCount = completeEntities.length\r\n  //   // }\r\n  // }\r\n\r\n  divSectorChange(event) {\r\n    this.completeEntities = this.completeCompanyList;\r\n    var sicCodes: any[] = [];\r\n    // event = event.value ? event.value : event;\r\n    var division = event.substr(0, event.indexOf('->') - 1);\r\n    var sector = event.substr(event.indexOf('->') + 3, event.length);\r\n    this.profile.filerCategory = undefined;\r\n    this.profile.industry = undefined;\r\n    if (division) {\r\n      this.completeEntities = this.completeCompanyList.filter(obj => obj.division === division);\r\n    }\r\n\r\n    if (sector) {\r\n      this.completeEntities = this.completeEntities.filter(obj => obj.sector === sector);\r\n    }\r\n    this.completeEntities.forEach(obj => {\r\n      sicCodes.push(obj.sic + '-' + obj.industry);\r\n    })\r\n    sicCodes = sicCodes.filter((el, i, a) => i === a.indexOf(el))\r\n    this.filteredindustry = [];\r\n    sicCodes.forEach(obj => {\r\n      var name = { label: obj, value: obj };\r\n      this.filteredindustry.push(name);\r\n    })\r\n\r\n    this.divisionCount = this.completeEntities.length;\r\n    this.sectorCount = this.completeEntities.length;\r\n    this.categoryCount = this.completeEntities.length;;\r\n    // if(this.derivedZeroExpressionForEdit.industry) {\r\n    //   var completeEntities = this.completeEntities.filter(obj => obj.sic === this.derivedZeroExpressionForEdit.industry);\r\n    //   this.sectorCount = completeEntities.length\r\n    // }\r\n  }\r\n\r\n\r\n\r\n\r\n  /*\r\n   New login::\r\n  */\r\n\r\n\r\n\r\n  divSector: string = \"\";\r\n  filterRadio: string = \"companyRadio\";\r\n\r\n\r\n\r\n  formValidation() {\r\n    this.preferenceForm = this.builder.group({\r\n      termName: [this.profile.termName, []],\r\n      companyName: [this.profile.companyName, []],\r\n      preferenceyName: [this.profile.preferenceyName, [Validators.required, Validators.min(3)]],\r\n      division: [this.profile.division, []],\r\n      sector: [this.profile.sector, []],\r\n      industry: [this.profile.industry, []],\r\n      filerCategory: [this.profile.filerCategory, []],\r\n      filterRadio: [this.profile.filterRadio, []]\r\n    })\r\n  }\r\n\r\n  get pereferencesForm() {\r\n    return this.preferenceForm.controls;\r\n  }\r\n\r\n  submitted: boolean = false;\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.preferenceForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.savePreference();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    HTMLDListElement\r\n    this.selectedProfile = [];\r\n    this.selectedProfiles = [];\r\n    this.processTermsList = [];\r\n    this.preferencesList = [];\r\n  }\r\n\r\n  termname: string;\r\n\r\n\r\n  searchTerm(event) {\r\n    this.filteredTerms = [];\r\n    for (let i = 0; i < this.termNamesList.length; i++) {\r\n      let name: string = this.termNamesList[i].name;\r\n      if (name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredTerms.push(name);\r\n      }\r\n    }\r\n  }\r\n\r\n  showTermResultnavigate(data) {\r\n    //let termName = data.code;\r\n    this.router.navigate(['/termresults'],\r\n      {\r\n        state:\r\n        {\r\n          termName: this.getTermIdOrEntityName(data.termName),\r\n          entityId: this.getTermIdOrEntityName(data.companyName),\r\n          companyName: data.companyName.substring(0, data.companyName.indexOf(\"(\"))\r\n        }\r\n      })\r\n  }\r\n\r\n  searchCompany(event) {\r\n    this.filteredCompany = [];\r\n    for (let i = 0; i < this.companyList.length; i++) {\r\n      let cname: string = this.companyList[i].name;\r\n      if (cname.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n        this.filteredCompany.push(cname);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  cols = [\r\n\r\n    { field: 'companyName', header: 'Company Name', hidden: false, exportable: false, width: '18%' },\r\n    { field: 'termName', header: 'Term Name', hidden: false },\r\n    { field: 'code', header: 'Code', hidden: false, exportable: false },\r\n    { field: 'preferenceName', header: 'Preference Name', hidden: false },\r\n    { field: 'resultLink', header: 'View Results Link', hidden: false },\r\n    { field: 'validationStatus', header: 'Status', hidden: false },\r\n    { field: 'researchLink', header: 'Research Link', hidden: false },\r\n    { field: 'fsqvLink', header: 'FSQV Link', hidden: false },\r\n    { field: 'quarterly', header: 'Is Quarterly', hidden: false },\r\n    { field: 'userid', header: 'User', hidden: false },\r\n  ];\r\n\r\n  sharedPreferenceCols = [\r\n\r\n    { field: 'companyName', header: 'Company Name', hidden: false, exportable: false, width: '15%' },\r\n    { field: 'termName', header: 'Term Name', hidden: false },\r\n    { field: 'code', header: 'Code', hidden: false, exportable: false },\r\n    { field: 'preferenceName', header: 'Preference Name', hidden: false },\r\n    { field: 'quarterly', header: 'Is Quarterly', hidden: false },\r\n    { field: 'userid', header: 'User', hidden: false },\r\n  ];\r\n\r\n  gotoBtnEnable = false;\r\n  isTermNameValid = false;\r\n  selectedTermName = [];\r\n  addOrRemoveTermName() {\r\n    this.selectedTermName = [];\r\n\r\n    this.isTermNameValid = false;\r\n    for (let i = 0; i < this.termNamesList.length; i++) {\r\n      let name: string = this.termNamesList[i].name;\r\n      if (name.toLowerCase().indexOf(this.profile.termName.toLowerCase()) == 0) {\r\n        this.selectedTermName.push(name);\r\n\r\n        this.isTermNameValid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveEntities() {\r\n    let name = \"\"\r\n    this.profile.companyName = \"\";\r\n    this.profile.companies.forEach(entity => {\r\n      if (name != null || name != \"\") {\r\n        name = name + \",\" + entity\r\n\r\n      } else {\r\n        name = entity;\r\n      }\r\n    })\r\n    this.profile.companyName = name.substr(1, name.length);\r\n\r\n    if (this.profile.companies.length > 1) {\r\n      this.gotoBtnEnable = true;\r\n    } else {\r\n      this.gotoBtnEnable = false;\r\n    }\r\n  }\r\n  resetProfile() {\r\n    this.profile = {\r\n      termName: \"\",\r\n      companyName: \"\",\r\n      preferenceyName: \"\",\r\n      processId: \"\",\r\n      division: \"\",\r\n      filerCategory: \"\",\r\n      industry: \"\",\r\n      sector: \"\",\r\n      filterRadio: \"companyRadio\",\r\n      companies: []\r\n    }\r\n    this.entityList = null;\r\n    this.categoryCount = null;\r\n    this.sectorCount = null;\r\n    this.divisionCount = null;\r\n  }\r\n\r\n  openModal() {\r\n\r\n    this.resetProfile();\r\n    this.selectedEntity = [];\r\n    this.isUpdate = false;\r\n    this.displayCreateModal = true;\r\n    this.profile.companyName = \"\";\r\n    this.profile.termName = \"\";\r\n    this.profile.preferenceyName = \"\";\r\n    this.profile.processId = \"\";\r\n    this.divSector = '';\r\n  };\r\n\r\n  sharePreference() {\r\n    this.displayShareProfileModal = true;\r\n  }\r\n\r\n  isUpdate: boolean = false;\r\n  listPreferences: TreeNode[];\r\n  updateModal(rowdata) {\r\n    this.profile.companies = [];\r\n    this.isUpdate = true;\r\n    this.displayCreateProfileEditModal = true;\r\n    //this.profile.companies.push(rowdata.companyName);\r\n\r\n    //reverse term name format from \"term name(code)\" to \"code - term name\"\r\n    var tmp = \"\";\r\n    var newTermName = \"\";\r\n    var tmp1 = \"\";\r\n    if (rowdata.termName) {\r\n      tmp = rowdata.termName.split('(');\r\n      var length = tmp.length;\r\n      for (var i = 0 ; i <length-1; i++) {\r\n        if (length > 2) {\r\n          tmp1 = tmp1 + '(' + tmp[i];\r\n        } else {\r\n          tmp1 = tmp1 + tmp[i];\r\n        }\r\n\r\n      }\r\n      newTermName = tmp[tmp.length - 1].split(')')[0] + ' - ' + tmp1;\r\n    }\r\n    this.profile.termName = newTermName;\r\n    this.profile.preferenceyName = rowdata.preferenceName;\r\n    this.profile.processId = rowdata.processId;\r\n\r\n    this.fetchProcessObject(this.profile.processId);\r\n    console.log(rowdata);\r\n\r\n  };\r\n\r\n  acceptPreferences(rowdata) {\r\n    this.profileService.acceptSharedPrefernces(rowdata).subscribe((response) => {\r\n      this.listSharedPreferences = [];\r\n      const preferencesList = [];\r\n      response.forEach(preferences => {\r\n        const pname: any[] = preferences.companyName.split(\"$\");\r\n        preferencesList.push(\r\n          this.getRootRecords(preferences, pname)\r\n        );\r\n      });\r\n      this.refreshData();\r\n      this.listSharedPreferences = preferencesList;\r\n      CommonService.emitsharedPreferenceNotificationEvent(this.listSharedPreferences);\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  deleteSharedPreference(rowdata) {\r\n    this.profileService.deleteSharedPrefernces([rowdata.processId]).subscribe((response) => {\r\n      this.listSharedPreferences = [];\r\n      const preferencesList = [];\r\n      response.forEach(preferences => {\r\n        const pname: any[] = preferences.companyName.split(\"$\");\r\n        preferencesList.push(\r\n          this.getRootRecords(preferences, pname)\r\n        );\r\n      });\r\n      this.listSharedPreferences = preferencesList;\r\n      CommonService.emitsharedPreferenceNotificationEvent(this.listSharedPreferences);\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  fetchProcessObject(processId) {\r\n    this.listPreferences.forEach((parentdata => {\r\n      let selectedProfileId = parentdata.data.processId;\r\n      if (processId === selectedProfileId) {\r\n        let rowdata: any[] = new Array();\r\n        rowdata.push(parentdata.data);\r\n        parentdata.children.forEach(item => {\r\n          rowdata.push(item.data);\r\n        })\r\n\r\n        this.entityList = [];\r\n        this.selectedEntity = [];\r\n        rowdata.forEach(element => {\r\n          let entity = { \"cik\": this.getTermIdOrEntityName(element.companyName), \"companyName\": element.companyName.substr(0, element.companyName.indexOf('(')) };\r\n          this.entityList.push(entity);\r\n          this.selectedEntity.push(entity);\r\n        })\r\n\r\n      }\r\n    }))\r\n  }\r\n\r\n  getTermNames() {\r\n    this.profileService.getTermNames().subscribe((response) => {\r\n      this.termNamesList = [];\r\n      response.forEach(preferences => {\r\n        this.termNamesList.push({ name: preferences.name });\r\n      })\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  };\r\n  getCompanyNames() {\r\n    this.profileService.getCoompanyNames().subscribe((response) => {\r\n      this.companyList = [];\r\n      response.forEach(preferences => {\r\n        this.companyList.push({ name: preferences });\r\n      })\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n  openResearchLink(data) {\r\n    let linkUrl = data.researchLink;\r\n    let companyName = data.companyName;\r\n    let cik = companyName.substring(companyName.indexOf(\"(\") + 1, companyName.indexOf(\")\"));\r\n    linkUrl = linkUrl.substring(0,linkUrl.indexOf(\"CIK=\") + 4) + cik;\r\n    window.open(linkUrl, \"_blank\");\r\n  }\r\n\r\n  openFSQVLink(data) {\r\n    let linkUrl = data.fsqvLink;\r\n    let companyName = data.companyName;\r\n    let cik = companyName.substring(companyName.indexOf(\"(\") + 1, companyName.indexOf(\")\"));\r\n    linkUrl = linkUrl.substring(0,linkUrl.indexOf(\"cik=\") + 4) + cik;\r\n    window.open(linkUrl, \"_blank\");\r\n  }\r\n\r\n  getAllProfiles() {\r\n    this.profileService.getAllProfiles().subscribe((response) => {\r\n      this.preferencesList = [];\r\n      this.selectedProfile = [];\r\n      this.selectedProfiles = [];\r\n      this.progressSpinner = false;\r\n      this.populateResponse(response);\r\n\r\n      setInterval(() => {\r\n        this.msgs = [];\r\n      }, 50000)\r\n\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  getAllSharedProfiles() {\r\n    this.profileService.getAllSharedProfiles().subscribe((response) => {\r\n      this.progressSpinner = false;\r\n      this.listSharedPreferences = [];\r\n      const preferencesList = [];\r\n      response.forEach(preferences => {\r\n        const pname: any[] = preferences.companyName.split(\"$\");\r\n        preferencesList.push(\r\n          this.getRootRecords(preferences, pname)\r\n        );\r\n      });\r\n\r\n      this.listSharedPreferences = preferencesList;\r\n      CommonService.emitsharedPreferenceNotificationEvent(this.listSharedPreferences);\r\n\r\n      setInterval(() => {\r\n        this.msgs = [];\r\n      }, 50000)\r\n\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  savePreference() {\r\n\r\n    if (this.preferenceForm.invalid) {\r\n      return;\r\n    } else {\r\n\r\n\r\n      if (!this.isUpdate) {\r\n\r\n        if (this.profile.companyName.length > 0 && this.profile.preferenceyName != null) {\r\n          this.displayCreateModal = false;\r\n          this.displayCreateProfileEditModal = false;\r\n          let finalStr;\r\n          finalStr = this.profile.companyName;\r\n          if (this.selectedEntity.length > 0) {\r\n            this.selectedEntity.forEach(item => {\r\n\r\n              finalStr = finalStr.concat(\"$\").concat(item.companyName.concat(\"(\" + item.cik + \")\"));\r\n\r\n            })\r\n          } else {\r\n\r\n          }\r\n\r\n          console.log(finalStr);\r\n          this.profileService.savePreference(this.profile.termName, finalStr, this.profile.preferenceyName).subscribe((response) => {\r\n            this.populateResponse(response);\r\n          },\r\n            (error) => console.log(error)\r\n          )\r\n        } else {\r\n          this.displayCreateModal = true;\r\n          this.displayCreateProfileEditModal = false;\r\n\r\n        }\r\n        this.selectedProfile = [];\r\n        this.selectedProfiles = [];\r\n      } else {\r\n        this.updateProfile()\r\n      }\r\n    }\r\n  }\r\n  updateProfile() {\r\n    this.displayCreateModal = false;\r\n    this.displayCreateProfileEditModal = false;\r\n    let finalStr;\r\n    finalStr = this.profile.companyName;\r\n    if (this.selectedEntity.length > 0) {\r\n      this.selectedEntity.forEach(item => {\r\n        finalStr = finalStr.concat(\"$\").concat(item.companyName.concat(\"(\" + item.cik + \")\"));\r\n      })\r\n    } else {\r\n\r\n    }\r\n    this.profileService.updatePreference(this.profile.termName, finalStr, this.profile.preferenceyName, Number(this.profile.processId)).subscribe((response) => {\r\n\r\n      /* this.profile.companyName = \"\";\r\n       this.profile.preferenceyName = \"\";\r\n       this.profile.termName = \"\";*/\r\n      this.isUpdate = false;\r\n\r\n      this.populateResponse(response);\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  deletePreference() {\r\n    this.getProcessIds(this.selectedProfile)\r\n\r\n\r\n    this.profileService.deletePrefernces(this.selectedProfiles).subscribe((response) => {\r\n      this.populateResponse(response);\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  clearPreference() {\r\n    this.getProcessIds(this.selectedProfile)\r\n\r\n    this.profileService.clearPrefernces(this.selectedProfiles).subscribe((response) => {\r\n      this.populateResponse(response);\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n  }\r\n\r\n  getProcessIds(selectedItems: any[]) {\r\n    selectedItems.forEach(profiledata => {\r\n      let profile = profiledata.data;\r\n      this.selectedProfiles.push(profile.processId);\r\n    })\r\n\r\n  }\r\n  entities: any[];\r\n  progressSpinner: boolean = false;\r\n  msgs: Message[] = [];\r\n\r\n  processPreference() {\r\n    this.progressSpinner = true;\r\n    this.msgs = [{ severity: 'info', summary: '\"Selected Profile(s) Processing in progress!\"', detail: '' }];\r\n\r\n    this.selectedProfile.forEach(profiledata => {\r\n      let profile = profiledata.data;\r\n      profile.validationStatus = \"In Progress\";\r\n      if (profile.termName === \"**All Terms**\") {\r\n        let termIds: any[] = [];\r\n        this.termNamesList.forEach(termname => {\r\n          termIds.push(this.getTermIdOrEntityName(termname.name));\r\n        })\r\n        this.selectedProfile.forEach(sprofiledata => {\r\n          let sprofile = sprofiledata.data;\r\n          termIds.push(this.getTermIdOrEntityName(sprofile.companyName));\r\n          termIds.push(sprofile.processId);\r\n        })\r\n\r\n        this.profileService.processAllTerms(termIds).subscribe((response) => {\r\n          this.msgs = [{ severity: 'info', summary: 'Selected Profile(s) Processed!', detail: '' }];\r\n\r\n          this.getAllProfiles();\r\n        },\r\n          (error) => console.log(error)\r\n        )\r\n      } else {\r\n        this.profileService.processMultiEntitiesTerms(profile.code, this.getTermIdOrEntityName(profile.companyName), profile.processId).subscribe((response) => {\r\n          this.msgs = [{ severity: 'info', summary: 'Selected Profile(s) Processed!', detail: '' }];\r\n          this.getAllProfiles();\r\n        },\r\n          (error) => console.log(error)\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  splitEntityes(entityName: string) {\r\n    return entityName.split(\"$\");\r\n  }\r\n\r\n  refreshData() {\r\n    this.getAllProfiles();\r\n    this.getAllSharedProfiles();\r\n  }\r\n  getTermIdOrEntityName(inputValue: string): string {\r\n    let outputValue: string = inputValue.substring((inputValue.indexOf(\"(\") + 1), inputValue.indexOf(\")\"));\r\n    return outputValue;\r\n  }\r\n\r\n  populateResponse(response) {\r\n    this.listPreferences = [];\r\n    this.preferencesList = [];\r\n    response.forEach(preferences => {\r\n\r\n      const pname: any[] = preferences.companyName.split(\"$\");\r\n      this.preferencesList.push(this.getRootRecords(preferences, pname));\r\n      this.listPreferences = this.preferencesList;\r\n\r\n    });\r\n    this.selectedProfile = [];\r\n\r\n\r\n  }\r\n\r\n  getRootRecords(preferences, companyNames) {\r\n    const entityName: string = companyNames[0];\r\n    return {\r\n      \"data\": {\r\n        processId: preferences.processId, companyName: entityName, preferenceName: preferences.preferenceName,\r\n        code: preferences.code, userid: preferences.userid, termName: preferences.termName.split('$')[0], resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n        researchLink: preferences.researchLink, fsqvLink: preferences.fsqvLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n      },\r\n      \"children\": this.getChildRecord(preferences, companyNames)\r\n    }\r\n  }\r\n  getChildRecord(preferences, companyNames) {\r\n    const childrens: any[] = []\r\n    if (preferences.termName.split('$').length > 1) {\r\n      preferences.termName.split('$').forEach((item, index) => {\r\n        if (index > 0) {\r\n          childrens.push({\r\n            \"data\": {\r\n              processId: preferences.processId, companyName: companyNames[0], preferenceName: preferences.preferenceName,\r\n              code: preferences.code, userid: preferences.userid, termName: item, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n              researchLink: preferences.researchLink, fsqvLink: preferences.fsqvLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n    for (let i = 1; i < companyNames.length; i++) {\r\n      preferences.termName.split('$').forEach(item => {\r\n        childrens.push({\r\n          \"data\": {\r\n            processId: preferences.processId, companyName: companyNames[i], preferenceName: preferences.preferenceName,\r\n            code: preferences.code, userid: preferences.userid, termName: item, resultLink: preferences.resultLink, validationStatus: preferences.validationStatus,\r\n            researchLink: preferences.researchLink, fsqvLink: preferences.fsqvLink, cik: preferences.cik, cName: preferences.cName, quaterly: preferences.quaterly\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return childrens;\r\n  }\r\n\r\n  closeDialog(value) {\r\n    this.displayCreateModal = false;\r\n    this.displayCreateProfileEditModal = false;\r\n    this.getAllProfiles();\r\n  }\r\n\r\n  closeSharePreferencesDialog(isPreferenceShared) {\r\n    this.displayShareProfileModal = false;\r\n    if (isPreferenceShared) {\r\n      this.refreshData();\r\n    }\r\n  }\r\n\r\n}\r\n","export class profile {\r\n    termName: string;\r\n    companyName: string;\r\n    preName: string;\r\n    profileId: number;\r\n    userid: string;\r\n\r\n}","module.exports = \".modal-dialog{\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    margin: 0%;\\r\\n    padding-top: 10%;\\r\\n    padding-left: 25%;\\r\\n    padding-right: 25%;\\r\\n}\\r\\n.col-lg-4\\r\\n{\\r\\n    position: relative;\\r\\n}\\r\\n.form-control { width: 300px; }\\r\\n.mydialog {\\r\\n    width: 50vw;\\r\\n}\\r\\n@media screen and (max-width: 40em) {\\r\\n    .mydialog {\\r\\n        width: 75vw;\\r\\n    }\\r\\n}\\r\\n.modal-div{\\r\\n    padding: 20px !important;\\r\\n    margin: 20px !important;\\r\\n}\\r\\n.column1 {\\r\\n    float: left;\\r\\n    width: 30%;\\r\\n    text-align: right;\\r\\n    padding: 10px\\r\\n}\\r\\n.column2 {\\r\\n  float: right;\\r\\n  width: 70%;\\r\\n  text-align: left;\\r\\n  padding: 10px\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9zaGFyZS1wcmVmZXJlbmNlcy9zaGFyZS1wcmVmZXJlbmNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7SUFDWCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7QUFDQTs7SUFFSSxrQkFBa0I7QUFDdEI7QUFDQSxnQkFBZ0IsWUFBWSxFQUFFO0FBRTlCO0lBQ0ksV0FBVztBQUNmO0FBRUE7SUFDSTtRQUNJLFdBQVc7SUFDZjtBQUNKO0FBQ0E7SUFDSSx3QkFBd0I7SUFDeEIsdUJBQXVCO0FBQzNCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtFQUNWLGdCQUFnQjtFQUNoQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9zaGFyZS1wcmVmZXJlbmNlcy9zaGFyZS1wcmVmZXJlbmNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLWRpYWxvZ3tcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwJTtcclxuICAgIHBhZGRpbmctdG9wOiAxMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI1JTtcclxufVxyXG4uY29sLWxnLTRcclxue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5mb3JtLWNvbnRyb2wgeyB3aWR0aDogMzAwcHg7IH1cclxuXHJcbi5teWRpYWxvZyB7XHJcbiAgICB3aWR0aDogNTB2dztcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDBlbSkge1xyXG4gICAgLm15ZGlhbG9nIHtcclxuICAgICAgICB3aWR0aDogNzV2dztcclxuICAgIH1cclxufVxyXG4ubW9kYWwtZGl2e1xyXG4gICAgcGFkZGluZzogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAyMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jb2x1bW4xIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgcGFkZGluZzogMTBweFxyXG59XHJcbi5jb2x1bW4yIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgd2lkdGg6IDcwJTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDEwcHhcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<form [formGroup]=\\\"preferenceForm\\\" *ngIf=\\\"preferenceForm\\\">\\r\\n  <div class=\\\"modal-div\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"userName\\\" class=\\\"col-lg-3 form-control-label\\\">User Id(s)</label>\\r\\n      <div class=\\\"col-xs-8\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid':preferenceForm.controls.userName.errors}\\\"\\r\\n          style=\\\"width: 400px !important;display:inline\\\" formControlName=\\\"userName\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n\\r\\n      <label for=\\\"shareToEveryone\\\" class=\\\"col-lg-3 form-control-label\\\"></label>\\r\\n<!--\\r\\n      <div class=\\\"col-xs-8\\\">\\r\\n        <p-checkbox formControlName=\\\"shareToEveryone\\\" binary=\\\"true\\\" label=\\\"Everyone\\\">\\r\\n        </p-checkbox>\\r\\n      </div>\\r\\n-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row pull-right \\\">\\r\\n      <button icon=\\\"pi pi-check\\\" label=\\\"Share\\\" style=\\\"margin:3px \\\" class=\\\"create-profile\\\" type=\\\"button\\\"\\r\\n        (click)=\\\"shareSharedPreference()\\\" [disabled]=\\\"!(preferenceForm.valid)\\\" pButton></button>\\r\\n      <button icon=\\\"pi pi-times\\\" (click)=\\\"closeDialog()\\\" style=\\\"margin:3px\\\" label=\\\"Cancel\\\" type=\\\"button\\\" pButton\\r\\n        class=\\\"create-profile\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { Router } from '@angular/router';\r\nimport { UtilService } from 'app/utils/utilService';\r\nimport { profile } from 'app/profile/profile';\r\n\r\n@Component({\r\n  selector: 'app-share-preferences',\r\n  templateUrl: './share-preferences.component.html',\r\n  styleUrls: ['./share-preferences.component.css']\r\n})\r\nexport class SharePreferencesComponent implements OnInit {\r\n\r\n  @Input() selectedProfile;\r\n  preferenceForm: FormGroup;\r\n  listOfUsersToShareEveryone = [\r\n    'chadav',\r\n    'sharmaan'\r\n  ]\r\n  @Output() closeDialogBox = new EventEmitter<boolean>();\r\n\r\n  constructor(private profileService: ProfileService, private router: Router, private builder: FormBuilder, private utilService: UtilService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.preferenceForm = this.builder.group({\r\n      userName: ['', [Validators.required]],\r\n      shareToEveryone: [''],\r\n    });\r\n\r\n    this.preferenceForm.controls.shareToEveryone.valueChanges.subscribe(value => {\r\n      if (value) {\r\n        this.preferenceForm.controls.userName.clearValidators();\r\n        this.preferenceForm.controls.userName.reset();\r\n        this.preferenceForm.controls.userName.setErrors(null);\r\n        this.preferenceForm.updateValueAndValidity();\r\n      } else {\r\n        this.preferenceForm.controls.userName.setValidators([Validators.required]);\r\n        this.preferenceForm.controls.userName.setErrors({ 'required': true });\r\n        this.preferenceForm.updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n\r\n  shareSharedPreference() {\r\n    let sharedItemsCount = 0;\r\n    let updatedSelectedProfile = [];\r\n    this.selectedProfile.forEach(item => {\r\n      if (updatedSelectedProfile.find(profileData => profileData.data.preferenceName === item.data.preferenceName)) {\r\n        updatedSelectedProfile.find(profileData => profileData.data.preferenceName === item.data.preferenceName).data.companyName = updatedSelectedProfile.find(profileData => profileData.data.preferenceName === item.data.preferenceName).data.companyName + '$' + item.data.companyName;\r\n      } else {\r\n        updatedSelectedProfile.push(item);\r\n      }\r\n    })\r\n    updatedSelectedProfile.forEach(item => {\r\n      const reqData = [];\r\n /*     if (this.preferenceForm.controls.userName) {\r\n        this.listOfUsersToShareEveryone.forEach(user => {\r\n          reqData.push({\r\n            termName: item.data.termName,\r\n            companyName: item.data.companyName,\r\n            preName: item.data.preferenceName + ' (' + item.data.userid + ')',\r\n            userid: user\r\n          });\r\n        });\r\n      } else {  */\r\n        this.preferenceForm.value.userName.split(';').forEach(user => {\r\n          reqData.push({\r\n            termName: item.data.termName,\r\n            companyName: item.data.companyName,\r\n            preName: item.data.preferenceName + ' (' + item.data.userid + ')',\r\n            userid: user\r\n          });\r\n        });\r\n  //    }\r\n      this.profileService.saveSharedPreference(item.data.code, item.data.userid, reqData).subscribe((response) => {\r\n        sharedItemsCount = sharedItemsCount + 1;\r\n        if (sharedItemsCount === updatedSelectedProfile.length) {\r\n          this.closeDialogBox.emit(true);\r\n        }\r\n      },\r\n        (error) => console.log(error)\r\n      )\r\n    })\r\n  }\r\n\r\n  closeDialog() {\r\n    this.closeDialogBox.emit(false);\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UtilService } from '../utils/utilService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompleteCompanylistResolverService implements Resolve<any> {\r\n  completeCompanyList: Observable<any>;\r\n  constructor(private utilService: UtilService ) { }\r\n\r\n  resolve(): Observable<any> {\r\n    if (this.completeCompanyList) {\r\n      return this.getCompleteCompanyList();\r\n    } else {\r\n      this.completeCompanyList = this.utilService.getCompleteCompanyList();\r\n      return this.completeCompanyList;\r\n    }\r\n  }\r\n\r\n  getCompleteCompanyList(): Observable<any> {\r\n    return this.completeCompanyList;\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UtilService } from '../utils/utilService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TermlistResolverService implements Resolve<any> {\r\n  termRuleList: Observable<any>;\r\n  constructor(private utilService: UtilService ) { }\r\n\r\n  resolve(): Observable<any> {\r\n    if (this.termRuleList) {\r\n      return this.getTermRuleList();\r\n    } else {\r\n      this.termRuleList = this.utilService.getTermRuleList();\r\n      return this.termRuleList;\r\n    }\r\n  }\r\n  getTermRuleList() {\r\n    return this.termRuleList;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { HomeService } from '../home/homeService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TermRuleCategoryListResolverService implements Resolve<any> {\r\n  termRuleCategoryList: Observable<any>;\r\n  constructor(private homeService: HomeService ) { }\r\n\r\n  resolve(): Observable<any> {\r\n    if (this.termRuleCategoryList) {\r\n      return this.getTermRuleCategoryList();\r\n    } else {\r\n      this.termRuleCategoryList = this.homeService.getTermRuleCategoryList();\r\n      return this.termRuleCategoryList;\r\n    }\r\n  }\r\n  getTermRuleCategoryList() {\r\n    return this.termRuleCategoryList;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, FormControl, AbstractControl } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\nimport * as _ from 'lodash';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  public static logOutEventEmitter: EventEmitter<boolean> = new EventEmitter();\r\n  public static systemErrorMsgEventEmitter: EventEmitter<string> = new EventEmitter();\r\n  public static progressSpinnerEventEmitter: EventEmitter<boolean> = new EventEmitter();\r\n  public static stringBetweenCurlyBracesExtractor: any = CommonService.extract(['{', '}']);\r\n  public messages: any[];\r\n  public static sharedPreferenceNotification: EventEmitter<number> = new EventEmitter();\r\n  public static isTourGuideStart: Subject<any> = new Subject<any>();\r\n  public static exportTabIndex: Subject<any> = new Subject<any>();\r\n  constructor(private formBuilder: FormBuilder, private primeNgMessageService: MessageService) {\r\n    this.messages = [];\r\n  }\r\n\r\n  public static setTourGuideStart(value) {\r\n    CommonService.isTourGuideStart.next(value);\r\n  }\r\n\r\n  public static setExportTabIndex(value) {\r\n    CommonService.exportTabIndex.next(value);\r\n  }\r\n\r\n  public static emitsharedPreferenceNotificationEvent(number) {\r\n    CommonService.sharedPreferenceNotification.emit(number);\r\n  }\r\n\r\n  public static systemErrorMsgEvent(errorMsg: string) {\r\n    CommonService.systemErrorMsgEventEmitter.emit(errorMsg);\r\n  }\r\n\r\n  public static progressSpinnerEvent(showOrHideFlag: boolean) {\r\n    CommonService.progressSpinnerEventEmitter.emit(showOrHideFlag);\r\n  }\r\n\r\n  public static getValidLength(formValueArray: any[]) {\r\n    let length = 0;\r\n    formValueArray.forEach((form) => {\r\n      if (form.uiAction !== 'delete') {\r\n        length++;\r\n      }\r\n    });\r\n    return length;\r\n  }\r\n\r\n  public static padNumber(element, length): string {\r\n    let elementString = element.toString();\r\n    if (elementString.length === length) {\r\n      elementString = '0' + element;\r\n    }\r\n    return elementString;\r\n  }\r\n\r\n  private static convertToCSV(objArray) {\r\n    const array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    for (let i = 0; i < array.length; i++) {\r\n      let line = '';\r\n      for (const index in array[i]) {\r\n        if (array[i].hasOwnProperty(index)) {\r\n          if (line !== '') {\r\n            line += ',';\r\n          }\r\n          line += array[i][index];\r\n        }\r\n      }\r\n      str += line + '\\r\\n';\r\n    }\r\n    return str;\r\n  }\r\n\r\n  public static exportCSVFile(headers, items, fileTitle) {\r\n    if (headers) {\r\n      items.unshift(headers);\r\n    }\r\n    const jsonObject = JSON.stringify(items);\r\n    const csv = this.convertToCSV(jsonObject);\r\n    const exportedFilename = fileTitle + '.csv' || 'export.csv';\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, exportedFilename);\r\n    } else {\r\n      const link = document.createElement('a');\r\n      if (link.download !== undefined) { // feature detection\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', exportedFilename);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static systemErrorHandler(processMsg: string, err: any) {\r\n    CommonService.progressSpinnerEvent(false);\r\n    const customErrorMessage = 'Sorry, something went wrong with the network connection. '\r\n      + processMsg + '. Please try again later. ' +\r\n      'If you continue to get this error, please contact Tech Support at 1-800-952-8889.';\r\n    CommonService.systemErrorMsgEvent(customErrorMessage);\r\n    console.error(err);\r\n  }\r\n\r\n  public static convertArrayToOptionList(arrayOfStrings: string[]): any[] {\r\n    const optionsList = [];\r\n    arrayOfStrings.forEach((entry: string) => {\r\n      const optionEntry = { label: entry, value: entry };\r\n      optionsList.push(optionEntry);\r\n    });\r\n    return optionsList;\r\n  }\r\n\r\n  public static mergeArrays(existingArray: any[], newEntriesArray: any[], placement: string, currentIndex: number) {\r\n    const selectedIndex = (placement === 'After') ? currentIndex : currentIndex - 1;\r\n    existingArray = _.cloneDeep(existingArray.splice(selectedIndex, 0, ...newEntriesArray));\r\n  }\r\n\r\n  public static compareDate(arg1: Date, arg2: Date): number {\r\n    const date1 = new Date(arg1);\r\n    const date2 = new Date(arg2);\r\n    date1.setHours(12, 0, 0, 0);\r\n    date2.setHours(12, 0, 0, 0);\r\n    const sameDay = date1.getTime() === date2.getTime();\r\n    if (sameDay) { return 0; }\r\n    if (date1 > date2) { return 1; }\r\n    if (date1 < date2) { return -1; }\r\n  }\r\n\r\n  public static extract([beg, end]) {\r\n    const matcher = new RegExp(`${beg}(.*?)${end}`, 'gm');\r\n    const normalise = (str) => str.slice(beg.length, end.length * -1);\r\n    return function (str) {\r\n      return str.match(matcher).map(normalise);\r\n    };\r\n  }\r\n\r\n  public isViewOnly() {\r\n    return false;\r\n  }\r\n\r\n  public cloneFormGroup(control: AbstractControl) {\r\n    if (control instanceof FormControl) {\r\n      return this.formBuilder.control(control.value);\r\n    } else if (control instanceof FormGroup) {\r\n      const copy = this.formBuilder.group({});\r\n      Object.keys(control.getRawValue()).forEach(key => {\r\n        copy.addControl(key, this.cloneFormGroup(control.controls[key]));\r\n      });\r\n      return copy;\r\n    } else if (control instanceof FormArray) {\r\n      const copy = this.formBuilder.array([]);\r\n      control.controls.forEach(controlEntry => {\r\n        copy.push(this.cloneFormGroup(controlEntry));\r\n      });\r\n      return copy;\r\n    }\r\n  }\r\n\r\n  public getNextValidIndex(formValueArray: any[]) {\r\n    let currentIndex = 0;\r\n    if (formValueArray.length > 0) {\r\n      currentIndex = formValueArray.length - 1;\r\n      while (formValueArray[currentIndex].uiAction === 'delete' && currentIndex > 0) {\r\n        currentIndex = currentIndex - 1;\r\n      }\r\n    }\r\n    return currentIndex;\r\n  }\r\n\r\n  public getAllErrors(form: FormGroup | FormArray): { [key: string]: any; } | null {\r\n    let hasError = false;\r\n    const result = Object.keys(form.controls).reduce((errorObject, key) => {\r\n      const control = form.get(key);\r\n      let errors;\r\n      if (control instanceof FormGroup || control instanceof FormArray) {\r\n        if (control instanceof FormArray && control.controls.length === 0) {\r\n          // Handling error for empty form array (when no offers are added to form)\r\n          errors = control.errors;\r\n        } else if (control instanceof FormArray) {\r\n          const formArrayError: any = {};\r\n          if (control.errors) {\r\n            formArrayError.arrError = control.errors;\r\n          }\r\n          const arrEntriesErrors = this.getAllErrors(control);\r\n          if (arrEntriesErrors) {\r\n            formArrayError.arrEntriesErrors = arrEntriesErrors;\r\n          }\r\n          if (formArrayError.arrError || formArrayError.arrEntriesErrors) {\r\n            errors = formArrayError;\r\n          }\r\n        } else {\r\n          errors = this.getAllErrors(control);\r\n        }\r\n      } else {\r\n        errors = control.errors;\r\n      }\r\n      if (errors) {\r\n        errorObject[key] = errors;\r\n        hasError = true;\r\n      }\r\n      return errorObject;\r\n    }, {} as { [key: string]: any; });\r\n    return hasError ? result : null;\r\n  }\r\n\r\n\r\n  public showGrowlConfirmMessage(message: any) {\r\n    this.primeNgMessageService.clear();\r\n    this.primeNgMessageService.add(message);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private MAXDSAPPLOGINURL: string = \"/api/isValidUser\";\r\n  // private MAXDSAPPLOGINURL: string = \"https://localhost:18081/api/isValidUser\";\r\n\r\n  fullname: string;\r\n  userFullName: BehaviorSubject<string>;\r\n  userId: string;\r\n  private currentUserSubject: BehaviorSubject<String>;\r\n  public currentUser: Observable<String>;\r\n\r\n  constructor(private http: Http) {\r\n    this.userFullName = new BehaviorSubject(this.fullname);\r\n    this.currentUserSubject = new BehaviorSubject<String>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): String {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  loginApp(username: string, password: string): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"access-control-allow-origin\", \"*\");\r\n    const body = JSON.stringify({ username: username, password: password });\r\n    return this.http.post(`${this.MAXDSAPPLOGINURL}`, body, {\r\n      headers: headers\r\n    }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        this.fullname = data.resultObject.fullUserName;\r\n\r\n        localStorage.setItem(\"userName\", data.resultObject.fullUserName);\r\n        localStorage.setItem(\"userid\", data.resultObject.userid);\r\n        localStorage.setItem(\"userEmail\", data.resultObject.email);\r\n        this.userFullName = new BehaviorSubject(this.fullname);\r\n        localStorage.setItem('currentUser', JSON.stringify(this.fullname));\r\n        localStorage.setItem('user', JSON.stringify(data.resultObject.userid));\r\n        // this.currentUserSubject.next(this.fullname);\r\n        localStorage.setItem(\"userFullName\", data.resultObject.fullUserName)\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('user');\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.currentUserSubject = null;\r\n    // this.currentUserValue = null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { profile } from 'app/profile/profile';\r\nimport { MappedEntity } from 'app/domain/mappedEntity';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  constructor(private http: Http, private login: LoginService) {\r\n  }\r\n\r\n  // private TERMNAMESURL: string = \"https://localhost:18081/api/termNamesListApi\";\r\n  // private ENTITIESLISTURL: string = \"https://localhost:18081/EntitiesList\";\r\n  // private LISTPREFERENCESURL: string = \"https://localhost:18081/listPreferences\";\r\n  // private SAVEPROFILEURL: string = \"https://localhost:18081/savePreferences\";\r\n  // private DELETEPREFERENCESURL: string = \"https://localhost:18081/deletePreferences\";\r\n  // private PROCESSPREFERENCESURL: string = \"https://localhost:18081/api/TermRule/ProcessRuleForEntity/\";\r\n  // private CLEARPREFERENCESURL: string = \"https://localhost:18081/clearPreferences\";\r\n  // private PROCESSALLPREFERENCESURL: string = \"https://localhost:18081/processAllTermRules\"\r\n  //  private TERMMANAGERRESULTURL: string = \"https://localhost:18081/api/TermResultsFor\"\r\n  //  private UPDATEDPROFILEURL: string = \"https://localhost:18081/updateProfile\"\r\n  //  private PROCESSMULTIENTITIESPREFERENCESURL: string = \"https://localhost:18081/processMultiEntitiesTermRules\"\r\n  //  private SHOWRESOLVEDDATAURL: string = \"https://localhost:18081/api/MappedEntitiesForCriteria\";\r\n\r\n\r\n  private TERMNAMESURL: string = \"/api/termNamesListApi\";\r\n  private ENTITIESLISTURL: string = \"/EntitiesList\";\r\n  private LISTPREFERENCESURL: string = \"/listPreferences\";\r\n  private LISTSHAREDPREFERENCESURL: string = \"/listSharedPreferences\";\r\n  private SAVEPROFILEURL: string = \"/savePreferences\";\r\n  private SAVESHAREDPREFERENCES: string = \"/saveSharedPreferences\";\r\n  private DELETEPREFERENCESURL: string = \"/deletePreferences\";\r\n  private ACCEPTSHAREDPREFERENCESURL: string = \"/acceptSharedPreferences\";\r\n  private DELETESHAREDPREFERENCESURL: string = \"/deleteSharedPreferences\";\r\n  private PROCESSPREFERENCESURL: string = \"/api/TermRule/ProcessRuleForEntity/\";\r\n  private CLEARPREFERENCESURL: string = \"/clearPreferences\";\r\n  private PROCESSALLPREFERENCESURL: string = \"/processAllTermRules\"\r\n  private TERMMANAGERRESULTURL: string = \"/api/TermResultsFor\"\r\n  private UPDATEDPROFILEURL: string = \"/updateProfile\"\r\n  private PROCESSMULTIENTITIESPREFERENCESURL: string = \"/processMultiEntitiesTermRules\"\r\n  private SHOWRESOLVEDDATAURL: string = \"/api/MappedEntitiesForCriteria\";//api/MappedEntitiesForCriteria\r\n  //private SHOWRESOLVEDDATAURL: string = \"/api/UnMappedEntitiesForCriteria\";\r\n\r\n  //for Admin page\r\n  private REPORTDATA = \"/api/getReportData\";\r\n\r\n  processAllTerms(termIds: any[]): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"access-control-allow-origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.PROCESSALLPREFERENCESURL + \"/\" + userid, termIds, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  processTerms(termId: string, entityId: string, processId: string): Observable<any> {\r\n    const headers = new Headers();\r\n    const body = JSON.stringify({ termId: termId, entityId: entityId, processId: processId });\r\n    headers.append('Content-Type', 'application/json');\r\n    console.log(body);\r\n    return this.http.put(`${this.PROCESSPREFERENCESURL}`, body, {\r\n      headers: headers\r\n    }).pipe(map((data: Response) => {\r\n      const res = data;\r\n      return res;\r\n    }\r\n    ))\r\n  }\r\n\r\n\r\n  processMultiEntitiesTerms(termId: string, entityId: string, processId: string): Observable<any> {\r\n    const headers = new Headers();\r\n    const body = JSON.stringify({ termId: termId, entityId: entityId, processId: processId, userid: localStorage.getItem(\"userid\") });\r\n    headers.append('Content-Type', 'application/json');\r\n    console.log(body);\r\n    return this.http.post(`${this.PROCESSMULTIENTITIESPREFERENCESURL}`, body, {\r\n      headers: headers\r\n    }).pipe(map((data: Response) => {\r\n      const res = data;\r\n      return res;\r\n    }\r\n    ))\r\n  }\r\n\r\n\r\n  getTermMngrResults(termName: string, entityId: string): Observable<any> {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.TERMMANAGERRESULTURL + \"/\" + termName + \"/\" + entityId}`, {\r\n      headers: headers\r\n    }).pipe(map((data: Response) => data.json()))\r\n  }\r\n\r\n  getTermNames(): Observable<any> {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.TERMNAMESURL}`, {\r\n      headers: headers\r\n    }).pipe(map((data: Response) => data.json()))\r\n  }\r\n\r\n  getCoompanyNames(): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    return this.http.get(this.ENTITIESLISTURL, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n  getAllProfiles(): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.get(this.LISTPREFERENCESURL + \"/\" + userid, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n  getAllSharedProfiles(): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.get(this.LISTSHAREDPREFERENCESURL + \"/\" + userid, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n  profile: profile = new profile();\r\n  savePreference(termName: string, companyName: string, preName: string): Observable<any> {\r\n    console.log(companyName + termName + preName);\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    this.profile.termName = termName;\r\n    this.profile.companyName = companyName;\r\n    this.profile.preName = preName;\r\n    this.profile.userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.SAVEPROFILEURL, this.profile, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  saveSharedPreference(code: string, userid: string, reqData): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    return this.http.post(this.SAVESHAREDPREFERENCES + \"/\" + code + \"/\" + userid, reqData, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  updateProfile: profile = new profile();\r\n  updatePreference(termName: string, companyName: string, preName: string, processId: number): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    this.updateProfile.termName = termName;\r\n    this.updateProfile.companyName = companyName;\r\n    this.updateProfile.preName = preName;\r\n    this.updateProfile.profileId = processId;\r\n    this.updateProfile.userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.UPDATEDPROFILEURL, this.updateProfile, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n  deletePrefernces(preferncesIds: any[]): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.DELETEPREFERENCESURL + \"/\" + userid, preferncesIds, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  deleteSharedPrefernces(preferncesIds: any[]): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.DELETESHAREDPREFERENCESURL + \"/\" + userid, preferncesIds, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  acceptSharedPrefernces(rowData): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.ACCEPTSHAREDPREFERENCESURL + \"/\" + userid + \"/\" + rowData.preferenceName + \"/\" + rowData.code, [rowData.processId], { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  clearPrefernces(preferncesIds: any[]): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    let userid = localStorage.getItem(\"userid\");\r\n    return this.http.post(this.CLEARPREFERENCESURL + \"/\" + userid, preferncesIds, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  showReslovedData(mappedEntity: MappedEntity): Observable<any> {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    return this.http.put(this.SHOWRESOLVEDDATAURL, mappedEntity, { headers: headers }).pipe(map(\r\n      (response: Response) => {\r\n        const data = response.json();\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  // For Admin page\r\n  getReportData(): Observable<any> {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.REPORTDATA}`, {\r\n      headers: headers\r\n    }).pipe(map((data: Response) => data.json()))\r\n  }\r\n}\r\n","module.exports = \".ui-paginator {\\r\\n\\ttext-align: right ! important;\\r\\n}\\r\\n\\r\\nui-paginator-top {\\r\\n\\ttext-align: right ! important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhdHVzL3N0YXR1cy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyw2QkFBNkI7QUFDOUI7O0FBRUE7Q0FDQyw2QkFBNkI7QUFDOUIiLCJmaWxlIjoic3JjL2FwcC9zdGF0dXMvc3RhdHVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51aS1wYWdpbmF0b3Ige1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0ICEgaW1wb3J0YW50O1xyXG59XHJcblxyXG51aS1wYWdpbmF0b3ItdG9wIHtcclxuXHR0ZXh0LWFsaWduOiByaWdodCAhIGltcG9ydGFudDtcclxufSJdfQ== */\"","module.exports = \"<p-confirmDialog [style]=\\\"{width: '50vw'}\\\" [baseZIndex]=\\\"10000\\\"></p-confirmDialog>\\r\\n<div>\\r\\n    <div style=\\\"margin-bottom: 15px !important;\\\">\\r\\n        <button pButton type=\\\"button\\\" label=\\\"Refresh Status\\\" icon=\\\"pi pi-refresh\\\" style=\\\"margin-bottom: 5px;\\\"\\r\\n            class=\\\"ui-button-rounded ui-button-success pull-left\\\" (click)=\\\"refreshLoadStatus()\\\"\\r\\n            joyrideStep=\\\"refreshStatus\\\" title=\\\"Refresh Status\\\"\\r\\n            text=\\\"By clicking the “Refresh Status” button, the user will refresh the processing status of the displayed Term ID’s\\\"></button>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <button pButton type=\\\"button\\\" label=\\\"Cancel Processing\\\" icon=\\\"pi pi-times\\\" tyle=\\\"margin-bottom: 5px;\\\"\\r\\n            class=\\\"ui-button-rounded ui-button-danger pull-left\\\" (click)=\\\"cancelProcessing()\\\"\\r\\n            joyrideStep=\\\"cancelProcessing\\\" title=\\\"Cancel Processing\\\"\\r\\n            text=\\\"By clicking the “Cancel Processing” button, the user will cancel any currently processing terms.\\\"></button>\\r\\n\\r\\n    </div>\\r\\n    <div style=\\\"padding: 10px;\\\">\\r\\n        <p-table #statusTable [columns]=\\\"statusCols\\\" [value]=\\\"statusNames\\\" [responsive]=\\\" true\\\"\\r\\n            [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\"\\r\\n            [reorderableColumns]=\\\"true\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"termId\\\" dataKey=\\\"termId\\\"\\r\\n            (onRowSelect)=\\\"onRowClick($event)\\\" (onRowUnselect)=\\\"onRowUnClick($event)\\\" p-dataTable\\r\\n            exportFilename=\\\"statusData\\\" paginatorPosition=\\\"top\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n            paginatorTemplate=\\\"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {Exporters}\\\"\\r\\n            [showCurrentPageReport]=\\\"true\\\" (onPage)=\\\"pagenation($event)\\\" (onFilter)=\\\"updatePagenationCount($event)\\\"\\r\\n            currentPageReportTemplate=\\\"Showing {{first}} of{{total}}\\\">\\r\\n\\r\\n            <!--<ng-template pTemplate=\\\"caption\\\" style=\\\"height: 50px !important;\\\">\\r\\n            Total number of Records: {{statusTable.totalRecords}}\\r\\n            currentPageReportTemplate=\\\"{first} to {last} of {totalRecords}\\\"\\r\\n            <p-paginator [rows]=\\\"10\\\" totalRecords=\\\"100\\\" paginatorPosition=\\\"top\\\" (onPageChange)=\\\"paginate($event)\\\"\\r\\n                [showCurrentPageReport]=\\\"true\\\" currentPageReportTemplate=\\\"{first} to {last} of {totalRecords}\\\">\\r\\n            </p-paginator>\\r\\n\\r\\n        </ng-template>-->\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                        <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                        <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                            <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                                [value]=\\\"statusTable.filters[col.field] ? statusTable.filters[col.field].value : ''\\\"\\r\\n                                (input)=\\\"statusTable.filter($event.target.value, col.field, col.filterMatchMode); \\r\\n                            onFilter($event.target.value, col.field, col.filterMatchMode);updatePagenationCount($event)\\\"\\r\\n                                style=\\\"width: 150px\\\">\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\r\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" style=\\\"word-break:break-all\\\">\\r\\n                        <span *ngIf=\\\"col.header !=='Last Modified'\\\" pTooltip=\\\"{{rowData[col.field] }}\\\">\\r\\n                            {{rowData[col.field]}}</span>\\r\\n                        <span *ngIf=\\\"col.header =='Last Modified'\\\"\\r\\n                            pTooltip=\\\"{{rowData[col.field] | date :'h:mm:ss a'}}\\\">\\r\\n                            {{rowData[col.field] | date :'MM/dd/yyyy HH:mm:ss'}} </span>\\r\\n\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n\\r\\n        </p-table>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { StatusService } from './statusService';\r\nimport { Status } from '../domain/status';\r\nimport { UtilService } from 'app/utils/utilService';\r\nimport { ConfirmationService, Message } from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './status.html',\r\n  styleUrls: ['./status.css']\r\n})\r\nexport class StatusComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  statusNumber: number = 0;\r\n  statusCols: any;\r\n  cols: any[];\r\n\r\n  statusNames: any[];\r\n\r\n  first: any = 0;\r\n  total: any = 0;\r\n  row: any = 10;\r\n\r\n  constructor(private statusService: StatusService, private router: Router, private status: Status, private utilService: UtilService, private confirmationService: ConfirmationService) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  msgs: Message[] = [];\r\n  interval: any;\r\n  cancelProcessing() {\r\n\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to cancel all pending processing items?',\r\n      header: 'Process Term',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.msgs = [];\r\n\r\n        this.msgs = [{ severity: 'info', summary: 'Cancelling Process All Terms', detail: '' }]\r\n        this.utilService.cancelProcessing().subscribe((response) => {\r\n          if (response) {\r\n            this.msgs = [{ severity: 'info', summary: 'All pending processing has been canceled successfully', detail: '' }];\r\n\r\n          }\r\n\r\n        })\r\n      },\r\n      reject: () => {\r\n      }\r\n    });\r\n  }\r\n  pagenation(value) {\r\n    console.log(value);\r\n    let initialCount = value.rows;\r\n    value.first = (value.first + initialCount);\r\n    this.first = value.first;\r\n    this.row = (this.statusNames.length - value.first);\r\n    this.total = this.statusNames.length;\r\n  }\r\n\r\n  updatePagenationCount(event) {\r\n    //this.statusNames.length; = \r\n    if (event.filteredValue != this.statusNames.length) {\r\n      let data = event.filteredValue;\r\n      console.log(data.length + \" :: \" + this.statusNames.length);\r\n      this.first = data.length > 10 ? 10 : data.length;\r\n      this.row = data.length > 10 ? (data.length / 10) : data.length;\r\n      this.total = data.length;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('statusServiceComponent : calling ngOnInit...');\r\n    this.statusCols = this.status.statusCols();\r\n    this.interval = setInterval(() => { \r\n          this.loadProcessStatus(); \r\n      }, 10000);\r\n         this.loadProcessStatus();\r\n  }\r\n  refreshLoadStatus() {\r\n    this.loadProcessStatus();\r\n  }\r\n  loadProcessStatus() {\r\n    this.statusService.loadProcessStatus().subscribe((response) => {\r\n      this.statusNames = [];\r\n      response.content.forEach(status => {\r\n        this.statusNames.push({\r\n          termId: status.termId, userName: status.userName, logStatus: status.logStatus, noOfEntitiesBeingProcessed: status.noOfEntitiesBeingProcessed,\r\n          lastModified: status.lastModified, processingTimeInSec: status.processingTimeInSec, description: status.description\r\n        })\r\n      })\r\n      console.log(response);\r\n      this.first = 10;\r\n      this.row = (this.statusNames.length - this.first);\r\n      this.total = this.statusNames.length;\r\n    })\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n\r\n}","\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StatusService {\r\n    // private PROCESSSTATUSURL: string = https://localhost:18081/api/ProcessingLogList/1000\r\n    private PROCESSSTATUSURL: string = \"/api/ProcessingLogList/1000\";\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    loadProcessStatus(): Observable<any> {\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get(`${this.PROCESSSTATUSURL}`, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n}\r\n\r\n","module.exports = \"<div>\\r\\n<form class=\\\"form-horizontal\\\">\\r\\n\\r\\n    <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isFeedbackSubmitted\\\">\\r\\n        Thank you for your Feedback\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"issueType\\\" class=\\\"col-sm-1 control-label\\\">Type</label>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <select id=\\\"issueType\\\" class=\\\"form-control btn btn-default dropdown-toggel\\\" [(ngModel)]=\\\"feedBackObj.issue\\\"\\r\\n                name=\\\"issue\\\" joyrideStep=\\\"type\\\" title=\\\"Type\\\" [stepContent]=\\\"typeContent\\\">\\r\\n                <option selected> Issue </option>\\r\\n                <option> feature request</option>\\r\\n                <option> Others (eg : User Interface)</option>\\r\\n\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <label for=\\\"category\\\" class=\\\"col-sm-1 control-label\\\">category</label>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <select id=\\\"category\\\" class=\\\"form-control btn btn-default dropdown-toggel\\\"\\r\\n                [(ngModel)]=\\\"feedBackObj.category\\\" name=\\\"category\\\" joyrideStep=\\\"category\\\" title=\\\"Category\\\"\\r\\n                [stepContent]=\\\"categoryContent\\\">\\r\\n                <option selected> Home</option>\\r\\n                <option> Export</option>\\r\\n                <option> Accuracy test</option>\\r\\n                <option>Process All Terms</option>\\r\\n                <option selected> Manage Term Maps</option>\\r\\n                <option> Status</option>\\r\\n                <option>Administration</option>\\r\\n                <option selected> Derivation Trail</option>\\r\\n                <option> Profile</option>\\r\\n                <option> Processing Status</option>\\r\\n                <option>Others</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n        <label for=\\\"name\\\" class=\\\"col-sm-1 control-label\\\"> <span style=\\\"color: red;\\\">*</span>Name</label>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <input type=\\\"text\\\" for=\\\"name\\\" class=\\\"form-control \\\" id=\\\"name\\\" joyrideStep=\\\"name\\\" title=\\\"Name\\\"\\r\\n                text=\\\"The name field is automatically populated with the user's AD login name\\\"\\r\\n                [(ngModel)]=\\\"feedBackObj.name\\\" name=\\\"name\\\" readonly>\\r\\n        </div>\\r\\n        <label for=\\\"email\\\" class=\\\"col-sm-1 control-label\\\">Email</label>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <input type=\\\"text\\\" for=\\\"email\\\" joyrideStep=\\\"email\\\" title=\\\"Email\\\"\\r\\n                text=\\\"The email field is automatically populated with the user's email based on AD login information \\\"\\r\\n                class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"feedBackObj.email\\\" name=\\\"email\\\">\\r\\n\\r\\n        </div>\\r\\n        <label for=\\\"phone\\\" class=\\\"col-sm-1 control-label\\\">Phone</label>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n            <input type=\\\"text\\\" joyrideStep=\\\"phone\\\" title=\\\"Phone\\\" text=\\\"The phone field is where a user can leave a phone number to be contacted.\\r\\n            This field is optional.\\r\\n            \\\" for=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"feedBackObj.phone\\\" name=\\\"phone\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <span class=\\\"col-sm-1\\\"></span>\\r\\n    <span *ngIf=\\\"showName\\\" class=\\\"col-sm-3 \\\">* Not a valid Name</span>\\r\\n    <span class=\\\"col-sm-4\\\"></span>\\r\\n    <span *ngIf=\\\"showEmail\\\" class=\\\"col-lg-3 \\\">* Not a valid Email</span>\\r\\n\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <label for=\\\"message\\\" class=\\\"col-sm-1 control-label\\\">Message</label>\\r\\n\\r\\n        <div class=\\\"col-sm-7\\\" style=\\\"text-align: center;\\\">\\r\\n\\r\\n            <textarea rows=\\\"10\\\" for=\\\"message\\\" joyrideStep=\\\"message\\\" title=\\\"Message\\\"\\r\\n                text=\\\"The message text box is where a user can enter their desired feedback for the system's management team. \\\"\\r\\n                class=\\\"form-control col-sm-12\\\" id=\\\"message\\\" cols=\\\"12\\\" [(ngModel)]=\\\"feedBackObj.message\\\"\\r\\n                name=\\\"message\\\"></textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br><br><br>\\r\\n    <div class=\\\"col-lg-12\\\" style=\\\"margin: 20px;\\\">\\r\\n\\r\\n        <span class=\\\"col-lg-4\\\"></span>\\r\\n        <button type=\\\"button\\\" id=\\\"submitfeedback\\\" class=\\\"col-lg-1 btn btn-primary btn-lg\\\" joyrideStep=\\\"sendFeedback\\\"\\r\\n            title=\\\"Send Feedback\\\"\\r\\n            text=\\\"Finally, once all fields require and desired fields have been completed, the user will click the 'Send Feedback' button to send their feedback to the management team. \\\"\\r\\n            style=\\\"margin-right:10px !important; width:200px !important\\\" (click)=\\\"sendFeedback()\\\">Send\\r\\n            Feedback</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <br><br><br>\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <p-table #feedbackTable [columns]=\\\"feedbackCols\\\" [value]=\\\"feedbackList\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                    [responsive]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\" [resizableColumns]=\\\"true\\\"\\r\\n                    [reorderableColumns]=\\\"true\\\"\\r\\n                    p-dataTable>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [style.width]=\\\"col.width\\\">\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn\\r\\n                          [pSortableColumn]=\\\"col.field\\\">\\r\\n                          <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                              ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                              ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\r\\n                            </p-sortIcon>\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                          <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                            <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                              [value]=\\\"feedbackTable.filters[col.field] ? feedbackTable.filters[col.field].value : ''\\\"\\r\\n                              (input)=\\\"feedbackTable.filter($event.target.value, col.field, 'contains');\\\"\\r\\n                              style=\\\"width: 100%;\\\">\\r\\n                          </div>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\">\\r\\n                            {{rowData[col.field]}}\\r\\n                             <!-- {{rowData.ISSUETYPE}} -->\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <!-- <ng-template pTemplate=\\\"loadingbody\\\" let-columns=\\\"columns\\\">\\r\\n                      <tr style=\\\"height:34px\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\" pTooltip=\\\"{{rowData[col.field]}}\\\">\\r\\n                          <div class=\\\"loading-text\\\"></div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template> -->\\r\\n                    <ng-template pTemplate=\\\"summary\\\">\\r\\n                      Total number of Records: {{feedbackTable.totalRecords}}\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<ng-template #typeContent>\\r\\n    <div>The type dropdown is where a user can select the type of the feedback they are wishing to submit.\\r\\n    </div>\\r\\n    <div>Options include: Issue, Feature Request, and Other (eg: User Interface)</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #categoryContent>\\r\\n    <div>\\r\\n        The Category dropdown is where a user can select the category of the feedback they are wishing to submit.\\r\\n    </div>\\r\\n    <div>\\r\\n        Options include all the MaxDS pages, curtain key functions, and other.\\r\\n    </div>\\r\\n</ng-template>\\r\\n</div>\\r\\n<div style=\\\"height: 40px;\\\">\\r\\n\\r\\n</div>\\r\\n<div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit, ViewChild } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { SubmitFeedbackService } from './submitFeedbackService';\r\nimport { LoginComponent } from 'app/login/login.component';\r\n\r\n@Component({\r\n  selector: 'submitFeedback-page',\r\n  templateUrl: './submitFeedback.html',\r\n  styleUrls: [`../app.component.css`],\r\n})\r\nexport class SubmitFeedbackComponent implements OnInit, OnDestroy {\r\n  private subscription: ISubscription[] = [];\r\n  navigationSubscription;\r\n  showName: boolean = false;\r\n  showEmail: boolean = false;\r\n  isFeedbackSubmitted: boolean = false;\r\n  feedbackList = [];\r\n  feedbackCols: any[] ;\r\n  feedBackObj = { \"issue\": \"Issue\", \"category\": \"Derivation Trail\", \"name\": \"\", \"email\": \"\", \"phone\": \"\", \"message\": \"\" };\r\n  constructor(private submitFeedbackService: SubmitFeedbackService, private router: Router) {\r\n    \r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    let userdata = {};\r\n    console.log('submitFeedbackComponent : calling ngOnInit...');\r\n    this.feedbackCol();\r\n    const res =  localStorage.getItem(\"isAdmin\");\r\n    if(res) {\r\n    this.feedbackList = await this.submitFeedbackService.getFeedback().toPromise();\r\n  } else{\r\n    this.feedbackList = await this.submitFeedbackService.getFeedbackByUser(localStorage.getItem(\"userName\")).toPromise();\r\n  }\r\n    this.feedBackObj.name = localStorage.getItem(\"userName\");\r\n    this.feedBackObj.email = localStorage.getItem(\"userEmail\");\r\n  }\r\n\r\n  async sendFeedback() {\r\n    console.log(this.feedBackObj);\r\n    this.submitFeedbackService.submitFeedback(this.feedBackObj).subscribe((response) =>\r\n      console.log(response));\r\n    this.isFeedbackSubmitted = true;\r\n    this.feedBackObj = { \"issue\": \"Issue\", \"category\": \"Derivation Trail\", \"name\": localStorage.getItem(\"userName\"), \"email\": localStorage.getItem(\"userEmail\"), \"phone\": \"\", \"message\": \"\" };\r\n    const res =  localStorage.getItem(\"isAdmin\");\r\n    if(res) {\r\n      this.feedbackList = await this.submitFeedbackService.getFeedback().toPromise();\r\n    } else{\r\n      this.feedbackList = await this.submitFeedbackService.getFeedbackByUser(localStorage.getItem(\"userName\")).toPromise();\r\n    }\r\n  }\r\n\r\n  feedbackCol() {\r\n    this.feedbackCols = [\r\n        { field: 'ISSUETYPE', header: 'Type'},\r\n        { field: 'CATEGORY', header: 'Category'},\r\n        { field: 'NAME', header: 'User Name'},\r\n        { field: 'EMAIL', header: 'Email'},\r\n        { field: 'PHONE', header: 'Phone' },\r\n        { field: 'MESSAGE', header: 'Message', width: '35%'},\r\n        { field: 'dtCreated', header: 'Created Date'}\r\n    ];\r\n    return this.feedbackCols;\r\n}\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.forEach(s => s.unsubscribe());\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}","\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubmitFeedbackService {\r\n    private FEEDBACKSUBMITURL: string = \"sendFeedback\";\r\n    private getFeedbackUrl: string = \"getFeedback\";\r\n    private getFeedbackByUserUrl: string = \"getFeedbackByUser\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    submitFeedback(feedback: any): Observable<any> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"access-control-allow-origin\", \"*\");\r\n        return this.http.post(this.FEEDBACKSUBMITURL, feedback, { headers: headers }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response\r\n                console.log(data);\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getFeedback() {\r\n        console.log('SubmitFeedback : getFeedback()...');\r\n        return this.http.get(`${this.getFeedbackUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getFeedbackByUser(username: string) {\r\n        console.log('SubmitFeedback : getFeedback()...');\r\n        return this.http.get(`${this.getFeedbackByUserUrl}?username=` + username).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n}","module.exports = \".panel{\\r\\n    height: 33%  !important;\\r\\n}\\r\\n.no-header .ui-panel-titlebar{\\r\\n    display: none !important;\\r\\n  }\\r\\ntd{\\r\\n   /* white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;*/\\r\\n    word-break: break-all;\\r\\n  }\\r\\ninput.customcheckbox{\\r\\n    width: 20px !important;\\r\\n    height: 20px !important;\\r\\n  }\\r\\n.derivationPopup {\\r\\n    width: 50vw;\\r\\n}\\r\\n@media screen and (max-width: 40em) {\\r\\n    .derivationPopup {\\r\\n        width: 75vw;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVybS1yZXN1bHRzL3Rlcm0tcmVzdWx0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSx3QkFBd0I7RUFDMUI7QUFFQTtHQUNDOzs2QkFFMEI7SUFDekIscUJBQXFCO0VBQ3ZCO0FBRUE7SUFDRSxzQkFBc0I7SUFDdEIsdUJBQXVCO0VBQ3pCO0FBR0Y7SUFDSSxXQUFXO0FBQ2Y7QUFFQTtJQUNJO1FBQ0ksV0FBVztJQUNmO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC90ZXJtLXJlc3VsdHMvdGVybS1yZXN1bHRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFuZWx7XHJcbiAgICBoZWlnaHQ6IDMzJSAgIWltcG9ydGFudDtcclxufVxyXG4ubm8taGVhZGVyIC51aS1wYW5lbC10aXRsZWJhcntcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIHRke1xyXG4gICAvKiB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyovXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgfVxyXG5cclxuICBpbnB1dC5jdXN0b21jaGVja2JveHtcclxuICAgIHdpZHRoOiAyMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDtcclxuICB9XHJcblxyXG5cclxuLmRlcml2YXRpb25Qb3B1cCB7XHJcbiAgICB3aWR0aDogNTB2dztcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDBlbSkge1xyXG4gICAgLmRlcml2YXRpb25Qb3B1cCB7XHJcbiAgICAgICAgd2lkdGg6IDc1dnc7XHJcbiAgICB9XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"col-lg-12 h-33 d-inline-block\\\" style=\\\" margin-bottom: 0px !important;\\\">\\r\\n    <div class=\\\"col-lg-12 \\\" style=\\\"white-space: nowrap;\\\">\\r\\n        <div class=\\\"col-lg-10 col-md-12 text-white\\\"\\r\\n            style=\\\"font-size: x-large;text-align: left !important; color: black;\\\">\\r\\n            <b style=\\\"color: black;\\\">{{termName}} for {{companyName}}</b>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-2 col-md-12 text-white\\\" style=\\\"text-align: right !important;\\\">\\r\\n\\r\\n            <button alt=\\\"Export Term Results to CSV.\\\" pButton type=\\\"submit\\\" label=\\\"Export to CSV\\\"\\r\\n                (click)=\\\"exportData(dt)\\\"></button>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-12 h-33 d-inline-block\\\">\\r\\n        <div class=\\\"col-lg-12 h-33 d-inline-block\\\"\\r\\n            style=\\\"text-align: left !important; margin-bottom: 0px !important; margin-top: 10px !important;\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"col-sm-1 form-check-input customcheckbox\\\" (click)=\\\"showAnnualData($event)\\\"\\r\\n                    [(ngModel)]=\\\"annualChecked\\\" style=\\\"margin:5px !important;\\\">\\r\\n                <label class=\\\"col-sm-1\\\" style=\\\"padding-top: 5px !important;\\\">Annual</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 row\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"col-sm-1 form-check-input customcheckbox\\\"\\r\\n                    (click)=\\\"showQuaterlyData($event)\\\" [(ngModel)]=\\\"quaterlyChecked\\\" style=\\\"margin:5px !important;\\\">\\r\\n                <label class=\\\"col-sm-1\\\" style=\\\"padding-top: 5px !important;\\\">Quarterly</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"col-sm-1 form-check-input customcheckbox\\\"\\r\\n                    (click)=\\\"showMissingProductData($event)\\\" [(ngModel)]=\\\"showMissPrdChecked\\\"\\r\\n                    style=\\\"margin:5px !important;\\\">\\r\\n                <label class=\\\"col-sm-11\\\" style=\\\" padding-top: 5px !important;\\\">Include Missing Periods</label>\\r\\n            </div>\\r\\n            <!--<p-checkbox (click)=\\\"showAnnualData($event)\\\" label=\\\"Annual\\\" name=\\\"annual\\\" [(ngModel)]=\\\"checked\\\">\\r\\n            </p-checkbox>\\r\\n            <span style=\\\"padding-right: 5%;\\\"></span>\\r\\n            <p-checkbox (click)=\\\"showQuaterlyData($event)\\\" label=\\\"Quarterly\\\"></p-checkbox>\\r\\n            <span style=\\\"padding-right: 5%;\\\"></span>\\r\\n            <p-checkbox (onChange)=\\\"showMissingProductData($event)\\\" label=\\\"Show Missing Products\\\"></p-checkbox>-->\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"padding: 0 30px 20px 30px;\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                <h3 style=\\\"text-align: center\\\"> {{range[0]}} - {{range[1]}} </h3>\\r\\n                <p-slider [(ngModel)]=\\\"range\\\" [min]=\\\"minRange\\\" [max]=\\\"maxRange\\\" [step]=\\\"1\\\" [range]=\\\"true\\\"\\r\\n                    (onChange)=\\\"yearChange($event)\\\"></p-slider>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n            <p-panel [transitionOptions]=\\\"'0ms'\\\">\\r\\n                <p-chart styleClass=\\\"col-lg-12\\\" type=\\\"bar\\\" [data]=\\\"annualdata\\\" height=\\\"300px\\\" [responsive]=\\\"true\\\" [options]=\\\"options\\\">\\r\\n                </p-chart>\\r\\n            </p-panel>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n            <p-panel [transitionOptions]=\\\"'0ms'\\\">\\r\\n                <p-chart styleClass=\\\"col-lg-12\\\" type=\\\"bar\\\" [data]=\\\"quaterlydata\\\" height=\\\"300px\\\" [responsive]=\\\"true\\\" [options]=\\\"quaterlyoptions\\\">\\r\\n                </p-chart>\\r\\n            </p-panel>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"col-lg-12\\\" style=\\\" margin-top: 10px !important;\\\">\\r\\n\\r\\n        <p-table class=\\\"col-lg-12\\\" #dt [columns]=\\\"cols\\\" [value]=\\\"termResults\\\" (onPage)=\\\"filterData($event)\\\"\\r\\n            (onFilter)=\\\"filterData($event)\\\" exportFilename=\\\"TermResultsData\\\" [(selection)]=\\\"selectedTermResults\\\">\\r\\n\\r\\n            <!--  <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-primary pull-right\\\" label=\\\"Export to CSV\\\" style=\\\"margin-left:8px\\\"\\r\\n                    (click)=\\\"exportData(dt)\\\">Export to CSV</button>\\r\\n            </ng-template>-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n\\r\\n\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of cols\\\" [ngStyle]=\\\"{'width': col.width}\\\" pResizableColumn pReorderableColumn\\r\\n                        [pSortableColumn]=\\\"col.field\\\">\\r\\n                        <div pTooltip=\\\"Click to sort {{col.header}}\\\">\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                                ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                                ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let col of cols\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                        <div *ngIf=\\\"col.field !== ''\\\">\\r\\n                            <input *ngSwitchCase=\\\"col.field\\\" pInputText type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                                [value]=\\\"dt.filters[col.field] ? dt.filters[col.field].value : ''\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode);\\r\\n                            onFilter($event.target.value, col.field, col.filterMatchMode);\\\" style=\\\"width: 100%\\\">\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-termResults>\\r\\n                <tr>\\r\\n                    <td *ngFor=\\\"let col of cols\\\">\\r\\n\\r\\n                        <span *ngIf=\\\"col.header==='Period'\\\"> {{termResults[col.field]}}{{termResults.FQ}}</span>\\r\\n                        <span *ngIf=\\\"col.header ==='Rank'\\\"> {{termResults[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='Value'\\\" style=\\\"float:right;\\\" > {{termResults[col.field] | number }}</span>\\r\\n                        <span *ngIf=\\\"col.header ==='Filing Date'\\\" >\\r\\n                            <u>\\r\\n                                <a *ngIf=\\\"termResults[col.field] != 0\\\" (click)=\\\"openTermLink(termResults)\\\"\\r\\n                                    style=\\\"cursor: pointer; color: blue;\\\"  pTooltip=\\\"Click to view processing result\\\">\\r\\n                                     {{termResults[col.field]}}\\r\\n                                </a>\\r\\n                            </u>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"col.header ==='Period Over Period Variance'\\\">\\r\\n                            {{getPercentage(termResults[col.field])}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='Year Over Year Variance'\\\"> {{getPercentage(termResults[col.field])}}\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"col.header ==='Expression'\\\"> {{termResults[col.field]}} </span>\\r\\n                        <span *ngIf=\\\"col.header==='Validation Messages'\\\"> {{termResults[col.field]}}</span>\\r\\n                        <span *ngIf=\\\"col.header==='Derivation Trails'\\\" (click)=\\\"showDerivationResults(termResults)\\\">\\r\\n                            <button pButton type=\\\"submit\\\" label=\\\"Show Derivation\\\"></button> </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <p-dialog header=\\\"Derivation Trail\\\" [(visible)]=\\\"display\\\" [style]=\\\"{width: '70vw',overflow:'auto'}\\\"\\r\\n        [draggable]=\\\"true\\\" [maximizable]=\\\"true\\\" [resizable]=\\\"true\\\">\\r\\n\\r\\n        <p-table #drt [value]=\\\"derivationList\\\">\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n                <h5>{{tableHeader}}</h5>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                    <th>Asset</th>\\r\\n                    <th>Value</th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-derivation>\\r\\n                <tr>\\r\\n                    <td><span> {{derivation.asset}}</span> </td>\\r\\n                    <td><span>{{derivation.value}} </span></td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n\\r\\n\\r\\n    </p-dialog>\\r\\n\"","import { Component, OnInit, ViewChild, Input, OnChanges } from '@angular/core';\r\nimport { ProfileService } from 'app/services/profile.service';\r\nimport { Router } from '@angular/router'\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n  selector: 'app-term-result',\r\n  templateUrl: './term-results.component.html',\r\n  styleUrls: ['./term-results.component.css']\r\n\r\n})\r\nexport class TermResultsComponent implements OnInit, OnChanges {\r\n\r\n  @ViewChild(Table) dt: Table;\r\n  @ViewChild(Table) drt: Table;\r\n  selectedTermResults: any[] = [];\r\n  @Input() state;\r\n\r\n\r\n  tableHeader: string = \"test\";\r\n  derivationList: any[];\r\n  minRange: number = (new Date()).getFullYear() - 4;\r\n  maxRange: number = (new Date()).getFullYear();\r\n  range: number[] = [(new Date()).getFullYear() - 4, (new Date()).getFullYear()];\r\n\r\n  annualdata: any;\r\n  quaterlydata: any;\r\n  options: any;\r\n  quaterlyoptions: any;\r\n  allTermResults: any[];\r\n  termResults: any[];\r\n  chartXdata: any[] = [];\r\n  chartYdata: any[] = [];\r\n  quaterlychartXdata: any[] = [];\r\n  quaterlychartYdata: any[] = [];\r\n  termName: string;\r\n  entityId: string;\r\n  companyName: string;\r\n  annualChecked: boolean = false;\r\n  quaterlyChecked: boolean = false;\r\n  showMissPrdChecked: boolean = false;\r\n\r\n\r\n  constructor(private profileService: ProfileService, private router: Router) {\r\n    if (this.router.getCurrentNavigation() && this.router.getCurrentNavigation().extras && this.router.getCurrentNavigation().extras.state) {\r\n      this.termName = this.router.getCurrentNavigation().extras.state.termName;\r\n      this.entityId = this.router.getCurrentNavigation().extras.state.entityId;\r\n      this.companyName = this.router.getCurrentNavigation().extras.state.companyName;\r\n    }\r\n    if (sessionStorage.getItem('home.range') !== null) {\r\n      this.range = JSON.parse(sessionStorage.getItem('home.range'));\r\n    }\r\n    this.termResults = [];\r\n    this.populateAnnualChartData();\r\n    this.populateQuaterlyChartData();\r\n  }\r\n\r\n  cols: any[];\r\n  exportColumns: any[];\r\n  display: boolean = false;\r\n\r\n  yearChange() {\r\n    const event = {\r\n      target: {\r\n        checked: this.showMissPrdChecked\r\n      }\r\n    }\r\n    //this.showMissingProductData(event);\r\n    this.getTermMngrResults();\r\n\r\n  }\r\n\r\n  showDerivationResults(derivationData) {\r\n    //console.log(derivationData)\r\n    let data = derivationData.derivationTrails;\r\n    this.display = true;\r\n    this.tableHeader = data.header;\r\n    this.derivationList = [];\r\n    this.derivationList = data.assets;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.state) {\r\n      this.termName = this.state.termName;\r\n      this.entityId = this.state.entityId;\r\n      this.companyName = this.state.companyName;\r\n\r\n      this.getTermMngrResults();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTermMngrResults();\r\n    this.cols = [\r\n      { field: 'FY', header: 'Period', width: '6%', exportable: true },\r\n      { field: 'rank', header: 'Rank', width: '4%', exportable: true },\r\n      { field: 'value', header: 'Value', width: '10%', exportable: true },\r\n      { field: 'filingDate', header: 'Filing Date', width: '6%', exportable: true },\r\n      { field: 'percentVarianceWithPrevPeriod', header: 'Period Over Period Variance', width: '8%', exportable: true },\r\n      { field: 'percentVarianceWithPrevYear', header: 'Year Over Year Variance', width: '8%', exportable: true },\r\n      { field: 'resolvedExpression', header: 'Expression', width: '38%', exportable: true },\r\n      { field: 'validationMessages', header: 'Validation Messages', width: '22%', exportable: true },\r\n      { field: 'devrivationTrails', header: 'Derivation Trails', width: '11%', exportable: true }\r\n    ];\r\n    this.exportColumns = this.cols.map(col => ({ title: col.header, dataKey: col.field }));\r\n  }\r\n\r\n\r\n  exportData(table) {\r\n\r\n    table.value.forEach(item => {\r\n      item.percentVarianceWithPrevPeriod = item.percentVarianceWithPrevPeriod.toString().includes('e') ? item.percentVarianceWithPrevPeriod.toFixed() : item.percentVarianceWithPrevPeriod;\r\n      item.percentVarianceWithPrevYear = item.percentVarianceWithPrevYear.toString().includes('e') ? item.percentVarianceWithPrevYear.toFixed() : item.percentVarianceWithPrevYear;\r\n    });\r\n    table.exportCSV();\r\n  }\r\n\r\n  showAnnualData(event) {\r\n    let filterDataSet: any[] = [];\r\n    if (event.target.checked) {\r\n      this.allTermResults.forEach(term => {\r\n        if (this.quaterlyChecked && this.showMissPrdChecked) {\r\n          if ((term.isAnnual || term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.quaterlyChecked && !this.showMissPrdChecked) {\r\n          if ((term.isAnnual || term.isQtrly) && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.quaterlyChecked && this.showMissPrdChecked) {\r\n          if ((term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          if (term.isAnnual && !term.isQtrly && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    } else {\r\n      this.allTermResults.forEach(term => {\r\n        if (this.quaterlyChecked && this.showMissPrdChecked) {\r\n          if ((!term.isAnnual && term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.quaterlyChecked && !this.showMissPrdChecked) {\r\n          if (!term.isAnnual && term.isQtrly && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.quaterlyChecked && this.showMissPrdChecked) {\r\n          if ((!term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          this.termResults = [];\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    }\r\n  }\r\n\r\n  showQuaterlyData(event) {\r\n    let filterDataSet: any[] = [];\r\n    if (event.target.checked) {\r\n      this.allTermResults.forEach(term => {\r\n        if (this.annualChecked && this.showMissPrdChecked) {\r\n          if ((term.isAnnual || term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.annualChecked && !this.showMissPrdChecked) {\r\n          if ((term.isAnnual || term.isQtrly) && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.annualChecked && this.showMissPrdChecked) {\r\n          if ((!term.isAnnual && term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          if (!term.isAnnual && term.isQtrly && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    } else {\r\n      this.allTermResults.forEach(term => {\r\n        if (this.annualChecked && this.showMissPrdChecked) {\r\n          if ((term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.annualChecked && !this.showMissPrdChecked) {\r\n          if ((term.isAnnual && !term.isQtrly) && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.annualChecked && this.showMissPrdChecked) {\r\n          if ((!term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          this.termResults = [];\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    }\r\n  }\r\n  showMissingProductData(event) {\r\n    let filterDataSet: any[] = [];\r\n    if (event.target.checked) {\r\n      this.allTermResults.forEach(term => {\r\n\r\n        if (this.annualChecked && this.quaterlyChecked) {\r\n          if ((term.isAnnual || term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.annualChecked && !this.quaterlyChecked) {\r\n          if ((term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.annualChecked && this.quaterlyChecked) {\r\n          if ((!term.isAnnual && term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          if ((!term.isAnnual && !term.isQtrly) || term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    } else {\r\n      this.allTermResults.forEach(term => {\r\n\r\n        if (this.annualChecked && this.quaterlyChecked) {\r\n          if ((term.isAnnual || term.isQtrly) && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (this.annualChecked && !this.quaterlyChecked) {\r\n          if (term.isAnnual && !term.isQtrly && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else if (!this.annualChecked && this.quaterlyChecked) {\r\n          if (!term.isAnnual && term.isQtrly && !term.isMissingPrd) {\r\n            filterDataSet.push(this.populateData(term))\r\n          }\r\n        } else {\r\n          this.termResults = [];\r\n        }\r\n      })\r\n      this.termResults = [];\r\n      this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n    }\r\n  }\r\n\r\n  getPercentage(value) {\r\n    value = value * 100;\r\n    value = Math.round(value * 100) / 100;\r\n    return value + \"%\";\r\n  }\r\n\r\n  populateAnnualChartData() {\r\n    this.annualdata = {\r\n      labels: this.chartXdata,\r\n      datasets: [\r\n        {\r\n          label: 'Annual',\r\n          backgroundColor: \"#007ad9\",\r\n          data: this.chartYdata\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.options = {\r\n      title: {\r\n        display: true,\r\n        text: '',\r\n        fontSize: 16\r\n      },\r\n      legend: {\r\n        position: 'top'\r\n      },\r\n\r\n      scales: {\r\n        yAxes: [{\r\n           ticks: {\r\n              //stepSize: 100000,\r\n              suggestedMin: 0,\r\n              callback: function(value) {\r\n                 function formatNumber(value) {\r\n                  if (value) {\r\n                    var parts = value.toString().split(\".\");\r\n                    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                    return parts.join(\".\");\r\n                  } else return \"\";\r\n                 }\r\n                 //return '$' + formatNumber(value);\r\n                 return formatNumber(value);\r\n              }\r\n           }\r\n        }]\r\n     }\r\n    };\r\n  }\r\n\r\n\r\n  populateQuaterlyChartData() {\r\n    this.quaterlydata = {\r\n      labels: this.quaterlychartXdata,\r\n      datasets: [\r\n        {\r\n          label: 'Quarterly',\r\n          backgroundColor: \"#007ad9\",\r\n          data: this.quaterlychartYdata\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.quaterlyoptions = {\r\n      title: {\r\n        display: true,\r\n        text: '',\r\n        fontSize: 16\r\n      },\r\n      legend: {\r\n        position: 'top'\r\n      },\r\n      scales: {\r\n        yAxes: [{\r\n           ticks: {\r\n              //stepSize: 100000,\r\n              suggestedMin: 0,\r\n              callback: function(value) {\r\n                 function formatNumber(value) {\r\n                  if (value) {\r\n                    var parts = value.toString().split(\".\");\r\n                    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                    return parts.join(\".\");\r\n                  } else return \"\";\r\n                 }\r\n                 return formatNumber(value);\r\n              }\r\n           }\r\n        }]\r\n     }\r\n    };\r\n  }\r\n  openTermLink(data) {\r\n    let url: string = 'https://www.sec.gov/Archives/edgar/data/' + data.cik + '/' + data.accession + '-index.htm';\r\n    console.log(url);\r\n    window.open(url, \"_blank\");\r\n\r\n  }\r\n\r\n  getTermMngrResults() {\r\n    this.profileService.getTermMngrResults(this.termName, this.entityId).subscribe((response) => {\r\n      this.termResults = [];\r\n      this.allTermResults = [];\r\n      this.chartXdata = [];\r\n      this.quaterlychartXdata = [];\r\n\r\n      console.log(response);\r\n      response.forEach(termMgrRslt => {\r\n        this.termResults.push(this.populateData(termMgrRslt));\r\n        this.allTermResults.push(this.populateData(termMgrRslt));\r\n\r\n        if (termMgrRslt.FY >= this.range[0] && termMgrRslt.FY <= this.range[1]) { //filter chart data in year range\r\n          if (termMgrRslt.FQ === \"FY\") {\r\n            this.chartXdata.push(termMgrRslt.FY)\r\n            this.chartYdata.push(termMgrRslt.value)\r\n            this.populateAnnualChartData();\r\n          } else {\r\n            this.quaterlychartXdata.push(termMgrRslt.FY + \"-\" + termMgrRslt.FQ)\r\n            this.quaterlychartYdata.push(termMgrRslt.value)\r\n            this.populateQuaterlyChartData();\r\n          }\r\n        }\r\n\r\n      })\r\n      this.filterAnnualData();\r\n    },\r\n      (error) => console.log(error)\r\n    )\r\n\r\n  }\r\n\r\n  numberWithCommas(x) {\r\n    if (x) {\r\n      var parts = x.toString().split(\".\");\r\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n      return parts.join(\".\");\r\n    } else return \"\";\r\n}\r\n\r\n  populateData(termMgrRslt) {\r\n\r\n    return {\r\n      rank: termMgrRslt.rank, FY: termMgrRslt.FY, FQ: termMgrRslt.FQ, value: termMgrRslt.value, expression: termMgrRslt.expression, filingDate: termMgrRslt.filingDate,\r\n      percentVarianceWithPrevPeriod: termMgrRslt.percentVarianceWithPrevPeriod, percentVarianceWithPrevYear: termMgrRslt.percentVarianceWithPrevYear, resolvedExpression: termMgrRslt.resolvedExpression,\r\n      validationMessages: termMgrRslt.validationMessages, isAnnual: (termMgrRslt.FQ === \"FY\") ? true : false, isQtrly: (termMgrRslt.FQ !== \"FY\") ? true : false, isMissingPrd: (termMgrRslt.rank != 99) ? false : true, accession: termMgrRslt.accession, derivationTrails: termMgrRslt.derivationTrails\r\n    }\r\n\r\n  }\r\n\r\n  filterAnnualData() {\r\n    let filterDataSet = [];\r\n    this.annualChecked = true;\r\n    this.allTermResults.forEach(term => {\r\n      if (this.quaterlyChecked && this.showMissPrdChecked) {\r\n        if ((term.isAnnual || term.isQtrly) && term.isMissingPrd) {\r\n          filterDataSet.push(this.populateData(term))\r\n        }\r\n      } else if (this.quaterlyChecked && !this.showMissPrdChecked) {\r\n        if ((term.isAnnual || term.isQtrly) && !term.isMissingPrd) {\r\n          filterDataSet.push(this.populateData(term))\r\n        }\r\n      } else if (!this.quaterlyChecked && this.showMissPrdChecked) {\r\n        if (term.isAnnual && !term.isQtrly && term.isMissingPrd) {\r\n          filterDataSet.push(this.populateData(term))\r\n        }\r\n      } else {\r\n        if (term.isAnnual && !term.isQtrly && !term.isMissingPrd) {\r\n          filterDataSet.push(this.populateData(term))\r\n        }\r\n      }\r\n    })\r\n    this.termResults = [];\r\n    this.termResults = this.filterDataBasedOnRange(filterDataSet);\r\n  }\r\n\r\n  filterDataBasedOnRange(filterDataSet) {\r\n    const termResults = [];\r\n    filterDataSet.forEach(item => {\r\n      if (item.FY >= this.range[0] && item.FY <= this.range[1]) {\r\n        termResults.push(item);\r\n      }\r\n    });\r\n    return termResults;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { TermRule } from '../domain/termRule';\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n\r\n\r\n    private companyListUrl = \"/EntitiesList\";\r\n    private divisionListUrl = \"/DivisionList\";\r\n    private disionSectorListUrl = \"/DivSectorList\";\r\n    private industryListUrl = \"/IndustryList\";\r\n    private sectorListUrl = \"/SectorList\";\r\n    private filerCategoryListUrl = \"/FilerCategory\";\r\n    private saveTermUrl = \"/api/TermRule/save\";\r\n    private removeTermUrl = \"/api/TermRule/DeleteRule\";\r\n    private processTermForCriteriaUrl = \"/api/TermRule/ProcessRuleWithCriteria\";\r\n    private processTermUrl = \"/api/TermRule/ProcessRule\"\r\n    private taxonomyElementsUrl = \"/api/TaxonomyElements\";\r\n    private taxonomyElementUrl = \"/api/TaxonomyElement\";\r\n    private resolvedExtndedExprUrl = \"/api/ResolveExtendedExpression\";\r\n    private completeCompanyListUrl = \"/api/EntityList\";\r\n    private processTermRuleEntityUrl: string = \"/api/TermRule/ProcessRuleForEntity/\";\r\n    private ProcessAllRulesWithCriteriaUrl = '/api/TermRule/ProcessAllRulesWithCriteria';\r\n    private cancelProcessingUrl = '/api/TermRule/CancelPendingProcessing';\r\n    private upLoadFileUrl = '/api/file/upload';\r\n    private termRuleListUrl = '/api/TermRulesList';\r\n    private userRolesListUrl = '/api/UserRolesList';\r\n    private processSelectedUrl = '/api/TermRule/SelectedProcessRule';\r\n    private processSelectedUrlWithCompany = '/api/TermRule/processTermsandEntities';\r\n    private processAccuracyTestTermsUrl = '/api/processAccuracyTestTerms';\r\n    private processAccuracyTestTermsAndEntitiesUrl = '/api/processAccuracyTestTermsAndEntities';\r\n    private resetProcessingUrl = '/api/TermRule/resetProcessing';\r\n    private autoLoginUrl = '/api/autoLogin';\r\n    private profileIdUrl = '/profileId';\r\n\r\n    // private companyListUrl = \"https://localhost:18081/EntitiesList\";\r\n    // private divisionListUrl = \"https://localhost:18081/DivisionList\";\r\n    // private disionSectorListUrl = \"https://localhost:18081/DivSectorList\";\r\n    // private industryListUrl = \"https://localhost:18081/IndustryList\";\r\n    // private sectorListUrl = \"https://localhost:18081/SectorList\";\r\n    // private filerCategoryListUrl = \"https://localhost:18081/FilerCategory\";\r\n    // private saveTermUrl = \"https://localhost:18081/api/TermRule/save\";\r\n    // private removeTermUrl = \"https://localhost:18081/api/TermRule/DeleteRule\";\r\n    // private processTermForCriteriaUrl = \"https://localhost:18081/api/TermRule/ProcessRuleWithCriteria\";\r\n    // private processTermUrl = \"https://localhost:18081/api/TermRule/ProcessRule\"\r\n    // private taxonomyElementsUrl = \"https://localhost:18081/api/TaxonomyElements\";\r\n    // private taxonomyElementUrl = \"https://localhost:18081/api/TaxonomyElement\";\r\n    // private resolvedExtndedExprUrl = \"https://localhost:18081/api/ResolveExtendedExpression\";\r\n    // private completeCompanyListUrl = \"https://localhost:18081/api/EntityList\";\r\n    // private processTermRuleEntityUrl: string = \"https://localhost:18081/api/TermRule/ProcessRuleForEntity/\";\r\n    // private ProcessAllRulesWithCriteriaUrl = 'https://localhost:18081/api/TermRule/ProcessAllRulesWithCriteria';\r\n    // private cancelProcessingUrl = 'https://localhost:18081/api/TermRule/CancelPendingProcessing';\r\n    // private upLoadFileUrl = 'https://localhost:18081/api/file/upload';\r\n    // private termRuleListUrl = 'https://localhost:18081/api/TermRulesList';\r\n    // private userRolesListUrl = 'https://localhost:18081/api/UserRolesList';\r\n    // private processSelectedUrl = 'https://localhost:18081/api/TermRule/SelectedProcessRule';\r\n    // private processAccuracyTestTermsUrl = 'https://localhost:18081/api/processAccuracyTestTerms';\r\n    // private resetProcessingUrl = 'https://localhost:18081/api/TermRule/resetProcessing';\r\n    // private autoLoginUrl = 'https://localhost:18081/api/autoLogin';\r\n\r\n    fullname: string;\r\n    constructor(private http: Http, private rule: TermRule) { }\r\n\r\n    getProfileId() {\r\n      console.log('Util: getProfileId() ...');\r\n      return this.http.get(`${this.profileIdUrl}`).pipe(map(\r\n        (response: Response) => {\r\n          const data = response;\r\n          return data;\r\n        }\r\n      ))\r\n    }\r\n\r\n    getCompanyList() {\r\n        console.log('Util : getCompanyList()...');\r\n        return this.http.get(`${this.companyListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getCompleteCompanyList() {\r\n        console.log('Util : getCompanyList()...');\r\n        return this.http.get(`${this.completeCompanyListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getDivisionList() {\r\n        console.log('Util : getDivisionList()...');\r\n        return this.http.get(`${this.divisionListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getIndustryList() {\r\n        console.log('Util : getIndustryList()...');\r\n        return this.http.get(`${this.industryListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getSectorList() {\r\n        console.log('Util : getSectorList()...');\r\n        return this.http.get(`${this.sectorListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getFilerCategoryList() {\r\n        console.log('Util : getFilerCategoryList()...');\r\n        return this.http.get(`${this.filerCategoryListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getDivSectorList() {\r\n        console.log('Util : getDivSectorList()...');\r\n        return this.http.get(`${this.disionSectorListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    saveTerm(rule: TermRule) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({\r\n            id: rule.id, termId: rule.termId, name: rule.name, description: rule.description, type: rule.type, periodType: rule.periodType,\r\n            includeInAccuracyTests: rule.includeInAccuracyTests, lastModified: rule.lastModified, order: rule.order, processingStatus: rule.processingStatus, priorityGroup: rule.priorityGroup,\r\n            financialStatement: rule.financialStatement,\r\n            expressions: rule.expressions, validationExpressions: rule.validationExpressions,\r\n            derivedZeroExpressions: rule.derivedZeroExpressions, overrides: rule.overrides\r\n        });\r\n        // const body = JSON.stringify({termRule})\r\n        headers.append('Content-Type', 'application/json');\r\n        //   return this.http.put(`${this.saveTermUrl}`, body, {\r\n        //     headers: headers\r\n        // }).pipe(map((data: Response) => data.json()));\r\n\r\n        return this.http.put(`${this.saveTermUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n\r\n    }\r\n\r\n    removeTerm(termId) {\r\n        console.log(\"Remove Rule : \" + termId);\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ id: termId });\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(`${this.removeTermUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    };\r\n    processTermForCriteria(termId: string, division: string, sector: string, sic: string, filerCategory: string) {\r\n        console.log(\"processTermForCriteria : \" + termId);\r\n        const headers = new Headers();\r\n        let userid = localStorage.getItem(\"userid\");\r\n        const body = JSON.stringify({ termId: termId, userid: userid, division: division, sector: sector, sic: sic, filerCategory: filerCategory });\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(`${this.processTermForCriteriaUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n\r\n    processTerm(rule: TermRule) {\r\n        console.log(\"processTerm : \" + rule);\r\n        const headers = new Headers();\r\n        let userid: string = localStorage.getItem(\"userid\");\r\n        const body = JSON.stringify({\r\n            id: rule.id, userid: userid, termId: rule.termId, name: rule.name, description: rule.description, type: rule.type, periodType: rule.periodType,\r\n            includeInAccuracyTests: rule.includeInAccuracyTests, lastModified: rule.lastModified, order: rule.order, processingStatus: rule.processingStatus, priorityGroup: rule.priorityGroup,\r\n            financialStatement: rule.financialStatement,\r\n            expressions: rule.expressions, validationExpressions: rule.validationExpressions,\r\n            derivedZeroExpressions: rule.derivedZeroExpressions, overrides: rule.overrides\r\n        });\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(`${this.processTermUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n    getTaxonomyElements(q: string, isTextBlock: boolean) {\r\n        console.log('UtilService : getTaxonomyElements() with q ' + q);\r\n        return this.http.get(`${this.taxonomyElementsUrl}?q=` + q + `&isTextBlock=` + isTextBlock).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            },\r\n            (error => {\r\n                console.log('no data')\r\n            })\r\n        ));\r\n    }\r\n\r\n    getTaxonomyElement(id: string) {\r\n        console.log('UtilService : getTaxonomyElement() with id ' + id);\r\n        return this.http.get(`${this.taxonomyElementUrl}?id=` + id).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            },\r\n            (error => {\r\n                console.log('no data')\r\n            })\r\n        ));\r\n    }\r\n\r\n    extendedEntityLookup(query: any) {\r\n        console.log('UtilService : extendedEntityLookup() with query ' + query);\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ division: query.division, sector: query.sector, sic: query.sic, filerCategory: query.filerCategory, expression: query.expression });\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(`${this.resolvedExtndedExprUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    processTerms(termId: string, entityId: string, processId: string): Observable<any> {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ termId: termId, entityId: entityId, processId: processId, userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.put(`${this.processTermRuleEntityUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    processAllTermWithCriteria(division: string, sector: string, sic: string, filerCategory: string, entityId: string, isNewAction: boolean): Observable<any> {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ division: division, sector: sector, sic: sic, filerCategory: filerCategory, entityId: entityId, isNewAction: isNewAction, userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.put(`${this.ProcessAllRulesWithCriteriaUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    cancelProcessing() {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.put(`${this.cancelProcessingUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    resetProcessing() {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.put(`${this.resetProcessingUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    uploadLookupReferenceFile(file) {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ file: file });\r\n        headers.append('Content-Type', 'multipart/form-data');\r\n        console.log(body);\r\n        return this.http.put(`${this.upLoadFileUrl}`, file, {\r\n\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    getTermRuleList() {\r\n        console.log('UtilService : getTermRuleList()...');\r\n        return this.http.get(`${this.termRuleListUrl}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    getUserRolesList() {\r\n        console.log('UtilService : getUserRolesList()...');\r\n\r\n        return this.http.get(`${this.userRolesListUrl + \"/\" + localStorage.getItem(\"userid\")}`).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n    processSelctedTerms(termIds: any[]): Observable<any> {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ termIds: termIds, userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.put(`${this.processSelectedUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n    processSelctedTermsWithCompany(terms, entities): Observable<any> {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ terms: terms, entities: entities, userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.post(`${this.processSelectedUrlWithCompany}`, body, {\r\n            headers: headers\r\n        }).pipe(map((data: Response) => {\r\n            const res = data;\r\n            return res;\r\n        }\r\n        ))\r\n    }\r\n\r\n\r\n\r\n    processAccuTerms(userId: any): Observable<any> {\r\n        return this.http.get(`${this.processAccuracyTestTermsUrl}?process=` + true + `&userId=` + localStorage.getItem(\"userid\")).pipe(map(\r\n            (response: Response) => {\r\n                return response;\r\n            },\r\n            (error => {\r\n                console.log('no data')\r\n            })\r\n        ));\r\n    }\r\n\r\n    processAccuTermsForTermsAndEntities(terms: any[], entities: any[]): Observable<any> {\r\n      if (terms != null && terms.length == 0 && entities == null) {\r\n        this.processAccuTerms(localStorage.getItem(\"userid\")); //original AccuracyTest function from Term Process Page\r\n      } else {\r\n        const headers = new Headers();\r\n        const body = JSON.stringify({ terms: terms, entities: entities, userid: localStorage.getItem(\"userid\") });\r\n        headers.append('Content-Type', 'application/json');\r\n        console.log(body);\r\n        return this.http.post(`${this.processAccuracyTestTermsAndEntitiesUrl}`, body, {\r\n          headers: headers\r\n        }).pipe(map(\r\n            (data: Response) => {\r\n                return data;\r\n            },\r\n            (error => {\r\n                console.log('no data')\r\n            })\r\n        ));\r\n      }\r\n    }\r\n\r\n\r\n    autoLogin(): Observable<any> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append(\"access-control-allow-origin\", \"*\");\r\n        const body = JSON.stringify({ username: 'username', password: 'password' });\r\n        return this.http.post(`${this.autoLoginUrl}`, body, {\r\n            headers: headers\r\n        }).pipe(map(\r\n            (response: Response) => {\r\n                const data = response.json();\r\n                if (data.resultObject != null) {\r\n                    this.fullname = data.resultObject.fullUserName;\r\n\r\n                    localStorage.setItem(\"userName\", data.resultObject.fullUserName);\r\n                    localStorage.setItem(\"userid\", data.resultObject.userid);\r\n                    localStorage.setItem(\"userEmail\", data.resultObject.email);\r\n                    localStorage.setItem('currentUser', JSON.stringify(this.fullname));\r\n                    localStorage.setItem('user', JSON.stringify(data.resultObject.userid))\r\n                }\r\n                ;\r\n                return data;\r\n            }\r\n        ));\r\n    }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}